"d2dc882b8dddcd208e3d1f9c69cc66ce93f814ed"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("
" 0 1 (fontified t)) . 93) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1)) nil (23730 11737 224430 918000) 0 nil]) ((#("
" 0 1 (fontified t)) . 407)) nil (23730 11737 224446 272000) 0 nil]) ((#("provide " 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 573)) nil (23730 11737 224453 583000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 597) (#("(" 0 1 (fontified t)) . 573) 580) nil (23730 11737 224462 486000) 0 nil]) ((564 . 573) (590 . 591) (#(")" 0 1 (fontified t)) . -563) (t 23728 54003 7041 549000)) nil (23730 11737 224472 440000) 0 nil]) ((481 . 482) (t 23728 53982 294546 194000)) nil (23728 54002 997235 546000) 0 nil]) ((513 . 514)) nil (23728 53982 203476 825000) 0 nil]) ((#("e" 0 1 (fontified t)) . 512) (undo-tree-id78 . 1) (undo-tree-id79 . 1)) nil (23728 53982 203508 740000) 0 nil]) ((507 . 516) (#("t" 0 1 (fontified t)) . -507) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("e" 0 1 (fontified t)) . -508) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("s" 0 1 (fontified t)) . -509) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t)) . -510) (undo-tree-id86 . -1) (undo-tree-id87 . -1) 511 (506 . 511) (505 . 506) (#(" " 0 1 (fontified t)) . -505) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 506 (505 . 506) (526 . 527) (#(")" 0 1 (fontified t)) . -505) (504 . 506) (#("(" 0 1 (fontified nil)) . -504) (504 . 505)) nil (23728 53982 203558 630000) 0 nil]) ((484 . 491) (480 . 484) (#("1" 0 1 (fontified t face racket-selfeval-face)) . -480) (undo-tree-id90 . -1) (undo-tree-id91 . -1) 481 (470 . 481) (469 . 471) (#("(" 0 1 (fontified nil)) . -469) (468 . 470)) nil (23728 53982 203582 949000) 0 nil]) ((#("      " 0 1 (fontified nil) 1 6 (fontified nil)) . 468) (undo-tree-id92 . -1) (#("
" 0 1 (fontified t)) . -469) (undo-tree-id93 . -1) 457) nil (23728 53982 203599 558000) 0 nil]) ((#("
" 0 1 (fontified t)) . 470)) nil (23728 53982 203604 909000) 0 nil]) ((#("    ; `(h2 ((class \"PageHeader\")) ,@children)
" 0 4 (fontified t) 4 6 (fontified t face font-lock-comment-delimiter-face) 6 13 (fontified t face font-lock-comment-face) 13 18 (fontified t face font-lock-comment-face) 18 19 (fontified t face font-lock-comment-face) 19 28 (fontified t face font-lock-comment-face) 28 31 (fontified t face font-lock-comment-face) 31 43 (fontified t face font-lock-comment-face) 43 45 (fontified t face font-lock-comment-face) 45 46 (fontified t face font-lock-comment-face)) . 470) (undo-tree-id94 . -4) (undo-tree-id95 . -11) (undo-tree-id96 . -11) 481) nil (23728 53982 203626 943000) 0 nil]) ((#("(txexpr 'PageHeader empty children)" 0 8 (fontified t) 8 19 (fontified t face racket-selfeval-face) 19 20 (fontified t) 20 25 (fontified t face font-lock-builtin-face) 25 34 (fontified t) 34 35 (fontified t)) . 469)) nil (23728 53982 203632 182000) 0 nil]) ((468 . 469) (#("      " 0 6 (fontified nil)) . 468) (#("
" 0 1 (fontified t)) . -468) 467) nil (23728 53982 203638 449000) 0 nil]) ((423 . 426) (416 . 423) (#("(PageHeader . children)" 0 1 (fontified t) 1 11 (fontified t face font-lock-function-name-face) 11 23 (fontified t)) . 416) (t 23728 35805 965115 868000)) nil (23728 53982 203645 988000) 0 nil]) ((29 . 39) (#(" " 0 1 (fontified t)) . 29)) nil (23728 35805 950775 478000) 0 nil]) ((#("         txexpr
" 0 9 (fontified t) 9 15 (fontified t) 15 16 (fontified t)) . 59) (undo-tree-id70 . 1) (undo-tree-id71 . 6) (undo-tree-id72 . 6) (undo-tree-id73 . 6) (undo-tree-id74 . 6) (undo-tree-id75 . -10) (undo-tree-id76 . -8) (undo-tree-id77 . -8) 67) nil (23728 35805 950799 339000) 0 nil]) ((#("e" 0 1 (fontified t)) . 497) (t 23728 35783 915267 176000)) nil (23728 35805 950804 145000) 0 nil]) ((#("e" 0 1 (fontified t)) . 69) (undo-tree-id69 . 1) (t 23728 35758 372107 575000)) nil (23728 35783 901747 780000) 0 nil]) ((76 . 85) (90 . 91) (#(")" 0 1 (fontified t)) . -75) (undo-tree-id36 . 1) (undo-tree-id37 . -1) (59 . 68) (66 . 67) (#(")" 0 1 (fontified t)) . -58) (43 . 52) (49 . 50) (#(")" 0 1 (fontified t)) . -42) 20) nil (23728 35758 351082 218000) 0 nil]) ((51 . 58) (50 . 51) 44) nil (23728 35758 351101 380000) 0 nil]) ((#("
" 0 1 (fontified t)) . 66) (undo-tree-id38 . 1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1)) nil (23728 35758 351127 920000) 0 nil]) ((65 . 66) 51) nil (23728 35758 351135 645000) 0 nil]) ((#("require " 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 51) (undo-tree-id45 . 8)) nil (23728 35758 351143 352000) 0 nil]) ((#("require " 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 44) (undo-tree-id46 . 8) (undo-tree-id47 . 8)) nil (23728 35758 351157 968000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 81) (#("(" 0 1 (fontified t)) . 59) (undo-tree-id48 . 1)) nil (23728 35758 351166 497000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 58) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . 1) (#("(" 0 1 (fontified t)) . -44) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 45) nil (23728 35758 351195 985000) 0 nil]) ((#("O" 0 1 (fontified t)) . -86) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . 1) 87 (86 . 87)) nil (23728 35758 351212 239000) 0 nil]) ((507 . 516) (503 . 507) (490 . 503) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -490) (undo-tree-id61 . -1) (undo-tree-id62 . -1) 491 (490 . 491)) nil (23728 35758 351226 900000) 0 nil]) ((482 . 490) (481 . 483) (#("(" 0 1 (fontified nil)) . -481) (481 . 482) (#("'" 0 1 (fontified t)) . -481) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#("Q" 0 1 (fontified t face racket-selfeval-face)) . -482) (undo-tree-id65 . -1) (undo-tree-id66 . -1) 483 (480 . 483) (474 . 480) 467) nil (23728 35758 351250 603000) 0 nil]) ((#("     " 0 5 (fontified t)) . -521) (undo-tree-id67 . -5) (undo-tree-id68 . -5) 526 (520 . 526) 479) nil (23728 35758 351265 143000) 0 nil]) ((479 . 480)) nil (23728 35758 351270 752000) 0 nil]) ((519 . 525) (t 23728 35267 101386 766000)) nil (23728 35758 351275 509000) 0 nil] [nil nil ((480 . 481) (t 23728 35267 101386 766000)) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 480) (undo-tree-id34 . 1) (undo-tree-id35 . 1)) (23728 35648 929754 588000) 0 nil]) ((552 . 553) (525 . 526) (#("]" 0 1 (fontified nil)) . 551) (#("[" 0 1 (fontified t)) . 525)) nil (23728 35648 933514 134000) 0 nil]) ((#(" " 0 1 (fontified t)) . 519)) nil (23728 35267 87516 531000) 0 nil]) ((#(" " 0 1 (fontified t)) . 468)) nil (23728 35267 87522 486000) 0 nil]) ((520 . 522) (467 . 469) (#("]" 0 1 (fontified t)) . 518) (#("[" 0 1 (fontified t)) . -467) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 468 (t 23727 45736 723255 431000)) nil (23728 35267 87554 321000) 0 nil]) ((#("(define (style component css-list [css-string \"\"])
  (cond
    ((null? css-list) (string-append
                       \".\"
                       (symbol->string component)
                       \"{ \"
                       css-string \"}\"))
    (else (style
           component
           (cdr css-list)
           (string-append
            css-string
            (symbol->string (caar css-list))
            \": \"
            (cdar css-list)
            \"; \")))))" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 14 (fontified t face font-lock-function-name-face) 14 46 (fontified t) 46 48 (fontified t face font-lock-string-face) 48 54 (fontified t) 54 58 (fontified t face font-lock-keyword-face) 58 65 (fontified t) 65 70 (fontified t face font-lock-builtin-face) 70 82 (fontified t) 82 95 (fontified t face font-lock-builtin-face) 95 119 (fontified t) 119 122 (fontified t face font-lock-string-face) 122 147 (fontified t) 147 161 (fontified t face font-lock-builtin-face) 161 196 (fontified t) 196 200 (fontified t face font-lock-string-face) 200 235 (fontified t) 235 238 (fontified t face font-lock-string-face) 238 246 (fontified t) 246 250 (fontified t face font-lock-keyword-face) 250 291 (fontified t) 291 294 (fontified t face font-lock-builtin-face) 294 317 (fontified t) 317 330 (fontified t face font-lock-builtin-face) 330 367 (fontified t) 367 381 (fontified t face font-lock-builtin-face) 381 383 (fontified t) 383 387 (fontified t face font-lock-builtin-face) 387 411 (fontified t) 411 415 (fontified t face font-lock-string-face) 415 429 (fontified t) 429 433 (fontified t face font-lock-builtin-face) 433 439 (fontified t) 439 444 (fontified t) 444 456 (fontified t) 456 460 (fontified t face font-lock-string-face) 460 465 (fontified t)) . 87) (undo-tree-id12 . 224) (undo-tree-id13 . -201)) nil (23727 45736 707358 68000) 0 nil]) ((79 . 83) (73 . 79) (71 . 73) (#("u" 0 1 (fontified t face font-lock-string-face)) . -71) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -72) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -73) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -74) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 75 (71 . 75) (70 . 72) (#("\"" 0 1 (fontified nil)) . -70) (70 . 71) (#("u" 0 1 (fontified t)) . -70) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("t" 0 1 (fontified t)) . -71) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("i" 0 1 (fontified t)) . -72) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#("l" 0 1 (fontified nil)) . -73) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("s" 0 1 (fontified t)) . -74) (undo-tree-id30 . -1) (undo-tree-id31 . -1) 75 (69 . 75) (62 . 69) (61 . 63) (#("(" 0 1 (fontified nil)) . -61) (61 . 62) (60 . 61) (t 23726 41153 972348 471000) 44) nil (23727 45736 707450 936000) 0 nil] [nil nil ((nil rear-nonsticky nil 60 . 61) (#("
" 0 1 (fontified nil)) . -301) (60 . 302) 44 (t 23726 41153 972348 471000)) ((#("
(define (style component css-list [css-string \"\"])
  (cond
    ((null? css-list) (string-append
                       \".\"
                       (symbol->string component)
                       \"{ \"
                       css-string \"}\"))
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil) 2 8 (fontified nil face font-lock-keyword-face) 8 10 (fontified nil) 10 15 (fontified nil face font-lock-function-name-face) 15 47 (fontified nil) 47 49 (fontified nil face font-lock-string-face) 49 52 (fontified nil) 52 55 (fontified t) 55 59 (fontified t face font-lock-keyword-face) 59 66 (fontified t) 66 71 (fontified t face font-lock-builtin-face) 71 83 (fontified t) 83 96 (fontified t face font-lock-builtin-face) 96 120 (fontified t) 120 123 (fontified t face font-lock-string-face) 123 148 (fontified t) 148 162 (fontified t face font-lock-builtin-face) 162 197 (fontified t) 197 201 (fontified t face font-lock-string-face) 201 202 (fontified t) 202 236 (fontified nil) 236 239 (fontified nil face font-lock-string-face) 239 241 (fontified nil) 241 242 (fontified nil)) . 60) (undo-tree-id0 . -241) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -241) (undo-tree-id5 . 241) (undo-tree-id6 . -47) (undo-tree-id7 . -48) (undo-tree-id8 . 241) (undo-tree-id9 . -2) (undo-tree-id10 . -54) (undo-tree-id11 . -55) (301 . 302) (nil rear-nonsticky t 60 . 61)) (23727 45595 42850 365000) 0 nil]) nil nil (23727 45595 43680 765000) 0 nil] #1# 3001 42 nil)