"21bb4b7b2d547473241c9018f1fab45ba58bd157"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#3=[nil nil ((#("
" 0 1 (fontified t)) . 2730) (t 23765 3964 689786 397000)) nil (23765 3981 48264 218000) 0 nil]) ((1 . 3095) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    target_timeline: String,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::default(),
            target_timeline: String::new(),
            current_user: None,
        }
    }

    /// Create a blank StreamManager copy
    pub fn blank_copy(&self) -> Self {
        StreamManager { ..self.clone() }
    }
    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn configure_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.update(id, timeline);
        receiver.maybe_subscribe(timeline);
        StreamManager {
            id,
            current_user: Some(user),
            target_timeline: timeline.clone(),
            ..self.clone()
        }
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.update(self.id, &self.target_timeline.clone());
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => {

                        Ok(Async::Ready(Some(json!(
                            {\"event\": event,
                             \"payload\": payload,}
                        ))))
                    }
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 451 (fontified t face font-lock-variable-name-face) 451 453 (fontified t) 453 459 (fontified t face font-lock-type-face) 459 465 (fontified t) 465 477 (fontified t face font-lock-variable-name-face) 477 479 (fontified t) 479 485 (fontified t face font-lock-type-face) 485 486 (fontified t) 486 490 (fontified t face font-lock-type-face) 490 495 (fontified t) 495 499 (fontified t face font-lock-keyword-face) 499 500 (fontified t) 500 513 (fontified t face font-lock-type-face) 513 516 (fontified t) 516 520 (fontified t) 520 523 (fontified t face font-lock-keyword-face) 523 524 (fontified t) 524 526 (fontified t face font-lock-keyword-face) 526 527 (fontified t) 527 530 (fontified t face font-lock-function-name-face) 530 531 (fontified t) 531 539 (fontified t face font-lock-variable-name-face) 539 541 (fontified t) 541 549 (fontified t face font-lock-type-face) 549 552 (fontified t) 552 553 (fontified t syntax-table #1=(1)) 553 554 (fontified t) 554 558 (fontified t face font-lock-type-face) 558 569 (fontified t) 569 582 (fontified t face font-lock-type-face) 582 597 (fontified t) 597 605 (fontified t face font-lock-variable-name-face) 605 607 (fontified t) 607 610 (fontified t face font-lock-type-face) 610 616 (fontified t) 616 621 (fontified t face font-lock-type-face) 621 651 (fontified t) 651 653 (fontified t face font-lock-variable-name-face) 653 655 (fontified t) 655 659 (fontified t face font-lock-type-face) 659 684 (fontified t) 684 699 (fontified t face font-lock-variable-name-face) 699 701 (fontified t) 701 707 (fontified t face font-lock-type-face) 707 728 (fontified t) 728 740 (fontified t face font-lock-variable-name-face) 740 742 (fontified t) 742 746 (fontified t face font-lock-type-face) 746 769 (fontified t) 769 807 (fontified t face font-lock-doc-face) 807 811 (fontified t) 811 814 (fontified t face font-lock-keyword-face) 814 815 (fontified t) 815 817 (fontified t face font-lock-keyword-face) 817 818 (fontified t) 818 828 (fontified t face font-lock-function-name-face) 828 830 (fontified t) 830 834 (fontified t face font-lock-keyword-face) 834 837 (fontified t) 837 838 (fontified t syntax-table #1#) 838 839 (fontified t) 839 843 (fontified t face font-lock-type-face) 843 854 (fontified t) 854 867 (fontified t face font-lock-type-face) 867 872 (fontified t) 872 876 (fontified t face font-lock-keyword-face) 876 897 (fontified t) 897 971 (fontified t face font-lock-doc-face) 971 975 (fontified t) 975 978 (fontified t face font-lock-keyword-face) 978 979 (fontified t) 979 981 (fontified t face font-lock-keyword-face) 981 982 (fontified t) 982 996 (fontified t face font-lock-function-name-face) 996 998 (fontified t) 998 1002 (fontified t face font-lock-keyword-face) 1002 1004 (fontified t) 1004 1012 (fontified t face font-lock-variable-name-face) 1012 1015 (fontified t) 1015 1016 (fontified t face font-lock-type-face) 1016 1021 (fontified t face font-lock-type-face) 1021 1023 (fontified t) 1023 1027 (fontified t face font-lock-variable-name-face) 1027 1029 (fontified t) 1029 1033 (fontified t face font-lock-type-face) 1033 1036 (fontified t) 1036 1037 (fontified t syntax-table #1#) 1037 1038 (fontified t) 1038 1042 (fontified t face font-lock-type-face) 1042 1045 (fontified t) 1045 1053 (fontified t) 1053 1056 (fontified t face font-lock-keyword-face) 1056 1057 (fontified t) 1057 1059 (fontified t face font-lock-variable-name-face) 1059 1062 (fontified t) 1062 1066 (fontified t face font-lock-type-face) 1066 1086 (fontified t) 1086 1089 (fontified t face font-lock-keyword-face) 1089 1090 (fontified t) 1090 1093 (fontified t face font-lock-keyword-face) 1093 1094 (fontified t) 1094 1102 (fontified t face font-lock-variable-name-face) 1102 1105 (fontified t) 1105 1109 (fontified t face font-lock-keyword-face) 1109 1133 (fontified t) 1133 1160 (fontified t face font-lock-string-face) 1160 1254 (fontified t) 1254 1267 (fontified t face font-lock-type-face) 1267 1298 (fontified t) 1298 1310 (fontified t face font-lock-variable-name-face) 1310 1312 (fontified t) 1312 1316 (fontified t face font-lock-type-face) 1316 1324 (fontified t) 1324 1336 (fontified t) 1336 1351 (fontified t face font-lock-variable-name-face) 1351 1370 (fontified t) 1370 1385 (fontified t) 1385 1389 (fontified t face font-lock-keyword-face) 1389 1417 (fontified t) 1417 1421 (fontified t face font-lock-keyword-face) 1421 1422 (fontified t) 1422 1428 (fontified t face font-lock-type-face) 1428 1429 (fontified t) 1429 1432 (fontified t face font-lock-keyword-face) 1432 1433 (fontified t) 1433 1446 (fontified t face font-lock-type-face) 1446 1453 (fontified t) 1453 1457 (fontified t face font-lock-keyword-face) 1457 1458 (fontified t) 1458 1462 (fontified t face font-lock-type-face) 1462 1465 (fontified t) 1465 1470 (fontified t face font-lock-type-face) 1470 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (fontified t) 1481 1486 (fontified t face font-lock-type-face) 1486 1489 (fontified t) 1489 1494 (fontified t face font-lock-type-face) 1494 1501 (fontified t) 1501 1503 (fontified t face font-lock-keyword-face) 1503 1504 (fontified t) 1504 1508 (fontified t face font-lock-function-name-face) 1508 1510 (fontified t) 1510 1513 (fontified t face font-lock-keyword-face) 1513 1514 (fontified t) 1514 1518 (fontified t face font-lock-keyword-face) 1518 1521 (fontified t) 1521 1522 (syntax-table #1# fontified t) 1522 1523 (fontified t) 1523 1527 (fontified t face font-lock-type-face) 1527 1528 (fontified t) 1528 1534 (fontified t face font-lock-type-face) 1534 1535 (fontified t) 1535 1539 (fontified t face font-lock-type-face) 1539 1541 (fontified t) 1541 1545 (fontified t face font-lock-type-face) 1545 1548 (fontified t) 1548 1552 (fontified t face font-lock-type-face) 1552 1554 (fontified t) 1554 1559 (fontified t face font-lock-type-face) 1559 1571 (fontified t) 1571 1574 (fontified t face font-lock-keyword-face) 1574 1575 (fontified t) 1575 1578 (fontified t face font-lock-keyword-face) 1578 1579 (fontified t) 1579 1587 (fontified t face font-lock-variable-name-face) 1587 1590 (fontified t) 1590 1594 (fontified t face font-lock-keyword-face) 1594 1618 (fontified t) 1618 1641 (fontified t face font-lock-string-face) 1641 1668 (fontified t) 1668 1672 (fontified t face font-lock-keyword-face) 1672 1678 (fontified t) 1678 1682 (fontified t face font-lock-keyword-face) 1682 1717 (fontified t) 1717 1722 (fontified t face font-lock-keyword-face) 1722 1753 (fontified t) 1753 1755 (fontified t face font-lock-type-face) 1755 1756 (fontified t) 1756 1761 (fontified t face font-lock-type-face) 1761 1763 (fontified t) 1763 1768 (fontified t face font-lock-type-face) 1768 1769 (fontified t) 1769 1773 (fontified t face font-lock-type-face) 1773 1784 (fontified t) 1784 1785 (syntax-table #1# fontified t) 1785 1788 (fontified t) 1788 1804 (fontified t) 1804 1807 (fontified t face font-lock-keyword-face) 1807 1808 (fontified t) 1808 1812 (fontified t face font-lock-variable-name-face) 1812 1815 (fontified t) 1815 1819 (fontified t face font-lock-keyword-face) 1819 1820 (fontified t) 1820 1911 (fontified t) 1911 1938 (fontified t face font-lock-string-face) 1938 1939 (syntax-table #2=(15) fontified t face font-lock-string-face) 1939 1940 (fontified t face font-lock-string-face) 1940 1960 (fontified t) 1960 1963 (fontified t face font-lock-keyword-face) 1963 1964 (fontified t) 1964 1974 (fontified t face font-lock-variable-name-face) 1974 2013 (fontified t) 2013 2016 (fontified t face font-lock-keyword-face) 2016 2017 (fontified t) 2017 2021 (fontified t face font-lock-variable-name-face) 2021 2055 (fontified t) 2055 2058 (fontified t face font-lock-keyword-face) 2058 2059 (fontified t) 2059 2064 (fontified t face font-lock-variable-name-face) 2064 2072 (fontified t) 2072 2079 (fontified t face font-lock-string-face) 2079 2097 (fontified t) 2097 2111 (fontified t face font-lock-string-face) 2111 2130 (fontified t) 2130 2133 (fontified t face font-lock-keyword-face) 2133 2134 (fontified t) 2134 2138 (fontified t face font-lock-variable-name-face) 2138 2172 (fontified t) 2172 2175 (fontified t face font-lock-keyword-face) 2175 2176 (fontified t) 2176 2183 (fontified t face font-lock-variable-name-face) 2183 2191 (fontified t) 2191 2200 (fontified t face font-lock-string-face) 2200 2231 (fontified t) 2231 2234 (fontified t face font-lock-keyword-face) 2234 2235 (fontified t) 2235 2239 (fontified t face font-lock-variable-name-face) 2239 2273 (fontified t) 2273 2276 (fontified t face font-lock-keyword-face) 2276 2277 (fontified t) 2277 2286 (fontified t face font-lock-variable-name-face) 2286 2287 (fontified t) 2287 2288 (fontified t) 2288 2294 (fontified t) 2294 2303 (fontified t face font-lock-string-face) 2303 2305 (fontified t) 2305 2315 (fontified t face font-lock-string-face) 2315 2317 (fontified t) 2317 2320 (fontified t) 2320 2347 (fontified t) 2347 2375 (fontified t) 2375 2384 (fontified t face font-lock-string-face) 2384 2385 (syntax-table #2# fontified t face font-lock-string-face) 2385 2386 (fontified t face font-lock-string-face) 2386 2439 (fontified t) 2439 2444 (fontified t face font-lock-keyword-face) 2444 2495 (fontified t) 2495 2501 (fontified t face font-lock-type-face) 2501 2503 (fontified t) 2503 2515 (fontified t face font-lock-type-face) 2515 2520 (fontified t) 2520 2522 (fontified t face font-lock-keyword-face) 2522 2532 (fontified t) 2532 2546 (fontified t face font-lock-string-face) 2546 2548 (fontified t) 2548 2549 (syntax-table #1# fontified t) 2549 2550 (fontified t) 2550 2552 (fontified t face font-lock-type-face) 2552 2553 (fontified t) 2553 2558 (fontified t face font-lock-type-face) 2558 2560 (fontified t) 2560 2568 (fontified t face font-lock-type-face) 2568 2592 (fontified t) 2592 2598 (fontified t face font-lock-type-face) 2598 2600 (fontified t) 2600 2608 (fontified t face font-lock-type-face) 2608 2610 (fontified t) 2610 2614 (fontified t face font-lock-type-face) 2614 2615 (fontified t) 2615 2618 (fontified t face font-lock-keyword-face) 2618 2619 (fontified t) 2619 2624 (fontified t face font-lock-variable-name-face) 2624 2627 (fontified t) 2627 2629 (fontified t face font-lock-keyword-face) 2629 2659 (fontified t) 2659 2660 (syntax-table #1# fontified t) 2660 2687 (fontified t) 2687 2689 (fontified t face font-lock-type-face) 2689 2690 (fontified t) 2690 2695 (fontified t face font-lock-type-face) 2695 2697 (fontified t) 2697 2705 (fontified t face font-lock-type-face) 2705 2753 (fontified t) 2753 2754 (syntax-table #1# fontified t) 2754 2757 (fontified t) 2757 2758 (fontified t) 2758 2768 (fontified t) 2768 2782 (fontified t) 2782 2784 (fontified t face font-lock-type-face) 2784 2785 (fontified t) 2785 2790 (fontified t face font-lock-type-face) 2790 2792 (fontified t) 2792 2797 (fontified t face font-lock-type-face) 2797 2798 (fontified t) 2798 2802 (fontified t face font-lock-type-face) 2802 2803 (fontified t) 2803 2808 (fontified t face font-lock-preprocessor-face) 2808 2810 (fontified t) 2810 2839 (fontified t) 2839 2846 (fontified t face font-lock-string-face) 2846 2884 (fontified t) 2884 2893 (fontified t face font-lock-string-face) 2893 3000 (fontified t) 3000 3002 (fontified t face font-lock-type-face) 3002 3003 (fontified t) 3003 3008 (fontified t face font-lock-type-face) 3008 3010 (fontified t) 3010 3015 (fontified t face font-lock-type-face) 3015 3016 (fontified t) 3016 3020 (fontified t face font-lock-type-face) 3020 3024 (fontified t) 3024 3025 (syntax-table #1# fontified t) 3025 3026 (fontified t) 3026 3028 (fontified t face font-lock-type-face) 3028 3029 (fontified t) 3029 3034 (fontified t face font-lock-type-face) 3034 3036 (fontified t) 3036 3041 (fontified t face font-lock-type-face) 3041 3042 (fontified t) 3042 3046 (fontified t face font-lock-type-face) 3046 3062 (fontified t) 3062 3064 (fontified t face font-lock-type-face) 3064 3065 (fontified t) 3065 3070 (fontified t face font-lock-type-face) 3070 3072 (fontified t) 3072 3080 (fontified t face font-lock-type-face) 3080 3083 (fontified t) 3083 3084 (syntax-table #1# fontified t) 3084 3085 (fontified t) 3085 3087 (fontified t face font-lock-type-face) 3087 3088 (fontified t) 3088 3093 (fontified t face font-lock-type-face) 3093 3095 (fontified t) 3095 3103 (fontified t face font-lock-type-face) 3103 3118 (fontified t) 3118 3121 (fontified t face font-lock-type-face) 3121 3126 (fontified t) 3126 3127 (syntax-table #1# fontified t) 3127 3128 (fontified t) 3128 3131 (fontified t face font-lock-type-face) 3131 3154 (fontified t)) . 1) (undo-tree-id2297 . -1788) (undo-tree-id2298 . -1417) (undo-tree-id2299 . -1668) (undo-tree-id2300 . -1818) (undo-tree-id2301 . -1818) (undo-tree-id2302 . -971) (undo-tree-id2303 . -1818) (undo-tree-id2304 . -1818) (undo-tree-id2305 . -971) (undo-tree-id2306 . -1673) (undo-tree-id2307 . -1673) (undo-tree-id2308 . -1726) (undo-tree-id2309 . -1726) (undo-tree-id2310 . -1726) (undo-tree-id2311 . -1726) (undo-tree-id2312 . -1597) (undo-tree-id2313 . -1597) (undo-tree-id2314 . -1597) (undo-tree-id2315 . -400) (undo-tree-id2316 . -399) (undo-tree-id2317 . -1597) (undo-tree-id2318 . -400) (undo-tree-id2319 . -400) (undo-tree-id2320 . -400) (undo-tree-id2321 . -1668) (undo-tree-id2322 . -1733) (undo-tree-id2323 . -1417) (undo-tree-id2324 . -1668) (undo-tree-id2325 . -1668) (undo-tree-id2326 . -1417) (undo-tree-id2327 . -400) (undo-tree-id2328 . -1668) (undo-tree-id2329 . -1668) (undo-tree-id2330 . -1668) (undo-tree-id2331 . -1668) (undo-tree-id2332 . -1668) (undo-tree-id2333 . -1668) (undo-tree-id2334 . -1788) (undo-tree-id2335 . -1788) (undo-tree-id2336 . -971) (undo-tree-id2337 . -1788) (undo-tree-id2338 . -1788) (undo-tree-id2339 . -1788) (undo-tree-id2340 . -971) (undo-tree-id2341 . -1788) (undo-tree-id2342 . -1788) (undo-tree-id2343 . -971) (undo-tree-id2344 . -1788) (undo-tree-id2345 . -1788) (undo-tree-id2346 . -971) (undo-tree-id2347 . -1788) (undo-tree-id2348 . -1788) (undo-tree-id2349 . -1788) (undo-tree-id2350 . -971) (undo-tree-id2351 . -1788) (undo-tree-id2352 . -1788) (undo-tree-id2353 . -1788) (undo-tree-id2354 . -971) (undo-tree-id2355 . -1788) (undo-tree-id2356 . -1788) (undo-tree-id2357 . -971) (undo-tree-id2358 . -1788) (undo-tree-id2359 . -1788) (undo-tree-id2360 . -971) (undo-tree-id2361 . -1907) (undo-tree-id2362 . -1907) (undo-tree-id2363 . -971) (undo-tree-id2364 . -1907) (undo-tree-id2365 . -1907) (undo-tree-id2366 . -1907) (undo-tree-id2367 . -971) (undo-tree-id2368 . -1907) (undo-tree-id2369 . -1907) (undo-tree-id2370 . -1907) (undo-tree-id2371 . -971) (undo-tree-id2372 . -1907) (undo-tree-id2373 . -1907) (undo-tree-id2374 . -971) (undo-tree-id2375 . -1907) (undo-tree-id2376 . -1907) (undo-tree-id2377 . -971) (undo-tree-id2378 . -1914) (undo-tree-id2379 . -1914) (undo-tree-id2380 . -971) (undo-tree-id2381 . -1914) (undo-tree-id2382 . -1914) (undo-tree-id2383 . -1914) (undo-tree-id2384 . -971) (undo-tree-id2385 . -1914) (undo-tree-id2386 . -1914) (undo-tree-id2387 . -1914) (undo-tree-id2388 . -971) (undo-tree-id2389 . -1914) (undo-tree-id2390 . -1914) (undo-tree-id2391 . -971) (undo-tree-id2392 . -1914) (undo-tree-id2393 . -1914) (undo-tree-id2394 . -971) (undo-tree-id2395 . -2757) (undo-tree-id2396 . -2757) (undo-tree-id2397 . -971) (undo-tree-id2398 . -2757) (undo-tree-id2399 . -2757) (undo-tree-id2400 . -2757) (undo-tree-id2401 . -971) (undo-tree-id2402 . -2757) (undo-tree-id2403 . -2757) (undo-tree-id2404 . -2757) (undo-tree-id2405 . -971) (undo-tree-id2406 . -2757) (undo-tree-id2407 . -2757) (undo-tree-id2408 . -971) (undo-tree-id2409 . -2757) (undo-tree-id2410 . -2757) (undo-tree-id2411 . -971) (undo-tree-id2412 . -2757) (undo-tree-id2413 . -2757) (undo-tree-id2414 . -971) (undo-tree-id2415 . -2757) (undo-tree-id2416 . -2757) (undo-tree-id2417 . -2757) (undo-tree-id2418 . -971) (undo-tree-id2419 . -2757) (undo-tree-id2420 . -2757) (undo-tree-id2421 . -2757) (undo-tree-id2422 . -971) (undo-tree-id2423 . -2757) (undo-tree-id2424 . -2757) (undo-tree-id2425 . -971) (undo-tree-id2426 . -2757) (undo-tree-id2427 . -2757) (undo-tree-id2428 . -971) (undo-tree-id2429 . -2757) (undo-tree-id2430 . -2757) (undo-tree-id2431 . -971) (undo-tree-id2432 . -2757) (undo-tree-id2433 . -2757) (undo-tree-id2434 . -2757) (undo-tree-id2435 . -971) (undo-tree-id2436 . -2757) (undo-tree-id2437 . -2757) (undo-tree-id2438 . -2757) (undo-tree-id2439 . -971) (undo-tree-id2440 . -2757) (undo-tree-id2441 . -2757) (undo-tree-id2442 . -971) (undo-tree-id2443 . -2757) (undo-tree-id2444 . -2757) (undo-tree-id2445 . -971) (undo-tree-id2446 . -2757) (undo-tree-id2447 . -2757) (undo-tree-id2448 . -2757) (undo-tree-id2449 . -2757) (undo-tree-id2450 . -971) (undo-tree-id2451 . -2757) (undo-tree-id2452 . -2757) (undo-tree-id2453 . -2757) (undo-tree-id2454 . -971) (undo-tree-id2455 . -2757) (undo-tree-id2456 . -2757) (undo-tree-id2457 . -2757) (undo-tree-id2458 . -971) (undo-tree-id2459 . -2757) (undo-tree-id2460 . -2757) (undo-tree-id2461 . -971) (undo-tree-id2462 . -2757) (undo-tree-id2463 . -2757) (undo-tree-id2464 . -971) (undo-tree-id2465 . -2730) (undo-tree-id2466 . -2757) (undo-tree-id2467 . -971) (undo-tree-id2468 . -2730) (undo-tree-id2469 . -2730) (undo-tree-id2470 . -2757) (undo-tree-id2471 . -971) (undo-tree-id2472 . -2730) (undo-tree-id2473 . -2730) (undo-tree-id2474 . -2757) (undo-tree-id2475 . -971) (undo-tree-id2476 . -2730) (undo-tree-id2477 . -2757) (undo-tree-id2478 . -971) (undo-tree-id2479 . -2730) (undo-tree-id2480 . -2757) (undo-tree-id2481 . -971) (undo-tree-id2482 . -2757) (undo-tree-id2483 . -2730) (undo-tree-id2484 . -971) (undo-tree-id2485 . -2757) (undo-tree-id2486 . -2757) (undo-tree-id2487 . -2730) (undo-tree-id2488 . -971) (undo-tree-id2489 . -2757) (undo-tree-id2490 . -2757) (undo-tree-id2491 . -2730) (undo-tree-id2492 . -971) (undo-tree-id2493 . -2757) (undo-tree-id2494 . -2730) (undo-tree-id2495 . -971) (undo-tree-id2496 . -2757) (undo-tree-id2497 . -2730) (undo-tree-id2498 . -971) (undo-tree-id2499 . -2758) (undo-tree-id2500 . -2757) (undo-tree-id2501 . -971) (undo-tree-id2502 . -2758) (undo-tree-id2503 . -2758) (undo-tree-id2504 . -2757) (undo-tree-id2505 . -971) (undo-tree-id2506 . -2758) (undo-tree-id2507 . -2758) (undo-tree-id2508 . -2757) (undo-tree-id2509 . -971) (undo-tree-id2510 . -2758) (undo-tree-id2511 . -2757) (undo-tree-id2512 . -971) (undo-tree-id2513 . -2758) (undo-tree-id2514 . -2757) (undo-tree-id2515 . -971) (undo-tree-id2516 . -2810) (undo-tree-id2517 . -2758) (undo-tree-id2518 . -1820) (undo-tree-id2519 . -2810) (undo-tree-id2520 . -2810) (undo-tree-id2521 . -2758) (undo-tree-id2522 . -1820) (undo-tree-id2523 . -2810) (undo-tree-id2524 . -2810) (undo-tree-id2525 . -2758) (undo-tree-id2526 . -1820) (undo-tree-id2527 . -2810) (undo-tree-id2528 . -2758) (undo-tree-id2529 . -1820) (undo-tree-id2530 . -2810) (undo-tree-id2531 . -2758) (undo-tree-id2532 . -1820) (undo-tree-id2533 . -2758) (undo-tree-id2534 . -2810) (undo-tree-id2535 . -1820) (undo-tree-id2536 . -2758) (undo-tree-id2537 . -2758) (undo-tree-id2538 . -2810) (undo-tree-id2539 . -1820) (undo-tree-id2540 . -2758) (undo-tree-id2541 . -2758) (undo-tree-id2542 . -2810) (undo-tree-id2543 . -1820) (undo-tree-id2544 . -2758) (undo-tree-id2545 . -2810) (undo-tree-id2546 . -1820) (undo-tree-id2547 . -2758) (undo-tree-id2548 . -2810) (undo-tree-id2549 . -1820) (undo-tree-id2550 . -2757) (undo-tree-id2551 . -2758) (undo-tree-id2552 . -1820) (undo-tree-id2553 . -2757) (undo-tree-id2554 . -2757) (undo-tree-id2555 . -2758) (undo-tree-id2556 . -1820) (undo-tree-id2557 . -2757) (undo-tree-id2558 . -2757) (undo-tree-id2559 . -2758) (undo-tree-id2560 . -1820) (undo-tree-id2561 . -1820) (undo-tree-id2562 . -2757) (undo-tree-id2563 . -2757) (undo-tree-id2564 . -2757) (undo-tree-id2565 . -2758) (undo-tree-id2566 . -1820) (undo-tree-id2567 . -2757) (undo-tree-id2568 . -2758) (undo-tree-id2569 . -1820) 2758) nil (23765 3964 597599 400000) 0 nil]) ((#("                        println!(\"Sending msg to: {}\", &self.target_timeline);
" 0 24 (fontified t) 24 32 (fontified t face rust-builtin-formatting-macro-face) 32 33 (fontified t) 33 50 (fontified t face font-lock-string-face) 50 52 (fontified t face rust-string-interpolation-face) 52 53 (fontified t face font-lock-string-face) 53 56 (fontified t) 56 60 (fontified t face font-lock-keyword-face) 60 79 (fontified t)) . 2758) (undo-tree-id2570 . -27) (undo-tree-id2571 . -27) (undo-tree-id2572 . -27) (undo-tree-id2573 . -27) (undo-tree-id2574 . -27) (undo-tree-id2575 . -27) (undo-tree-id2576 . -27) (undo-tree-id2577 . -27) (undo-tree-id2578 . -27) (undo-tree-id2579 . -27) (undo-tree-id2580 . -27) (undo-tree-id2581 . -27) (undo-tree-id2582 . -28) (undo-tree-id2583 . -28) (undo-tree-id2584 . -28) (undo-tree-id2585 . -28) (undo-tree-id2586 . -28) (undo-tree-id2587 . -28) (undo-tree-id2588 . -28) (undo-tree-id2589 . -28) (undo-tree-id2590 . -28) (undo-tree-id2591 . -28) (undo-tree-id2592 . -28) (undo-tree-id2593 . -28) (undo-tree-id2594 . -28) (undo-tree-id2595 . -28) (undo-tree-id2596 . -28) (undo-tree-id2597 . -28) (undo-tree-id2598 . -28) (undo-tree-id2599 . -28) (undo-tree-id2600 . -28) (undo-tree-id2601 . -28) (undo-tree-id2602 . -28) (undo-tree-id2603 . -28) (undo-tree-id2604 . -28) (undo-tree-id2605 . -28) (undo-tree-id2606 . -28) (undo-tree-id2607 . -28) (undo-tree-id2608 . -33) (undo-tree-id2609 . -34) 2786 (t 23765 3955 766496 983000)) nil (23765 3964 668080 618000) 0 nil]) ((#("                println!(\"Got potential result for: {}\", &self.target_timeline);
" 0 16 (fontified t) 16 24 (fontified t face rust-builtin-formatting-macro-face) 24 25 (fontified t) 25 36 (fontified t face font-lock-string-face) 36 52 (face font-lock-string-face fontified t) 52 54 (face rust-string-interpolation-face fontified t) 54 55 (face font-lock-string-face fontified t) 55 58 (fontified t) 58 62 (face font-lock-keyword-face fontified t) 62 80 (fontified t) 80 81 (fontified t)) . 1789) (undo-tree-id2288 . -20) (undo-tree-id2289 . -20) (undo-tree-id2290 . -20) (undo-tree-id2291 . -20) (undo-tree-id2292 . -20) (undo-tree-id2293 . -20) (undo-tree-id2294 . -20) (undo-tree-id2295 . -20) (undo-tree-id2296 . -20) 1809 (t 23765 114 570234 951000)) nil (23765 3955 747100 705000) 0 nil]) ((1 . 3315) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    target_timeline: String,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::default(),
            target_timeline: String::new(),
            current_user: None,
        }
    }

    /// Create a blank StreamManager copy
    pub fn blank_copy(&self) -> Self {
        StreamManager { ..self.clone() }
    }
    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn configure_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.update(id, timeline);
        receiver.maybe_subscribe(timeline);
        StreamManager {
            id,
            current_user: Some(user),
            target_timeline: timeline.clone(),
            ..self.clone()
        }
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.update(self.id, &self.target_timeline.clone());
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
        println!(\"Got potential result for: {}\", &self.target_timeline);
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => {
                        println!(\"Sending msg to: {}\", &self.target_timeline);

                        Ok(Async::Ready(Some(json!(
                            {\"event\": event,
                             \"payload\": payload,}
                        ))))
                    }
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 451 (fontified t face font-lock-variable-name-face) 451 453 (fontified t) 453 459 (fontified t face font-lock-type-face) 459 465 (fontified t) 465 477 (fontified t face font-lock-variable-name-face) 477 479 (fontified t) 479 485 (fontified t face font-lock-type-face) 485 486 (fontified t) 486 490 (fontified t face font-lock-type-face) 490 495 (fontified t) 495 499 (fontified t face font-lock-keyword-face) 499 500 (fontified t) 500 513 (fontified t face font-lock-type-face) 513 516 (fontified t) 516 520 (fontified t) 520 523 (fontified t face font-lock-keyword-face) 523 524 (fontified t) 524 526 (fontified t face font-lock-keyword-face) 526 527 (fontified t) 527 530 (fontified t face font-lock-function-name-face) 530 531 (fontified t) 531 539 (fontified t face font-lock-variable-name-face) 539 541 (fontified t) 541 549 (fontified t face font-lock-type-face) 549 552 (fontified t) 552 553 (fontified t syntax-table #1#) 553 554 (fontified t) 554 558 (fontified t face font-lock-type-face) 558 569 (fontified t) 569 582 (fontified t face font-lock-type-face) 582 597 (fontified t) 597 605 (fontified t face font-lock-variable-name-face) 605 607 (fontified t) 607 610 (fontified t face font-lock-type-face) 610 616 (fontified t) 616 621 (fontified t face font-lock-type-face) 621 651 (fontified t) 651 653 (fontified t face font-lock-variable-name-face) 653 655 (fontified t) 655 659 (fontified t face font-lock-type-face) 659 684 (fontified t) 684 699 (fontified t face font-lock-variable-name-face) 699 701 (fontified t) 701 707 (fontified t face font-lock-type-face) 707 728 (fontified t) 728 740 (fontified t face font-lock-variable-name-face) 740 742 (fontified t) 742 746 (fontified t face font-lock-type-face) 746 769 (fontified t) 769 807 (fontified t face font-lock-doc-face) 807 811 (fontified t) 811 814 (fontified t face font-lock-keyword-face) 814 815 (fontified t) 815 817 (fontified t face font-lock-keyword-face) 817 818 (fontified t) 818 828 (fontified t face font-lock-function-name-face) 828 830 (fontified t) 830 834 (fontified t face font-lock-keyword-face) 834 837 (fontified t) 837 838 (fontified t syntax-table #1#) 838 839 (fontified t) 839 843 (fontified t face font-lock-type-face) 843 854 (fontified t) 854 867 (fontified t face font-lock-type-face) 867 872 (fontified t) 872 876 (fontified t face font-lock-keyword-face) 876 897 (fontified t) 897 971 (fontified t face font-lock-doc-face) 971 975 (fontified t) 975 978 (fontified t face font-lock-keyword-face) 978 979 (fontified t) 979 981 (fontified t face font-lock-keyword-face) 981 982 (fontified t) 982 996 (fontified t face font-lock-function-name-face) 996 998 (fontified t) 998 1002 (fontified t face font-lock-keyword-face) 1002 1004 (fontified t) 1004 1012 (fontified t face font-lock-variable-name-face) 1012 1015 (fontified t) 1015 1021 (fontified t face font-lock-type-face) 1021 1023 (fontified t) 1023 1027 (fontified t face font-lock-variable-name-face) 1027 1029 (fontified t) 1029 1033 (fontified t face font-lock-type-face) 1033 1036 (fontified t) 1036 1037 (syntax-table #1# fontified t) 1037 1038 (fontified t) 1038 1042 (fontified t face font-lock-type-face) 1042 1044 (fontified t) 1044 1053 (fontified t) 1053 1056 (fontified t face font-lock-keyword-face) 1056 1057 (fontified t) 1057 1059 (fontified t face font-lock-variable-name-face) 1059 1062 (fontified t) 1062 1066 (fontified t face font-lock-type-face) 1066 1086 (fontified t) 1086 1089 (fontified t face font-lock-keyword-face) 1089 1090 (fontified t) 1090 1093 (fontified t face font-lock-keyword-face) 1093 1094 (fontified t) 1094 1102 (fontified t face font-lock-variable-name-face) 1102 1105 (fontified t) 1105 1109 (fontified t face font-lock-keyword-face) 1109 1133 (fontified t) 1133 1160 (fontified t face font-lock-string-face) 1160 1254 (fontified t) 1254 1267 (fontified t face font-lock-type-face) 1267 1298 (fontified t) 1298 1310 (fontified t face font-lock-variable-name-face) 1310 1312 (fontified t) 1312 1316 (fontified t face font-lock-type-face) 1316 1336 (fontified t) 1336 1351 (fontified t face font-lock-variable-name-face) 1351 1385 (fontified t) 1385 1389 (fontified t face font-lock-keyword-face) 1389 1417 (fontified t) 1417 1421 (fontified t face font-lock-keyword-face) 1421 1422 (fontified t) 1422 1428 (fontified t face font-lock-type-face) 1428 1429 (fontified t) 1429 1432 (fontified t face font-lock-keyword-face) 1432 1433 (fontified t) 1433 1446 (fontified t face font-lock-type-face) 1446 1453 (fontified t) 1453 1457 (fontified t face font-lock-keyword-face) 1457 1458 (fontified t) 1458 1462 (fontified t face font-lock-type-face) 1462 1465 (fontified t) 1465 1470 (fontified t face font-lock-type-face) 1470 1471 (fontified t) 1471 1472 (fontified t) 1472 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (fontified t) 1481 1486 (fontified t face font-lock-type-face) 1486 1489 (fontified t) 1489 1494 (fontified t face font-lock-type-face) 1494 1501 (fontified t) 1501 1503 (fontified t face font-lock-keyword-face) 1503 1504 (fontified t) 1504 1508 (fontified t face font-lock-function-name-face) 1508 1510 (fontified t) 1510 1513 (fontified t face font-lock-keyword-face) 1513 1514 (fontified t) 1514 1518 (fontified t face font-lock-keyword-face) 1518 1521 (fontified t) 1521 1522 (syntax-table #1# fontified t) 1522 1523 (fontified t) 1523 1527 (fontified t face font-lock-type-face) 1527 1528 (fontified t) 1528 1534 (fontified t face font-lock-type-face) 1534 1535 (fontified t) 1535 1539 (fontified t face font-lock-type-face) 1539 1541 (fontified t) 1541 1544 (fontified t face font-lock-type-face) 1544 1545 (fontified t face font-lock-type-face) 1545 1548 (fontified t) 1548 1552 (fontified t face font-lock-type-face) 1552 1554 (fontified t) 1554 1559 (fontified t face font-lock-type-face) 1559 1563 (fontified t) 1563 1571 (fontified t) 1571 1574 (fontified t face font-lock-keyword-face) 1574 1575 (fontified t) 1575 1578 (fontified t face font-lock-keyword-face) 1578 1579 (fontified t) 1579 1587 (fontified t face font-lock-variable-name-face) 1587 1590 (fontified t) 1590 1594 (fontified t face font-lock-keyword-face) 1594 1618 (fontified t) 1618 1641 (fontified t face font-lock-string-face) 1641 1644 (fontified t) 1644 1668 (fontified t) 1668 1672 (fontified t face font-lock-keyword-face) 1672 1678 (fontified t) 1678 1682 (fontified t face font-lock-keyword-face) 1682 1717 (fontified t) 1717 1722 (fontified t face font-lock-keyword-face) 1722 1753 (fontified t) 1753 1755 (fontified t face font-lock-type-face) 1755 1756 (fontified t) 1756 1761 (fontified t face font-lock-type-face) 1761 1763 (fontified t) 1763 1768 (fontified t face font-lock-type-face) 1768 1769 (fontified t) 1769 1773 (fontified t face font-lock-type-face) 1773 1784 (fontified t) 1784 1785 (syntax-table #1# fontified t) 1785 1788 (fontified t) 1788 1795 (fontified t) 1795 1796 (fontified t rear-nonsticky t) 1796 1804 (fontified t face rust-builtin-formatting-macro-face) 1804 1805 (fontified t) 1805 1830 (fontified t face font-lock-string-face) 1830 1832 (fontified t face font-lock-string-face) 1832 1834 (fontified t face rust-string-interpolation-face) 1834 1835 (fontified t face font-lock-string-face) 1835 1838 (fontified t) 1838 1842 (fontified t face font-lock-keyword-face) 1842 1860 (fontified t) 1860 1861 (fontified t) 1861 1877 (fontified t) 1877 1880 (fontified t face font-lock-keyword-face) 1880 1881 (fontified t) 1881 1885 (fontified t face font-lock-variable-name-face) 1885 1888 (fontified t) 1888 1892 (fontified t face font-lock-keyword-face) 1892 1893 (fontified t) 1893 1984 (fontified t) 1984 1987 (fontified t face font-lock-string-face) 1987 2011 (fontified t face font-lock-string-face) 2011 2012 (syntax-table #2# fontified t face font-lock-string-face) 2012 2013 (fontified t face font-lock-string-face) 2013 2016 (fontified t) 2016 2033 (fontified t) 2033 2036 (fontified t face font-lock-keyword-face) 2036 2037 (fontified t) 2037 2047 (fontified t face font-lock-variable-name-face) 2047 2086 (fontified t) 2086 2089 (fontified t face font-lock-keyword-face) 2089 2090 (fontified t) 2090 2094 (fontified t face font-lock-variable-name-face) 2094 2128 (fontified t) 2128 2131 (fontified t face font-lock-keyword-face) 2131 2132 (fontified t) 2132 2135 (fontified t face font-lock-variable-name-face) 2135 2137 (fontified t face font-lock-variable-name-face) 2137 2145 (fontified t) 2145 2152 (fontified t face font-lock-string-face) 2152 2170 (fontified t) 2170 2184 (fontified t face font-lock-string-face) 2184 2187 (fontified t) 2187 2203 (fontified t) 2203 2206 (fontified t face font-lock-keyword-face) 2206 2207 (fontified t) 2207 2211 (fontified t face font-lock-variable-name-face) 2211 2217 (fontified t) 2217 2229 (fontified t) 2229 2245 (fontified t) 2245 2248 (fontified t face font-lock-keyword-face) 2248 2249 (fontified t) 2249 2256 (fontified t face font-lock-variable-name-face) 2256 2264 (fontified t) 2264 2273 (fontified t face font-lock-string-face) 2273 2304 (fontified t) 2304 2307 (fontified t face font-lock-keyword-face) 2307 2308 (fontified t) 2308 2312 (fontified t face font-lock-variable-name-face) 2312 2346 (fontified t) 2346 2349 (fontified t face font-lock-keyword-face) 2349 2350 (fontified t) 2350 2359 (fontified t face font-lock-variable-name-face) 2359 2361 (fontified t) 2361 2367 (fontified t) 2367 2376 (face font-lock-string-face fontified t) 2376 2378 (fontified t) 2378 2388 (face font-lock-string-face fontified t) 2388 2390 (fontified t) 2390 2393 (fontified t) 2393 2420 (fontified t) 2420 2448 (fontified t) 2448 2457 (fontified t face font-lock-string-face) 2457 2458 (syntax-table #2# fontified t face font-lock-string-face) 2458 2459 (fontified t face font-lock-string-face) 2459 2512 (fontified t) 2512 2516 (fontified t face font-lock-keyword-face) 2516 2517 (fontified t face font-lock-keyword-face) 2517 2547 (fontified t) 2547 2568 (fontified t) 2568 2574 (fontified t face font-lock-type-face) 2574 2576 (fontified t) 2576 2588 (fontified t face font-lock-type-face) 2588 2593 (fontified t) 2593 2595 (fontified t face font-lock-keyword-face) 2595 2605 (fontified t) 2605 2619 (fontified t face font-lock-string-face) 2619 2621 (fontified t) 2621 2622 (syntax-table #1# fontified t) 2622 2623 (fontified t) 2623 2625 (fontified t face font-lock-type-face) 2625 2626 (fontified t) 2626 2631 (fontified t face font-lock-type-face) 2631 2633 (fontified t) 2633 2641 (fontified t face font-lock-type-face) 2641 2665 (fontified t) 2665 2671 (fontified t face font-lock-type-face) 2671 2673 (fontified t) 2673 2681 (fontified t face font-lock-type-face) 2681 2683 (fontified t) 2683 2687 (fontified t face font-lock-type-face) 2687 2688 (fontified t) 2688 2691 (fontified t face font-lock-keyword-face) 2691 2692 (fontified t) 2692 2697 (fontified t face font-lock-variable-name-face) 2697 2700 (fontified t) 2700 2702 (fontified t face font-lock-keyword-face) 2702 2729 (fontified t) 2729 2732 (fontified t) 2732 2733 (syntax-table #1# fontified t) 2733 2736 (fontified t) 2736 2760 (fontified t) 2760 2762 (fontified t face font-lock-type-face) 2762 2763 (fontified t) 2763 2768 (fontified t face font-lock-type-face) 2768 2770 (fontified t) 2770 2778 (fontified t face font-lock-type-face) 2778 2826 (fontified t) 2826 2827 (syntax-table #1# fontified t) 2827 2854 (fontified t) 2854 2862 (fontified t face rust-builtin-formatting-macro-face) 2862 2863 (fontified t) 2863 2880 (fontified t face font-lock-string-face) 2880 2882 (fontified t face rust-string-interpolation-face) 2882 2883 (fontified t face font-lock-string-face) 2883 2886 (fontified t) 2886 2890 (fontified t face font-lock-keyword-face) 2890 2909 (fontified t) 2909 2920 (fontified t) 2920 2934 (fontified t) 2934 2936 (fontified t face font-lock-type-face) 2936 2937 (fontified t) 2937 2942 (fontified t face font-lock-type-face) 2942 2944 (fontified t) 2944 2949 (fontified t face font-lock-type-face) 2949 2950 (fontified t) 2950 2954 (fontified t face font-lock-type-face) 2954 2955 (fontified t) 2955 2960 (fontified t face font-lock-preprocessor-face) 2960 2962 (fontified t) 2962 2991 (fontified t) 2991 2998 (fontified t face font-lock-string-face) 2998 3036 (fontified t) 3036 3045 (fontified t face font-lock-string-face) 3045 3047 (fontified t) 3047 3057 (fontified t) 3057 3152 (fontified t) 3152 3154 (fontified t face font-lock-type-face) 3154 3155 (fontified t) 3155 3160 (fontified t face font-lock-type-face) 3160 3162 (fontified t) 3162 3167 (fontified t face font-lock-type-face) 3167 3168 (fontified t) 3168 3172 (fontified t face font-lock-type-face) 3172 3176 (fontified t) 3176 3177 (syntax-table #1# fontified t) 3177 3178 (fontified t) 3178 3180 (fontified t face font-lock-type-face) 3180 3181 (fontified t) 3181 3186 (fontified t face font-lock-type-face) 3186 3188 (fontified t) 3188 3193 (fontified t face font-lock-type-face) 3193 3194 (fontified t) 3194 3198 (fontified t face font-lock-type-face) 3198 3214 (fontified t) 3214 3216 (fontified t face font-lock-type-face) 3216 3217 (fontified t) 3217 3222 (fontified t face font-lock-type-face) 3222 3224 (fontified t) 3224 3232 (fontified t face font-lock-type-face) 3232 3235 (fontified t) 3235 3236 (syntax-table #1# fontified t) 3236 3237 (fontified t) 3237 3239 (fontified t face font-lock-type-face) 3239 3240 (fontified t) 3240 3245 (fontified t face font-lock-type-face) 3245 3247 (fontified t) 3247 3255 (fontified t face font-lock-type-face) 3255 3258 (fontified t) 3258 3270 (fontified t) 3270 3273 (fontified t face font-lock-type-face) 3273 3278 (fontified t) 3278 3279 (syntax-table #1# fontified t) 3279 3280 (fontified t) 3280 3283 (fontified t face font-lock-type-face) 3283 3306 (fontified t)) . 1) (undo-tree-id2258 . -1861) (undo-tree-id2259 . -1788) (undo-tree-id2260 . -1860) (undo-tree-id2261 . 1476) (undo-tree-id2262 . -1324) (undo-tree-id2263 . -1563) (undo-tree-id2264 . -1563) (undo-tree-id2265 . -1563) (undo-tree-id2266 . -1324) (undo-tree-id2267 . -1563) (undo-tree-id2268 . -1563) (undo-tree-id2269 . -1324) (undo-tree-id2270 . -1563) (undo-tree-id2271 . -1788) (undo-tree-id2272 . -1806) (undo-tree-id2273 . -1805) (undo-tree-id2274 . -1324) (undo-tree-id2275 . -1806) (undo-tree-id2276 . -1806) (undo-tree-id2277 . -1324) (undo-tree-id2278 . -1806) (undo-tree-id2279 . -1324) (undo-tree-id2280 . -1806) (undo-tree-id2281 . -1829) (undo-tree-id2282 . -1829) (undo-tree-id2283 . -1829) (undo-tree-id2284 . -1324) 1830) nil (23765 114 554673 721000) 0 nil]) ((1825 . 1831) (1807 . 1825) (#("R" 0 1 (fontified t face font-lock-string-face)) . -1807) (undo-tree-id2285 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -1808) (undo-tree-id2286 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -1809) (undo-tree-id2287 . -1) 1810 (1807 . 1810) (#("polled by" 0 9 (fontified t face font-lock-string-face)) . 1807)) nil (23765 114 554685 979000) 0 nil] [nil nil ((#("polled by: {}" 0 11 (fontified t face font-lock-string-face) 11 13 (fontified t face rust-string-interpolation-face)) . 1807) (undo-tree-id2247 . 13) (undo-tree-id2248 . -13)) ((1807 . 1820)) (23765 102 512249 479000) 0 nil]) ((nil rear-nonsticky nil 1796 . 1797) (1789 . 1847)) nil (23765 102 514489 549000) 0 nil]) ((#("        println!(\"polled by: {}\", &self.target_timeline);
" 0 8 (fontified t) 8 16 (fontified t face rust-builtin-formatting-macro-face) 16 17 (fontified t) 17 29 (fontified t face font-lock-string-face) 29 31 (fontified t face rust-string-interpolation-face) 31 32 (fontified t face font-lock-string-face) 32 35 (fontified t) 35 39 (fontified t face font-lock-keyword-face) 39 57 (fontified t) 57 58 (fontified t)) . 1564) (undo-tree-id2249 . -42) (undo-tree-id2250 . -42) (undo-tree-id2251 . -42) (undo-tree-id2252 . -42) (undo-tree-id2253 . -42) (undo-tree-id2254 . -42) (undo-tree-id2255 . -42) (undo-tree-id2256 . -42) (undo-tree-id2257 . -42) 1606 (t 23765 9 643946 964000)) nil (23765 102 512268 674000) 0 nil]) ((1 . 3292) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    target_timeline: String,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::default(),
            target_timeline: String::new(),
            current_user: None,
        }
    }

    /// Create a blank StreamManager copy
    pub fn blank_copy(&self) -> Self {
        StreamManager { ..self.clone() }
    }
    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn configure_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.update(id, timeline);
        receiver.maybe_subscribe(timeline);
        StreamManager {
            id,
            current_user: Some(user),
            target_timeline: timeline.clone(),
            ..self.clone()
        }
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
                        println!(\"polled by: {}\", &self.target_timeline);
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.update(self.id, &self.target_timeline.clone());
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => {
                        println!(\"Sending msg to: {}\", &self.target_timeline);

                        Ok(Async::Ready(Some(json!(
                            {\"event\": event,
                             \"payload\": payload,}
                        ))))
                    }
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 451 (fontified t face font-lock-variable-name-face) 451 453 (fontified t) 453 459 (fontified t face font-lock-type-face) 459 465 (fontified t) 465 477 (fontified t face font-lock-variable-name-face) 477 479 (fontified t) 479 485 (fontified t face font-lock-type-face) 485 486 (fontified t) 486 490 (fontified t face font-lock-type-face) 490 495 (fontified t) 495 499 (fontified t face font-lock-keyword-face) 499 500 (fontified t) 500 513 (fontified t face font-lock-type-face) 513 516 (fontified t) 516 520 (fontified t) 520 523 (fontified t face font-lock-keyword-face) 523 524 (fontified t) 524 526 (fontified t face font-lock-keyword-face) 526 527 (fontified t) 527 530 (fontified t face font-lock-function-name-face) 530 531 (fontified t) 531 539 (fontified t face font-lock-variable-name-face) 539 541 (fontified t) 541 549 (fontified t face font-lock-type-face) 549 552 (fontified t) 552 553 (fontified t syntax-table #1#) 553 554 (fontified t) 554 558 (fontified t face font-lock-type-face) 558 569 (fontified t) 569 582 (fontified t face font-lock-type-face) 582 597 (fontified t) 597 605 (fontified t face font-lock-variable-name-face) 605 607 (fontified t) 607 610 (fontified t face font-lock-type-face) 610 616 (fontified t) 616 621 (fontified t face font-lock-type-face) 621 651 (fontified t) 651 653 (fontified t face font-lock-variable-name-face) 653 655 (fontified t) 655 659 (fontified t face font-lock-type-face) 659 684 (fontified t) 684 699 (fontified t face font-lock-variable-name-face) 699 701 (fontified t) 701 707 (fontified t face font-lock-type-face) 707 728 (fontified t) 728 740 (fontified t face font-lock-variable-name-face) 740 742 (fontified t) 742 746 (fontified t face font-lock-type-face) 746 769 (fontified t) 769 807 (fontified t face font-lock-doc-face) 807 811 (fontified t) 811 814 (fontified t face font-lock-keyword-face) 814 815 (fontified t) 815 817 (fontified t face font-lock-keyword-face) 817 818 (fontified t) 818 828 (fontified t face font-lock-function-name-face) 828 830 (fontified t) 830 834 (fontified t face font-lock-keyword-face) 834 837 (fontified t) 837 838 (fontified t syntax-table #1#) 838 839 (fontified t) 839 843 (fontified t face font-lock-type-face) 843 854 (fontified t) 854 867 (fontified t face font-lock-type-face) 867 872 (fontified t) 872 876 (fontified t face font-lock-keyword-face) 876 897 (fontified t) 897 971 (fontified t face font-lock-doc-face) 971 975 (fontified t) 975 978 (fontified t face font-lock-keyword-face) 978 979 (fontified t) 979 981 (fontified t face font-lock-keyword-face) 981 982 (fontified t) 982 996 (fontified t face font-lock-function-name-face) 996 998 (fontified t) 998 1002 (fontified t face font-lock-keyword-face) 1002 1004 (fontified t) 1004 1012 (fontified t face font-lock-variable-name-face) 1012 1015 (fontified t) 1015 1016 (fontified t face font-lock-type-face) 1016 1021 (fontified t face font-lock-type-face) 1021 1023 (fontified t) 1023 1027 (fontified t face font-lock-variable-name-face) 1027 1029 (fontified t) 1029 1033 (fontified t face font-lock-type-face) 1033 1036 (fontified t) 1036 1037 (fontified t syntax-table #1#) 1037 1038 (fontified t) 1038 1042 (fontified t face font-lock-type-face) 1042 1045 (fontified t) 1045 1053 (fontified t) 1053 1056 (fontified t face font-lock-keyword-face) 1056 1057 (fontified t) 1057 1059 (fontified t face font-lock-variable-name-face) 1059 1062 (fontified t) 1062 1066 (fontified t face font-lock-type-face) 1066 1086 (fontified t) 1086 1089 (fontified t face font-lock-keyword-face) 1089 1090 (fontified t) 1090 1093 (fontified t face font-lock-keyword-face) 1093 1094 (fontified t) 1094 1102 (fontified t face font-lock-variable-name-face) 1102 1105 (fontified t) 1105 1109 (fontified t face font-lock-keyword-face) 1109 1133 (fontified t) 1133 1160 (fontified t face font-lock-string-face) 1160 1254 (fontified t) 1254 1267 (fontified t face font-lock-type-face) 1267 1298 (fontified t) 1298 1310 (fontified t face font-lock-variable-name-face) 1310 1312 (fontified t) 1312 1316 (fontified t face font-lock-type-face) 1316 1336 (fontified t) 1336 1351 (fontified t face font-lock-variable-name-face) 1351 1385 (fontified t) 1385 1389 (fontified t face font-lock-keyword-face) 1389 1417 (fontified t) 1417 1421 (fontified t face font-lock-keyword-face) 1421 1422 (fontified t) 1422 1428 (fontified t face font-lock-type-face) 1428 1429 (fontified t) 1429 1432 (fontified t face font-lock-keyword-face) 1432 1433 (fontified t) 1433 1446 (fontified t face font-lock-type-face) 1446 1448 (fontified t) 1448 1453 (fontified t) 1453 1457 (fontified t face font-lock-keyword-face) 1457 1458 (fontified t) 1458 1462 (fontified t face font-lock-type-face) 1462 1465 (fontified t) 1465 1470 (fontified t face font-lock-type-face) 1470 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (fontified t) 1481 1486 (fontified t face font-lock-type-face) 1486 1489 (fontified t) 1489 1494 (fontified t face font-lock-type-face) 1494 1501 (fontified t) 1501 1503 (fontified t face font-lock-keyword-face) 1503 1504 (fontified t) 1504 1508 (fontified t face font-lock-function-name-face) 1508 1510 (fontified t) 1510 1513 (fontified t face font-lock-keyword-face) 1513 1514 (fontified t) 1514 1518 (fontified t face font-lock-keyword-face) 1518 1521 (fontified t) 1521 1522 (syntax-table #1# fontified t) 1522 1523 (fontified t) 1523 1527 (fontified t face font-lock-type-face) 1527 1528 (fontified t) 1528 1534 (fontified t face font-lock-type-face) 1534 1535 (fontified t) 1535 1539 (fontified t face font-lock-type-face) 1539 1541 (fontified t) 1541 1545 (fontified t face font-lock-type-face) 1545 1548 (fontified t) 1548 1552 (fontified t face font-lock-type-face) 1552 1554 (fontified t) 1554 1559 (fontified t face font-lock-type-face) 1559 1563 (fontified t) 1563 1586 (fontified t) 1586 1587 (fontified t rear-nonsticky t) 1587 1595 (fontified t face rust-builtin-formatting-macro-face) 1595 1596 (fontified t) 1596 1608 (fontified t face font-lock-string-face) 1608 1610 (fontified t face rust-string-interpolation-face) 1610 1611 (fontified t face font-lock-string-face) 1611 1614 (fontified t) 1614 1618 (fontified t face font-lock-keyword-face) 1618 1619 (fontified t) 1619 1634 (fontified t) 1634 1636 (fontified t) 1636 1637 (fontified t) 1637 1645 (fontified t) 1645 1648 (fontified t face font-lock-keyword-face) 1648 1649 (fontified t) 1649 1652 (fontified t face font-lock-keyword-face) 1652 1653 (fontified t) 1653 1661 (fontified t face font-lock-variable-name-face) 1661 1664 (fontified t) 1664 1668 (fontified t face font-lock-keyword-face) 1668 1692 (fontified t) 1692 1715 (fontified t face font-lock-string-face) 1715 1718 (fontified t) 1718 1742 (fontified t) 1742 1746 (fontified t face font-lock-keyword-face) 1746 1752 (fontified t) 1752 1756 (fontified t face font-lock-keyword-face) 1756 1791 (fontified t) 1791 1796 (fontified t face font-lock-keyword-face) 1796 1827 (fontified t) 1827 1829 (fontified t face font-lock-type-face) 1829 1830 (fontified t) 1830 1835 (fontified t face font-lock-type-face) 1835 1837 (fontified t) 1837 1842 (fontified t face font-lock-type-face) 1842 1843 (fontified t) 1843 1847 (fontified t face font-lock-type-face) 1847 1858 (fontified t) 1858 1859 (syntax-table #1# fontified t) 1859 1862 (fontified t) 1862 1878 (fontified t) 1878 1881 (fontified t face font-lock-keyword-face) 1881 1882 (fontified t) 1882 1886 (fontified t face font-lock-variable-name-face) 1886 1889 (fontified t) 1889 1893 (fontified t face font-lock-keyword-face) 1893 1894 (fontified t) 1894 1985 (fontified t) 1985 2012 (fontified t face font-lock-string-face) 2012 2013 (syntax-table #2# fontified t face font-lock-string-face) 2013 2014 (fontified t face font-lock-string-face) 2014 2022 (fontified t) 2022 2034 (fontified t) 2034 2037 (fontified t face font-lock-keyword-face) 2037 2038 (fontified t) 2038 2048 (fontified t face font-lock-variable-name-face) 2048 2071 (fontified t) 2071 2087 (fontified t) 2087 2090 (fontified t face font-lock-keyword-face) 2090 2091 (fontified t) 2091 2095 (fontified t face font-lock-variable-name-face) 2095 2129 (fontified t) 2129 2132 (fontified t face font-lock-keyword-face) 2132 2133 (fontified t) 2133 2137 (fontified t face font-lock-variable-name-face) 2137 2138 (face font-lock-variable-name-face fontified t) 2138 2146 (fontified t) 2146 2153 (face font-lock-string-face fontified t) 2153 2171 (fontified t) 2171 2185 (face font-lock-string-face fontified t) 2185 2188 (fontified t) 2188 2204 (fontified t) 2204 2207 (fontified t face font-lock-keyword-face) 2207 2208 (fontified t) 2208 2212 (fontified t face font-lock-variable-name-face) 2212 2218 (fontified t) 2218 2230 (fontified t) 2230 2246 (fontified t) 2246 2249 (fontified t face font-lock-keyword-face) 2249 2250 (fontified t) 2250 2257 (fontified t face font-lock-variable-name-face) 2257 2265 (fontified t) 2265 2274 (fontified t face font-lock-string-face) 2274 2305 (fontified t) 2305 2308 (fontified t face font-lock-keyword-face) 2308 2309 (fontified t) 2309 2313 (fontified t face font-lock-variable-name-face) 2313 2347 (fontified t) 2347 2350 (fontified t face font-lock-keyword-face) 2350 2351 (fontified t) 2351 2360 (fontified t face font-lock-variable-name-face) 2360 2368 (fontified t) 2368 2377 (fontified t face font-lock-string-face) 2377 2379 (fontified t) 2379 2389 (fontified t face font-lock-string-face) 2389 2394 (fontified t) 2394 2421 (fontified t) 2421 2449 (fontified t) 2449 2458 (fontified t face font-lock-string-face) 2458 2459 (syntax-table #2# fontified t face font-lock-string-face) 2459 2460 (fontified t face font-lock-string-face) 2460 2513 (fontified t) 2513 2518 (fontified t face font-lock-keyword-face) 2518 2569 (fontified t) 2569 2571 (fontified t face font-lock-type-face) 2571 2575 (fontified t face font-lock-type-face) 2575 2577 (fontified t) 2577 2589 (fontified t face font-lock-type-face) 2589 2594 (fontified t) 2594 2596 (fontified t face font-lock-keyword-face) 2596 2606 (fontified t) 2606 2620 (fontified t face font-lock-string-face) 2620 2622 (fontified t) 2622 2623 (syntax-table #1# fontified t) 2623 2624 (fontified t) 2624 2626 (fontified t face font-lock-type-face) 2626 2627 (fontified t) 2627 2632 (fontified t face font-lock-type-face) 2632 2634 (fontified t) 2634 2642 (fontified t face font-lock-type-face) 2642 2645 (fontified t) 2645 2666 (fontified t) 2666 2672 (fontified t face font-lock-type-face) 2672 2674 (fontified t) 2674 2682 (fontified t face font-lock-type-face) 2682 2684 (fontified t) 2684 2688 (fontified t face font-lock-type-face) 2688 2689 (fontified t) 2689 2692 (face font-lock-keyword-face fontified t) 2692 2693 (fontified t) 2693 2698 (face font-lock-variable-name-face fontified t) 2698 2701 (fontified t) 2701 2703 (face font-lock-keyword-face fontified t) 2703 2730 (fontified t) 2730 2733 (fontified t) 2733 2734 (syntax-table #1# fontified t) 2734 2737 (fontified t) 2737 2761 (fontified t) 2761 2763 (fontified t face font-lock-type-face) 2763 2764 (fontified t) 2764 2769 (fontified t face font-lock-type-face) 2769 2771 (fontified t) 2771 2779 (fontified t face font-lock-type-face) 2779 2827 (fontified t) 2827 2828 (syntax-table #1# fontified t) 2828 2831 (fontified t) 2831 2855 (fontified t) 2855 2863 (fontified t face rust-builtin-formatting-macro-face) 2863 2864 (fontified t) 2864 2881 (fontified t face font-lock-string-face) 2881 2883 (fontified t face rust-string-interpolation-face) 2883 2884 (fontified t face font-lock-string-face) 2884 2887 (fontified t) 2887 2891 (fontified t face font-lock-keyword-face) 2891 2892 (fontified t) 2892 2907 (fontified t) 2907 2909 (fontified t) 2909 2910 (fontified t) 2910 2911 (fontified t) 2911 2935 (fontified t) 2935 2937 (fontified t face font-lock-type-face) 2937 2938 (fontified t) 2938 2943 (fontified t face font-lock-type-face) 2943 2945 (fontified t) 2945 2950 (fontified t face font-lock-type-face) 2950 2951 (fontified t) 2951 2955 (fontified t face font-lock-type-face) 2955 2956 (fontified t) 2956 2961 (fontified t face font-lock-preprocessor-face) 2961 2992 (fontified t) 2992 2999 (fontified t face font-lock-string-face) 2999 3037 (fontified t) 3037 3046 (fontified t face font-lock-string-face) 3046 3153 (fontified t) 3153 3155 (fontified t face font-lock-type-face) 3155 3156 (fontified t) 3156 3161 (fontified t face font-lock-type-face) 3161 3163 (fontified t) 3163 3168 (fontified t face font-lock-type-face) 3168 3169 (fontified t) 3169 3173 (fontified t face font-lock-type-face) 3173 3177 (fontified t) 3177 3178 (syntax-table #1# fontified t) 3178 3179 (fontified t) 3179 3181 (fontified t face font-lock-type-face) 3181 3182 (fontified t) 3182 3187 (fontified t face font-lock-type-face) 3187 3189 (fontified t) 3189 3194 (fontified t face font-lock-type-face) 3194 3195 (fontified t) 3195 3199 (fontified t face font-lock-type-face) 3199 3215 (fontified t) 3215 3217 (fontified t face font-lock-type-face) 3217 3218 (fontified t) 3218 3223 (fontified t face font-lock-type-face) 3223 3225 (fontified t) 3225 3233 (fontified t face font-lock-type-face) 3233 3236 (fontified t) 3236 3237 (fontified t syntax-table #1#) 3237 3238 (fontified t) 3238 3240 (face font-lock-type-face fontified t) 3240 3241 (fontified t) 3241 3246 (face font-lock-type-face fontified t) 3246 3248 (fontified t) 3248 3256 (face font-lock-type-face fontified t) 3256 3259 (fontified t) 3271 3274 (face font-lock-type-face) 3279 3280 (syntax-table #1#) 3281 3284 (face font-lock-type-face)) . 1) (undo-tree-id1998 . -1637) (undo-tree-id1999 . -1563) (undo-tree-id2000 . -1636) (undo-tree-id2001 . 1701) (undo-tree-id2002 . -1894) (undo-tree-id2003 . -2831) (undo-tree-id2004 . -2908) (undo-tree-id2005 . -2908) (undo-tree-id2006 . -1894) (undo-tree-id2007 . -2908) (undo-tree-id2008 . -2908) (undo-tree-id2009 . -1894) (undo-tree-id2010 . -2831) (undo-tree-id2011 . -2831) (undo-tree-id2012 . -1894) (undo-tree-id2013 . -2831) (undo-tree-id2014 . -2831) (undo-tree-id2015 . -1894) (undo-tree-id2016 . -2831) (undo-tree-id2017 . -2831) (undo-tree-id2018 . -1894) (undo-tree-id2019 . -2831) (undo-tree-id2020 . -2831) (undo-tree-id2021 . -1894) (undo-tree-id2022 . -2831) (undo-tree-id2023 . -1563) (undo-tree-id2024 . -1597) (undo-tree-id2025 . -1597) (undo-tree-id2026 . -971) (undo-tree-id2027 . -1597) (undo-tree-id2028 . -1597) (undo-tree-id2029 . -1597) (undo-tree-id2030 . -971) (undo-tree-id2031 . -1597) (undo-tree-id2032 . -1597) (undo-tree-id2033 . -971) (undo-tree-id2034 . -1597) (undo-tree-id2035 . -1597) (undo-tree-id2036 . -971) (undo-tree-id2037 . -1597) (undo-tree-id2038 . -1597) (undo-tree-id2039 . -1597) (undo-tree-id2040 . -971) (undo-tree-id2041 . -1597) (undo-tree-id2042 . -1597) (undo-tree-id2043 . -1597) (undo-tree-id2044 . -971) (undo-tree-id2045 . -1597) (undo-tree-id2046 . -1597) (undo-tree-id2047 . -971) (undo-tree-id2048 . -1597) (undo-tree-id2049 . -1597) (undo-tree-id2050 . -971) (undo-tree-id2051 . -1596) (undo-tree-id2052 . -1597) (undo-tree-id2053 . -1598) (undo-tree-id2054 . -1597) (undo-tree-id2055 . -971) (undo-tree-id2056 . -1598) (undo-tree-id2057 . -1598) (undo-tree-id2058 . -1597) (undo-tree-id2059 . -971) (undo-tree-id2060 . -1598) (undo-tree-id2061 . -1598) (undo-tree-id2062 . -1597) (undo-tree-id2063 . -971) (undo-tree-id2064 . -1598) (undo-tree-id2065 . -1597) (undo-tree-id2066 . -971) (undo-tree-id2067 . -1598) (undo-tree-id2068 . -1597) (undo-tree-id2069 . -971) (undo-tree-id2070 . -1599) (undo-tree-id2071 . -1598) (undo-tree-id2072 . -971) (undo-tree-id2073 . -1599) (undo-tree-id2074 . -1599) (undo-tree-id2075 . -1598) (undo-tree-id2076 . -971) (undo-tree-id2077 . -1599) (undo-tree-id2078 . -1599) (undo-tree-id2079 . -1598) (undo-tree-id2080 . -971) (undo-tree-id2081 . -1599) (undo-tree-id2082 . -1598) (undo-tree-id2083 . -971) (undo-tree-id2084 . -1599) (undo-tree-id2085 . -1598) (undo-tree-id2086 . -971) (undo-tree-id2087 . -1600) (undo-tree-id2088 . -1599) (undo-tree-id2089 . -971) (undo-tree-id2090 . -1600) (undo-tree-id2091 . -1600) (undo-tree-id2092 . -1599) (undo-tree-id2093 . -971) (undo-tree-id2094 . -1600) (undo-tree-id2095 . -1600) (undo-tree-id2096 . -1599) (undo-tree-id2097 . -971) (undo-tree-id2098 . -1600) (undo-tree-id2099 . -1599) (undo-tree-id2100 . -971) (undo-tree-id2101 . -1600) (undo-tree-id2102 . -1599) (undo-tree-id2103 . -971) (undo-tree-id2104 . -1601) (undo-tree-id2105 . -1600) (undo-tree-id2106 . -971) (undo-tree-id2107 . -1601) (undo-tree-id2108 . -1601) (undo-tree-id2109 . -1600) (undo-tree-id2110 . -971) (undo-tree-id2111 . -1601) (undo-tree-id2112 . -1601) (undo-tree-id2113 . -1600) (undo-tree-id2114 . -971) (undo-tree-id2115 . -1601) (undo-tree-id2116 . -1600) (undo-tree-id2117 . -971) (undo-tree-id2118 . -1601) (undo-tree-id2119 . -1600) (undo-tree-id2120 . -971) (undo-tree-id2121 . -1602) (undo-tree-id2122 . -1601) (undo-tree-id2123 . -971) (undo-tree-id2124 . -1602) (undo-tree-id2125 . -1602) (undo-tree-id2126 . -1601) (undo-tree-id2127 . -971) (undo-tree-id2128 . -1602) (undo-tree-id2129 . -1602) (undo-tree-id2130 . -1601) (undo-tree-id2131 . -971) (undo-tree-id2132 . -1602) (undo-tree-id2133 . -1601) (undo-tree-id2134 . -971) (undo-tree-id2135 . -1602) (undo-tree-id2136 . -1601) (undo-tree-id2137 . -971) (undo-tree-id2138 . -1603) (undo-tree-id2139 . -1602) (undo-tree-id2140 . -971) (undo-tree-id2141 . -1603) (undo-tree-id2142 . -1603) (undo-tree-id2143 . -1602) (undo-tree-id2144 . -971) (undo-tree-id2145 . -1603) (undo-tree-id2146 . -1603) (undo-tree-id2147 . -1602) (undo-tree-id2148 . -971) (undo-tree-id2149 . -1603) (undo-tree-id2150 . -1602) (undo-tree-id2151 . -971) (undo-tree-id2152 . -1603) (undo-tree-id2153 . -1602) (undo-tree-id2154 . -971) (undo-tree-id2155 . -1603) (undo-tree-id2156 . -1603) (undo-tree-id2157 . -971) (undo-tree-id2158 . -1603) (undo-tree-id2159 . -1603) (undo-tree-id2160 . -1603) (undo-tree-id2161 . -971) (undo-tree-id2162 . -1603) (undo-tree-id2163 . -1603) (undo-tree-id2164 . -1603) (undo-tree-id2165 . -971) (undo-tree-id2166 . -1603) (undo-tree-id2167 . -1603) (undo-tree-id2168 . -971) (undo-tree-id2169 . -1603) (undo-tree-id2170 . -1603) (undo-tree-id2171 . -971) (undo-tree-id2172 . -1604) (undo-tree-id2173 . -1603) (undo-tree-id2174 . -971) (undo-tree-id2175 . -1604) (undo-tree-id2176 . -1604) (undo-tree-id2177 . -1603) (undo-tree-id2178 . -971) (undo-tree-id2179 . -1604) (undo-tree-id2180 . -1604) (undo-tree-id2181 . -1603) (undo-tree-id2182 . -971) (undo-tree-id2183 . -1604) (undo-tree-id2184 . -1603) (undo-tree-id2185 . -971) (undo-tree-id2186 . -1604) (undo-tree-id2187 . -1603) (undo-tree-id2188 . -971) (undo-tree-id2189 . -1605) (undo-tree-id2190 . -1604) (undo-tree-id2191 . -971) (undo-tree-id2192 . -1605) (undo-tree-id2193 . -1605) (undo-tree-id2194 . -1604) (undo-tree-id2195 . -971) (undo-tree-id2196 . -1605) (undo-tree-id2197 . -1605) (undo-tree-id2198 . -1604) (undo-tree-id2199 . -971) (undo-tree-id2200 . -1605) (undo-tree-id2201 . -1604) (undo-tree-id2202 . -971) (undo-tree-id2203 . -1605) (undo-tree-id2204 . -1604) (undo-tree-id2205 . -971) (undo-tree-id2206 . -1606) (undo-tree-id2207 . -1605) (undo-tree-id2208 . -971) (undo-tree-id2209 . -1606) (undo-tree-id2210 . -1606) (undo-tree-id2211 . -1605) (undo-tree-id2212 . -971) (undo-tree-id2213 . -1606) (undo-tree-id2214 . -1606) (undo-tree-id2215 . -1605) (undo-tree-id2216 . -971) (undo-tree-id2217 . -1606) (undo-tree-id2218 . -1605) (undo-tree-id2219 . -971) (undo-tree-id2220 . -1606) (undo-tree-id2221 . -1605) (undo-tree-id2222 . -971) (undo-tree-id2223 . -1605) (undo-tree-id2224 . -1605) (undo-tree-id2225 . -971) (undo-tree-id2226 . -1605) (undo-tree-id2227 . -1605) (undo-tree-id2228 . -1605) (undo-tree-id2229 . -971) (undo-tree-id2230 . -1605) (undo-tree-id2231 . -1605) (undo-tree-id2232 . -1605) (undo-tree-id2233 . -971) (undo-tree-id2234 . -971) (undo-tree-id2235 . -1605) (undo-tree-id2236 . -1605) (undo-tree-id2237 . -1605) (undo-tree-id2238 . -1605) (undo-tree-id2239 . -971) (undo-tree-id2240 . -1605) (undo-tree-id2241 . -1605) (undo-tree-id2242 . -971) 1606) nil (23765 9 628809 467000) 0 nil]) ((1604 . 1607) (1598 . 1604) (#("Sending msg to" 0 14 (fontified t face font-lock-string-face)) . 1598) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . 14)) nil (23765 9 628842 804000) 0 nil]) ((nil rear-nonsticky nil 1587 . 1588) (1564 . 1643) (t 23764 65446 124302 302000)) nil (23765 9 628846 991000) 0 nil]) ((2819 . 2834) (#("tar" 0 3 (fontified t)) . -2819) (undo-tree-id1976 . -3) (undo-tree-id1977 . -2) (undo-tree-id1978 . -3) (undo-tree-id1979 . -3) (undo-tree-id1980 . -3) (undo-tree-id1981 . -3) (undo-tree-id1982 . -2) (undo-tree-id1983 . -3) (undo-tree-id1984 . -2) (undo-tree-id1985 . -3) 2822 (2811 . 2822) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 2811) (2810 . 2811) (#(" " 0 1 (fontified nil)) . -2810) (2810 . 2811) (#("\"" 0 1 (fontified nil face rust-string-interpolation-face)) . -2810) (2810 . 2811) (#("}" 0 1 (fontified nil face rust-string-interpolation-face)) . 2810) (2809 . 2810) (2808 . 2810) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -2808) (2803 . 2809)) nil (23764 65446 26589 427000) 0 nil]) ((#("                        }" 0 25 (fontified t)) . 2807) (undo-tree-id1986 . 25) (#("{
                            " 0 2 (fontified t) 2 26 (fontified t) 26 30 (fontified t)) . 2782) (undo-tree-id1987 . -26) (undo-tree-id1988 . -26) (undo-tree-id1989 . -26) (undo-tree-id1990 . -26) (undo-tree-id1991 . -26) (undo-tree-id1992 . -26) (undo-tree-id1993 . -26) (undo-tree-id1994 . -26) (undo-tree-id1995 . -26) (undo-tree-id1996 . -26) (undo-tree-id1997 . -30) 2808) nil (23764 65446 26661 589000) 0 nil]) ((#("if &self.target_timeline == \"hashtag:a\" " 0 2 (fontified t face font-lock-keyword-face) 2 4 (fontified t) 4 8 (fontified t face font-lock-keyword-face) 8 28 (fontified t) 28 39 (fontified t face font-lock-string-face) 39 40 (fontified t)) . 2782) (t 23764 65364 507923 859000)) nil (23764 65446 26673 622000) 0 nil]) ((1 . 3299) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    target_timeline: String,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::default(),
            target_timeline: String::new(),
            current_user: None,
        }
    }

    /// Create a blank StreamManager copy
    pub fn blank_copy(&self) -> Self {
        StreamManager { ..self.clone() }
    }
    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn configure_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.update(id, timeline);
        receiver.maybe_subscribe(timeline);
        StreamManager {
            id,
            current_user: Some(user),
            target_timeline: timeline.clone(),
            ..self.clone()
        }
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.update(self.id, &self.target_timeline.clone());
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => {
                        if &self.target_timeline == \"hashtag:a\" {
                            println!(\"Sending msg\");
                        }
                        Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    ))))},
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 190 (fontified t) 190 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 412 (fontified t) 412 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 431 (fontified t) 431 432 (fontified t) 432 436 (fontified t) 436 451 (fontified t face font-lock-variable-name-face) 451 453 (fontified t) 453 459 (fontified t face font-lock-type-face) 459 460 (fontified t) 460 461 (fontified t) 461 465 (fontified t) 465 477 (fontified t face font-lock-variable-name-face) 477 479 (fontified t) 479 485 (fontified t face font-lock-type-face) 485 486 (fontified t) 486 490 (fontified t face font-lock-type-face) 490 495 (fontified t) 495 499 (fontified t face font-lock-keyword-face) 499 500 (fontified t) 500 513 (fontified t face font-lock-type-face) 513 520 (fontified t) 520 523 (fontified t face font-lock-keyword-face) 523 524 (fontified t) 524 526 (fontified t face font-lock-keyword-face) 526 527 (fontified t) 527 530 (fontified t face font-lock-function-name-face) 530 531 (fontified t) 531 539 (fontified t face font-lock-variable-name-face) 539 541 (fontified t) 541 549 (fontified t face font-lock-type-face) 549 552 (fontified t) 552 553 (syntax-table #1# fontified t) 553 554 (fontified t) 554 558 (fontified t face font-lock-type-face) 558 569 (fontified t) 569 582 (fontified t face font-lock-type-face) 582 597 (fontified t) 597 605 (fontified t face font-lock-variable-name-face) 605 607 (fontified t) 607 610 (fontified t face font-lock-type-face) 610 616 (fontified t) 616 621 (fontified t face font-lock-type-face) 621 639 (fontified t) 639 651 (fontified t) 651 653 (fontified t face font-lock-variable-name-face) 653 655 (fontified t) 655 659 (fontified t face font-lock-type-face) 659 665 (fontified t) 665 671 (fontified t) 671 672 (fontified t) 672 684 (fontified t) 684 699 (fontified t face font-lock-variable-name-face) 699 701 (fontified t) 701 707 (fontified t face font-lock-type-face) 707 712 (fontified t) 712 715 (fontified t) 715 716 (fontified t) 716 728 (fontified t) 728 740 (fontified t face font-lock-variable-name-face) 740 742 (fontified t) 742 746 (fontified t face font-lock-type-face) 746 748 (fontified t) 748 763 (fontified t) 763 764 (fontified t) 764 765 (fontified t) 765 769 (fontified t) 769 806 (fontified t face font-lock-doc-face) 806 807 (fontified t face font-lock-doc-face) 807 811 (fontified t) 811 814 (fontified t face font-lock-keyword-face) 814 815 (fontified t) 815 817 (fontified t face font-lock-keyword-face) 817 818 (fontified t) 818 828 (fontified t face font-lock-function-name-face) 828 830 (fontified t) 830 834 (fontified t face font-lock-keyword-face) 834 837 (fontified t) 837 838 (syntax-table #1# fontified t) 838 839 (fontified t) 839 843 (fontified t face font-lock-type-face) 843 854 (fontified t) 854 867 (fontified t face font-lock-type-face) 867 872 (fontified t) 872 876 (fontified t face font-lock-keyword-face) 876 897 (fontified t) 897 963 (fontified t face font-lock-doc-face) 963 971 (fontified t face font-lock-doc-face) 971 975 (fontified t) 975 978 (fontified t face font-lock-keyword-face) 978 979 (fontified t) 979 981 (fontified t face font-lock-keyword-face) 981 982 (fontified t) 982 996 (fontified t face font-lock-function-name-face) 996 998 (fontified t) 998 1002 (fontified t face font-lock-keyword-face) 1002 1004 (fontified t) 1004 1005 (fontified t face font-lock-variable-name-face) 1005 1012 (fontified t face font-lock-variable-name-face) 1012 1015 (fontified t) 1015 1021 (fontified t face font-lock-type-face) 1021 1023 (fontified t) 1023 1027 (fontified t face font-lock-variable-name-face) 1027 1029 (fontified t) 1029 1033 (fontified t face font-lock-type-face) 1033 1036 (fontified t) 1036 1037 (syntax-table #1# fontified t) 1037 1038 (fontified t) 1038 1042 (fontified t face font-lock-type-face) 1042 1044 (fontified t) 1044 1045 (fontified t) 1045 1053 (fontified t) 1053 1056 (fontified t face font-lock-keyword-face) 1056 1057 (fontified t) 1057 1059 (fontified t face font-lock-variable-name-face) 1059 1062 (fontified t) 1062 1066 (fontified t face font-lock-type-face) 1066 1086 (fontified t) 1086 1089 (fontified t face font-lock-keyword-face) 1089 1090 (fontified t) 1090 1093 (fontified t face font-lock-keyword-face) 1093 1094 (fontified t) 1094 1102 (fontified t face font-lock-variable-name-face) 1102 1105 (fontified t) 1105 1109 (fontified t face font-lock-keyword-face) 1109 1133 (fontified t) 1133 1160 (fontified t face font-lock-string-face) 1160 1163 (fontified t) 1163 1180 (fontified t) 1180 1186 (fontified t) 1186 1202 (fontified t) 1202 1214 (fontified t) 1214 1218 (fontified t) 1218 1246 (fontified t) 1246 1254 (fontified t) 1254 1267 (fontified t face font-lock-type-face) 1267 1286 (fontified t) 1286 1298 (fontified t) 1298 1309 (fontified t face font-lock-variable-name-face) 1309 1310 (fontified t face font-lock-variable-name-face) 1310 1312 (fontified t) 1312 1316 (fontified t face font-lock-type-face) 1316 1323 (fontified t) 1323 1324 (fontified t) 1324 1336 (fontified t) 1336 1351 (fontified t face font-lock-variable-name-face) 1351 1353 (fontified t) 1353 1367 (fontified t) 1367 1370 (fontified t) 1370 1371 (fontified t) 1371 1385 (fontified t) 1385 1389 (fontified t face font-lock-keyword-face) 1389 1417 (fontified t) 1417 1421 (fontified t face font-lock-keyword-face) 1421 1422 (fontified t) 1422 1428 (fontified t face font-lock-type-face) 1428 1429 (fontified t) 1429 1432 (fontified t face font-lock-keyword-face) 1432 1433 (fontified t) 1433 1446 (fontified t face font-lock-type-face) 1446 1453 (fontified t) 1453 1457 (fontified t face font-lock-keyword-face) 1457 1458 (fontified t) 1458 1462 (fontified t face font-lock-type-face) 1462 1465 (fontified t) 1465 1470 (fontified t face font-lock-type-face) 1470 1476 (fontified t) 1476 1480 (fontified t face font-lock-keyword-face) 1480 1481 (fontified t) 1481 1486 (fontified t face font-lock-type-face) 1486 1489 (fontified t) 1489 1494 (fontified t face font-lock-type-face) 1494 1496 (fontified t) 1496 1501 (fontified t) 1501 1503 (fontified t face font-lock-keyword-face) 1503 1504 (fontified t) 1504 1508 (fontified t face font-lock-function-name-face) 1508 1510 (fontified t) 1510 1513 (fontified t face font-lock-keyword-face) 1513 1514 (fontified t) 1514 1518 (fontified t face font-lock-keyword-face) 1518 1521 (fontified t) 1521 1522 (syntax-table #1# fontified t) 1522 1523 (fontified t) 1523 1527 (fontified t face font-lock-type-face) 1527 1528 (fontified t) 1528 1534 (fontified t face font-lock-type-face) 1534 1535 (fontified t) 1535 1539 (fontified t face font-lock-type-face) 1539 1541 (fontified t) 1541 1545 (fontified t face font-lock-type-face) 1545 1548 (fontified t) 1548 1552 (fontified t face font-lock-type-face) 1552 1554 (fontified t) 1554 1559 (fontified t face font-lock-type-face) 1559 1571 (fontified t) 1571 1574 (fontified t face font-lock-keyword-face) 1574 1575 (fontified t) 1575 1578 (fontified t face font-lock-keyword-face) 1578 1579 (fontified t) 1579 1587 (fontified t face font-lock-variable-name-face) 1587 1590 (fontified t) 1590 1593 (fontified t face font-lock-keyword-face) 1593 1594 (fontified t face font-lock-keyword-face) 1594 1618 (fontified t) 1618 1641 (fontified t face font-lock-string-face) 1641 1644 (fontified t) 1644 1655 (fontified t) 1655 1661 (fontified t) 1661 1667 (fontified t) 1667 1668 (fontified t) 1668 1672 (fontified t face font-lock-keyword-face) 1672 1673 (fontified t) 1673 1678 (fontified t) 1678 1682 (fontified t face font-lock-keyword-face) 1682 1683 (fontified t) 1683 1704 (fontified t) 1704 1705 (fontified t) 1705 1706 (fontified t) 1706 1708 (fontified t) 1708 1709 (fontified t) 1709 1711 (fontified t) 1711 1717 (fontified t) 1717 1722 (fontified t face font-lock-keyword-face) 1722 1733 (fontified t) 1733 1740 (fontified t) 1740 1741 (fontified t) 1741 1753 (fontified t) 1753 1755 (fontified t face font-lock-type-face) 1755 1756 (fontified t) 1756 1761 (fontified t face font-lock-type-face) 1761 1763 (fontified t) 1763 1768 (fontified t face font-lock-type-face) 1768 1769 (fontified t) 1769 1773 (fontified t face font-lock-type-face) 1773 1777 (fontified t) 1777 1784 (fontified t) 1784 1785 (syntax-table #1# fontified t) 1785 1787 (fontified t) 1787 1788 (fontified t) 1788 1804 (fontified t) 1804 1807 (fontified t face font-lock-keyword-face) 1807 1808 (fontified t) 1808 1812 (fontified t face font-lock-variable-name-face) 1812 1815 (fontified t) 1815 1816 (fontified t face font-lock-keyword-face) 1816 1819 (fontified t face font-lock-keyword-face) 1819 1820 (fontified t) 1820 1843 (fontified t) 1843 1849 (fontified t) 1849 1856 (fontified t) 1856 1883 (fontified t) 1883 1894 (fontified t) 1894 1911 (fontified t) 1911 1938 (fontified t face font-lock-string-face) 1938 1939 (syntax-table #2# fontified t face font-lock-string-face) 1939 1940 (fontified t face font-lock-string-face) 1940 1943 (fontified t) 1943 1960 (fontified t) 1960 1963 (fontified t face font-lock-keyword-face) 1963 1964 (fontified t) 1964 1974 (fontified t face font-lock-variable-name-face) 1974 2013 (fontified t) 2013 2016 (fontified t face font-lock-keyword-face) 2016 2017 (fontified t) 2017 2019 (fontified t face font-lock-variable-name-face) 2019 2021 (fontified t face font-lock-variable-name-face) 2021 2039 (fontified t) 2039 2055 (fontified t) 2055 2058 (fontified t face font-lock-keyword-face) 2058 2059 (fontified t) 2059 2064 (fontified t face font-lock-variable-name-face) 2064 2072 (fontified t) 2072 2073 (fontified t face font-lock-string-face) 2073 2079 (fontified t face font-lock-string-face) 2079 2097 (fontified t) 2097 2111 (fontified t face font-lock-string-face) 2111 2130 (fontified t) 2130 2133 (fontified t face font-lock-keyword-face) 2133 2134 (fontified t) 2134 2138 (fontified t face font-lock-variable-name-face) 2138 2167 (fontified t) 2167 2172 (fontified t) 2172 2175 (fontified t face font-lock-keyword-face) 2175 2176 (fontified t) 2176 2183 (fontified t face font-lock-variable-name-face) 2183 2191 (fontified t) 2191 2200 (fontified t face font-lock-string-face) 2200 2209 (fontified t) 2209 2215 (fontified t) 2215 2231 (fontified t) 2231 2234 (fontified t face font-lock-keyword-face) 2234 2235 (fontified t) 2235 2239 (fontified t face font-lock-variable-name-face) 2239 2241 (fontified t) 2241 2257 (fontified t) 2257 2273 (fontified t) 2273 2276 (fontified t face font-lock-keyword-face) 2276 2277 (fontified t) 2277 2286 (fontified t face font-lock-variable-name-face) 2286 2288 (fontified t) 2288 2294 (fontified t) 2294 2303 (fontified t face font-lock-string-face) 2303 2305 (fontified t) 2305 2315 (fontified t face font-lock-string-face) 2315 2317 (fontified t) 2317 2320 (fontified t) 2320 2347 (fontified t) 2347 2375 (fontified t) 2375 2384 (fontified t face font-lock-string-face) 2384 2385 (syntax-table #2# fontified t face font-lock-string-face) 2385 2386 (fontified t face font-lock-string-face) 2386 2439 (fontified t) 2439 2443 (fontified t face font-lock-keyword-face) 2443 2444 (fontified t face font-lock-keyword-face) 2444 2474 (fontified t) 2474 2495 (fontified t) 2495 2501 (fontified t face font-lock-type-face) 2501 2503 (fontified t) 2503 2515 (fontified t face font-lock-type-face) 2515 2520 (fontified t) 2520 2522 (fontified t face font-lock-keyword-face) 2522 2532 (fontified t) 2532 2533 (fontified t face font-lock-string-face) 2533 2546 (fontified t face font-lock-string-face) 2546 2548 (fontified t) 2548 2549 (syntax-table #1# fontified t) 2549 2550 (fontified t) 2550 2552 (fontified t face font-lock-type-face) 2552 2553 (fontified t) 2553 2558 (fontified t face font-lock-type-face) 2558 2560 (fontified t) 2560 2568 (fontified t face font-lock-type-face) 2568 2592 (fontified t) 2592 2598 (fontified t face font-lock-type-face) 2598 2600 (fontified t) 2600 2608 (fontified t face font-lock-type-face) 2608 2610 (fontified t) 2610 2614 (fontified t face font-lock-type-face) 2614 2615 (fontified t) 2615 2618 (fontified t face font-lock-keyword-face) 2618 2619 (fontified t) 2619 2624 (fontified t face font-lock-variable-name-face) 2624 2627 (fontified t) 2627 2629 (fontified t face font-lock-keyword-face) 2629 2659 (fontified t) 2659 2660 (syntax-table #1# fontified t) 2660 2687 (fontified t) 2687 2689 (fontified t face font-lock-type-face) 2689 2690 (fontified t) 2690 2695 (fontified t face font-lock-type-face) 2695 2697 (fontified t) 2697 2705 (fontified t face font-lock-type-face) 2705 2715 (fontified t) 2715 2729 (fontified t) 2729 2730 (fontified t) 2730 2753 (fontified t) 2753 2754 (fontified t syntax-table #1#) 2754 2755 (fontified t) 2755 2756 (fontified t) 2756 2757 (fontified t) 2757 2781 (fontified t) 2781 2783 (fontified t face font-lock-keyword-face) 2783 2785 (fontified t) 2785 2789 (fontified t face font-lock-keyword-face) 2789 2790 (fontified t) 2790 2809 (fontified t) 2809 2819 (fontified t face font-lock-string-face) 2819 2820 (fontified t face font-lock-string-face) 2820 2821 (fontified t) 2821 2822 (fontified t) 2822 2823 (fontified t) 2823 2851 (fontified t) 2851 2859 (fontified t face rust-builtin-formatting-macro-face) 2859 2860 (fontified t) 2860 2873 (fontified t face font-lock-string-face) 2873 2875 (fontified t) 2875 2876 (fontified t) 2876 2900 (fontified t) 2900 2901 (fontified t) 2901 2902 (fontified t) 2902 2926 (fontified t) 2926 2928 (fontified t face font-lock-type-face) 2928 2929 (fontified t) 2929 2934 (fontified t face font-lock-type-face) 2934 2936 (fontified t) 2936 2941 (fontified t face font-lock-type-face) 2941 2942 (fontified t) 2942 2946 (fontified t face font-lock-type-face) 2946 2947 (fontified t) 2947 2952 (fontified t face font-lock-preprocessor-face) 2952 2954 (fontified t) 2954 2979 (fontified t) 2979 2986 (fontified t face font-lock-string-face) 2986 2988 (fontified t) 2988 2995 (fontified t) 2995 3018 (fontified t) 3018 3020 (fontified t) 3020 3029 (fontified t face font-lock-string-face) 3029 3041 (fontified t) 3041 3065 (fontified t) 3065 3066 (fontified t) 3066 3068 (fontified t) 3068 3112 (fontified t) 3112 3114 (fontified t face font-lock-type-face) 3114 3115 (fontified t) 3115 3120 (fontified t face font-lock-type-face) 3120 3122 (fontified t) 3122 3127 (fontified t face font-lock-type-face) 3127 3128 (fontified t) 3128 3132 (fontified t face font-lock-type-face) 3132 3136 (fontified t) 3136 3137 (syntax-table #1# fontified t) 3137 3138 (fontified t) 3138 3140 (fontified t face font-lock-type-face) 3140 3141 (fontified t) 3141 3146 (fontified t face font-lock-type-face) 3146 3148 (fontified t) 3148 3153 (fontified t face font-lock-type-face) 3153 3154 (fontified t) 3154 3158 (fontified t face font-lock-type-face) 3158 3162 (fontified t) 3162 3174 (fontified t) 3174 3176 (fontified t face font-lock-type-face) 3176 3177 (fontified t) 3177 3182 (fontified t face font-lock-type-face) 3182 3184 (fontified t) 3184 3192 (fontified t face font-lock-type-face) 3192 3195 (fontified t) 3195 3196 (syntax-table #1# fontified t) 3196 3197 (fontified t) 3197 3199 (fontified t face font-lock-type-face) 3199 3200 (fontified t) 3200 3205 (fontified t face font-lock-type-face) 3205 3207 (fontified t) 3207 3215 (fontified t face font-lock-type-face) 3215 3230 (fontified t) 3230 3233 (fontified t face font-lock-type-face) 3233 3238 (fontified t) 3238 3239 (syntax-table #1# fontified t) 3239 3240 (fontified t) 3240 3243 (fontified t face font-lock-type-face) 3243 3266 (fontified t)) . 1) (undo-tree-id1770 . -1709) (undo-tree-id1771 . -665) (undo-tree-id1772 . -665) (undo-tree-id1773 . 391) (undo-tree-id1774 . -672) (undo-tree-id1775 . -1709) (undo-tree-id1776 . -805) (undo-tree-id1777 . -805) (undo-tree-id1778 . -805) (undo-tree-id1779 . -1788) (undo-tree-id1780 . -1788) (undo-tree-id1781 . -1496) (undo-tree-id1782 . -1788) (undo-tree-id1783 . -1788) (undo-tree-id1784 . -1496) (undo-tree-id1785 . -1733) (undo-tree-id1786 . -1732) (undo-tree-id1787 . -1496) (undo-tree-id1788 . -1733) (undo-tree-id1789 . -1733) (undo-tree-id1790 . -1733) (undo-tree-id1791 . -1733) (undo-tree-id1792 . -1496) (undo-tree-id1793 . -1727) (undo-tree-id1794 . -1727) (undo-tree-id1795 . -1596) (undo-tree-id1796 . -1596) (undo-tree-id1797 . -401) (undo-tree-id1798 . -400) (undo-tree-id1799 . -401) (undo-tree-id1800 . -401) (undo-tree-id1801 . -1788) (undo-tree-id1802 . -1788) (undo-tree-id1803 . -1788) (undo-tree-id1804 . -893) (undo-tree-id1805 . -1788) (undo-tree-id1806 . -1788) (undo-tree-id1807 . -893) (undo-tree-id1808 . -1788) (undo-tree-id1809 . -1788) (undo-tree-id1810 . -1788) (undo-tree-id1811 . -1563) (undo-tree-id1812 . -402) (undo-tree-id1813 . -401) (undo-tree-id1814 . -1563) (undo-tree-id1815 . -402) (undo-tree-id1816 . -402) (undo-tree-id1817 . -402) (undo-tree-id1818 . -1788) (undo-tree-id1819 . -1817) (undo-tree-id1820 . -893) (undo-tree-id1821 . -402) (undo-tree-id1822 . -1788) (undo-tree-id1823 . -1788) (undo-tree-id1824 . -1788) (undo-tree-id1825 . -893) (undo-tree-id1826 . -1788) (undo-tree-id1827 . -1788) (undo-tree-id1828 . -1788) (undo-tree-id1829 . -1788) (undo-tree-id1830 . -893) (undo-tree-id1831 . -1788) (undo-tree-id1832 . -1788) (undo-tree-id1833 . -1788) (undo-tree-id1834 . -665) (undo-tree-id1835 . -1351) (undo-tree-id1836 . -1661) (undo-tree-id1837 . -1661) (undo-tree-id1838 . -846) (undo-tree-id1839 . -1661) (undo-tree-id1840 . -1661) (undo-tree-id1841 . -846) (undo-tree-id1842 . -1197) (undo-tree-id1843 . -1197) (undo-tree-id1844 . -846) (undo-tree-id1845 . -1351) (undo-tree-id1846 . -1197) (undo-tree-id1847 . -1702) (undo-tree-id1848 . -1702) (undo-tree-id1849 . -846) (undo-tree-id1850 . -1702) (undo-tree-id1851 . -1702) (undo-tree-id1852 . -1702) (undo-tree-id1853 . -846) (undo-tree-id1854 . -1702) (undo-tree-id1855 . -1702) (undo-tree-id1856 . -846) (undo-tree-id1857 . -491) (undo-tree-id1858 . -493) (undo-tree-id1859 . -214) (undo-tree-id1860 . -1197) (undo-tree-id1861 . -491) (undo-tree-id1862 . -1709) (undo-tree-id1863 . -1709) (undo-tree-id1864 . -672) (undo-tree-id1865 . -1709) (undo-tree-id1866 . -1709) (undo-tree-id1867 . -672) (undo-tree-id1868 . -1709) (undo-tree-id1869 . -1709) (undo-tree-id1870 . -672) (undo-tree-id1871 . -491) (undo-tree-id1872 . -1709) (undo-tree-id1873 . -1709) (undo-tree-id1874 . -1416) (undo-tree-id1875 . -1416) (undo-tree-id1876 . -157) (undo-tree-id1877 . -157) (undo-tree-id1878 . -1416) (undo-tree-id1879 . -157) (undo-tree-id1880 . -1707) (undo-tree-id1881 . -1707) (undo-tree-id1882 . -846) (undo-tree-id1883 . -157) (undo-tree-id1884 . -1707) (undo-tree-id1885 . -1707) (undo-tree-id1886 . -1709) (undo-tree-id1887 . -1709) (undo-tree-id1888 . -672) (undo-tree-id1889 . -1707) (undo-tree-id1890 . -1709) (undo-tree-id1891 . -1709) (undo-tree-id1892 . -2874) (undo-tree-id1893 . -2874) (undo-tree-id1894 . -1417) (undo-tree-id1895 . -2874) (undo-tree-id1896 . -1417) (undo-tree-id1897 . -2874) (undo-tree-id1898 . -2874) (undo-tree-id1899 . -2874) (undo-tree-id1900 . -2874) (undo-tree-id1901 . -1417) (undo-tree-id1902 . -2874) (undo-tree-id1903 . -2874) (undo-tree-id1904 . -1417) (undo-tree-id1905 . -2873) (undo-tree-id1906 . -2874) (undo-tree-id1907 . -2873) (undo-tree-id1908 . -2874) (undo-tree-id1909 . -2873) (undo-tree-id1910 . -2874) (undo-tree-id1911 . -2873) (undo-tree-id1912 . -2874) (undo-tree-id1913 . -2872) (undo-tree-id1914 . -2873) (undo-tree-id1915 . -2872) (undo-tree-id1916 . -2873) (undo-tree-id1917 . -2873) (undo-tree-id1918 . -2874) (undo-tree-id1919 . -2873) (undo-tree-id1920 . -2874) (undo-tree-id1921 . -2859) (undo-tree-id1922 . -2860) (undo-tree-id1923 . -2873) (undo-tree-id1924 . -2874) (undo-tree-id1925 . -2873) (undo-tree-id1926 . -2874) (undo-tree-id1927 . -2873) (undo-tree-id1928 . -2874) (undo-tree-id1929 . -2873) (undo-tree-id1930 . -2874) (undo-tree-id1931 . -2872) (undo-tree-id1932 . -2873) (undo-tree-id1933 . -2872) (undo-tree-id1934 . -2873) (undo-tree-id1935 . -2873) (undo-tree-id1936 . -2874) (undo-tree-id1937 . -2873) (undo-tree-id1938 . -2874) (undo-tree-id1939 . -2859) (undo-tree-id1940 . -2860) (undo-tree-id1941 . 407) (undo-tree-id1942 . -2860) (undo-tree-id1943 . 406) (undo-tree-id1944 . -2873) (undo-tree-id1945 . 393) (undo-tree-id1946 . -2874) 2875) nil (23764 65364 494191 426000) 0 nil]) ((2875 . 2876) (#(")" 0 1 (fontified nil)) . 2875) (2874 . 2875) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 2874) (2862 . 2874) (2861 . 2863) (#("\"" 0 1 (fontified nil)) . -2861) (2861 . 2862) (2860 . 2862) (#("(" 0 1 (fontified nil)) . -2860) (2852 . 2861) (2823 . 2852) 2781) nil (23764 65364 494210 540000) 0 nil]) ((2823 . 2848) (2822 . 2824) (#("{" 0 1 (fontified nil)) . -2822) (2821 . 2823)) nil (23764 65364 494215 40000) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 2821) (2820 . 2821) (#(" " 0 1 (fontified nil)) . -2820) (2820 . 2821) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -2820) (2820 . 2821) (#(":" 0 1 (fontified t face font-lock-string-face)) . -2820) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) 2821 (2813 . 2821) (2811 . 2813) (2810 . 2812) (#("\"" 0 1 (fontified nil)) . -2810) (2806 . 2811) (2791 . 2806) (#("ta" 0 2 (fontified t)) . -2791) (undo-tree-id1949 . -2) (undo-tree-id1950 . -2) 2793 (2790 . 2793) (#("0" 0 1 (fontified t)) . -2790) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) 2791 (2785 . 2791) (#("s" 0 1 (fontified t)) . -2785) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (#("e" 0 1 (fontified t)) . -2786) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (#("l" 0 1 (fontified t)) . -2787) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) 2788 (2785 . 2788) (2782 . 2785) (2757 . 2782) 2754) nil (23764 65364 494237 403000) 0 nil]) ((2757 . 2782) (2896 . 2897) (#("}" 0 1 (fontified t)) . -2759) (2759 . 2760) (#("}" 0 1 (fontified t)) . -2757) (2756 . 2758) (#("{" 0 1 (fontified nil)) . -2756) (2756 . 2757)) nil (23764 65364 494245 409000) 0 nil]) ((#("        println!(\"Polled by {}\", self.target_timeline);
" 0 8 (fontified t) 8 16 (fontified t face rust-builtin-formatting-macro-face) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 23 (fontified t face font-lock-string-face) 23 28 (fontified t face font-lock-string-face) 28 29 (fontified t face rust-string-interpolation-face) 29 30 (fontified t face rust-string-interpolation-face) 30 31 (fontified t face font-lock-string-face) 31 33 (fontified t) 33 34 (fontified t face font-lock-keyword-face) 34 37 (fontified t face font-lock-keyword-face) 37 38 (fontified t) 38 53 (fontified t) 53 54 (fontified t) 54 55 (fontified t) 55 56 (fontified t)) . 1710) (undo-tree-id1959 . -54) (undo-tree-id1960 . 1) (undo-tree-id1961 . -54) (undo-tree-id1962 . -54) (undo-tree-id1963 . -54) (undo-tree-id1964 . -54) (undo-tree-id1965 . -54) (undo-tree-id1966 . -54) (undo-tree-id1967 . -54) (undo-tree-id1968 . -54) (undo-tree-id1969 . -54) (undo-tree-id1970 . -54) (undo-tree-id1971 . -54) (undo-tree-id1972 . -54) (undo-tree-id1973 . -54) (undo-tree-id1974 . -24) (undo-tree-id1975 . -24) 1734 (t 23764 65235 55040 328000)) nil (23764 65364 494262 282000) 0 nil]) ((1764 . 1765) (#(")" 0 1 (fontified nil)) . 1764) (1763 . 1764) (#(" " 0 1 (fontified nil)) . 1763) (1763 . 1764) (#(")" 0 1 (fontified nil)) . 1763) (1748 . 1764) (#("ta" 0 2 (fontified nil)) . 1748) (1744 . 1750) (#("le" 0 1 (fontified nil) 1 2 (fontified nil)) . 1744) (1741 . 1746) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 1741) (1740 . 1741) (#(" " 0 1 (fontified nil)) . 1740) (1740 . 1741) (#("\"" 0 1 (fontified nil face rust-string-interpolation-face)) . 1740) (1740 . 1741) (#("}" 0 1 (fontified nil face rust-string-interpolation-face)) . 1740) (1739 . 1740) (#(" " 0 1 (fontified nil)) . 1739) (1739 . 1740) (#("}" 0 1 (fontified nil face rust-string-interpolation-face)) . 1739) (1739 . 1740) (#("\\\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1739) (1739 . 1740) (1739 . 1740) (#("{}" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1739) (1739 . 1741) (#("{" 0 1 (fontified nil face rust-string-interpolation-face)) . 1739) (1739 . 1740) (1738 . 1740) (#("{" 0 1 (fontified nil face font-lock-string-face)) . 1738) (1733 . 1739) (#(" " 0 1 (fontified nil face font-lock-string-face)) . 1733) (1728 . 1734) (1727 . 1729) (#("\"" 0 1 (fontified nil)) . 1727) (1727 . 1728) (1726 . 1728) (#("(" 0 1 (fontified nil)) . 1726) (1718 . 1727) (#("print" 0 5 (fontified nil)) . 1718) (1709 . 1723) (t 23764 63493 116079 145000)) ((#("
        print" 0 1 (fontified t) 1 9 (fontified nil) 9 14 (fontified nil)) . 1709) (undo-tree-id1191 . -9) (undo-tree-id1192 . -9) (undo-tree-id1193 . -9) (undo-tree-id1194 . -9) (undo-tree-id1195 . -9) (undo-tree-id1196 . -9) (undo-tree-id1197 . -9) (undo-tree-id1198 . -9) (undo-tree-id1199 . -9) (undo-tree-id1201 . -9) (undo-tree-id1203 . -9) (undo-tree-id1205 . -9) (undo-tree-id1207 . -9) (undo-tree-id1209 . -9) (undo-tree-id1211 . -9) (undo-tree-id1213 . -9) (undo-tree-id1215 . -9) (undo-tree-id1217 . -9) (undo-tree-id1219 . -9) (undo-tree-id1221 . -9) (undo-tree-id1223 . -9) (undo-tree-id1225 . -9) (undo-tree-id1227 . -9) (undo-tree-id1229 . -9) (undo-tree-id1231 . -9) (undo-tree-id1233 . -9) (undo-tree-id1235 . -9) (undo-tree-id1237 . -9) (undo-tree-id1239 . -9) (undo-tree-id1241 . -9) (undo-tree-id1243 . -9) (1718 . 1723) (#("println!(" 0 8 (fontified nil face rust-builtin-formatting-macro-face) 8 9 (fontified nil)) . 1718) (undo-tree-id1244 . -8) (undo-tree-id1245 . -8) (undo-tree-id1246 . -8) (undo-tree-id1247 . -8) (undo-tree-id1248 . -8) (undo-tree-id1249 . -8) (undo-tree-id1250 . -8) (undo-tree-id1251 . -8) (undo-tree-id1252 . -8) (undo-tree-id1254 . -8) (undo-tree-id1256 . -8) (undo-tree-id1258 . -8) (undo-tree-id1260 . -8) (undo-tree-id1262 . -8) (undo-tree-id1264 . -8) (undo-tree-id1266 . -8) (undo-tree-id1268 . -8) (undo-tree-id1270 . -8) (undo-tree-id1272 . -8) (undo-tree-id1274 . -8) (undo-tree-id1276 . -8) (undo-tree-id1278 . -8) (undo-tree-id1280 . -8) (undo-tree-id1282 . -8) (undo-tree-id1284 . -8) (undo-tree-id1286 . -8) (undo-tree-id1288 . -8) (undo-tree-id1290 . -8) (undo-tree-id1292 . -8) (undo-tree-id1294 . -8) (undo-tree-id1296 . -8) (1726 . 1727) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 1726) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1307 . -1) (undo-tree-id1309 . -1) (undo-tree-id1311 . -1) (undo-tree-id1313 . -1) (undo-tree-id1315 . -1) (undo-tree-id1317 . -1) (undo-tree-id1319 . -1) (undo-tree-id1321 . -1) (undo-tree-id1323 . -1) (undo-tree-id1325 . -1) (undo-tree-id1327 . -1) (undo-tree-id1329 . -1) (undo-tree-id1331 . -1) (undo-tree-id1333 . -1) (undo-tree-id1335 . -1) (undo-tree-id1337 . -1) (undo-tree-id1339 . -1) (undo-tree-id1341 . -1) (undo-tree-id1343 . -1) (undo-tree-id1345 . -1) (undo-tree-id1347 . -1) (#("\"" 0 1 (fontified nil)) . 1727) (undo-tree-id1349 . 1) (1727 . 1728) (#("\"\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1727) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1360 . -1) (undo-tree-id1362 . -1) (undo-tree-id1364 . -1) (undo-tree-id1366 . -1) (undo-tree-id1368 . -1) (undo-tree-id1370 . -1) (undo-tree-id1372 . -1) (undo-tree-id1374 . -1) (undo-tree-id1376 . -1) (undo-tree-id1378 . -1) (undo-tree-id1380 . -1) (undo-tree-id1382 . -1) (undo-tree-id1384 . -1) (undo-tree-id1386 . -1) (undo-tree-id1388 . -1) (undo-tree-id1390 . -1) (undo-tree-id1392 . -1) (undo-tree-id1394 . -1) (undo-tree-id1396 . -1) (#("Polle " 0 1 (fontified nil face font-lock-string-face) 1 5 (fontified nil face font-lock-string-face) 5 6 (fontified nil face font-lock-string-face)) . 1728) (undo-tree-id1397 . -5) (undo-tree-id1398 . -5) (undo-tree-id1399 . -5) (undo-tree-id1400 . -5) (undo-tree-id1401 . -5) (undo-tree-id1402 . -5) (undo-tree-id1403 . -5) (undo-tree-id1404 . -5) (undo-tree-id1405 . -5) (undo-tree-id1407 . -5) (undo-tree-id1409 . -5) (undo-tree-id1411 . -5) (undo-tree-id1413 . -5) (undo-tree-id1415 . -5) (undo-tree-id1417 . -5) (undo-tree-id1419 . -5) (undo-tree-id1421 . -5) (undo-tree-id1423 . -5) (undo-tree-id1425 . -5) (undo-tree-id1427 . -5) (undo-tree-id1429 . -5) (undo-tree-id1431 . -5) (undo-tree-id1433 . -5) (undo-tree-id1435 . -5) (undo-tree-id1437 . -5) (undo-tree-id1439 . -5) (undo-tree-id1441 . 1) (1733 . 1734) (#("d by {" 0 5 (fontified nil face font-lock-string-face) 5 6 (fontified nil face font-lock-string-face)) . 1733) (undo-tree-id1443 . -5) (undo-tree-id1444 . -5) (undo-tree-id1445 . -5) (undo-tree-id1446 . -5) (undo-tree-id1447 . -5) (undo-tree-id1448 . -5) (undo-tree-id1449 . -5) (undo-tree-id1450 . -5) (undo-tree-id1451 . -5) (undo-tree-id1453 . -5) (undo-tree-id1455 . -5) (undo-tree-id1457 . -5) (undo-tree-id1459 . -5) (undo-tree-id1461 . -5) (undo-tree-id1463 . -5) (undo-tree-id1465 . -5) (undo-tree-id1467 . -5) (undo-tree-id1469 . -5) (undo-tree-id1471 . -5) (undo-tree-id1473 . -5) (undo-tree-id1475 . -5) (undo-tree-id1477 . -5) (undo-tree-id1479 . -5) (undo-tree-id1481 . -5) (undo-tree-id1483 . -5) (undo-tree-id1485 . -5) (undo-tree-id1487 . 1) (1738 . 1739) (#("{}" 0 1 (fontified nil face rust-string-interpolation-face) 1 2 (fontified nil face rust-string-interpolation-face)) . 1738) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1499 . -1) (undo-tree-id1501 . -1) (undo-tree-id1503 . -1) (undo-tree-id1505 . -1) (undo-tree-id1507 . -1) (undo-tree-id1509 . -1) (undo-tree-id1511 . -1) (undo-tree-id1513 . -1) (undo-tree-id1515 . -1) (undo-tree-id1517 . -1) (undo-tree-id1519 . -1) (undo-tree-id1521 . -1) (undo-tree-id1523 . -1) (undo-tree-id1525 . -1) (undo-tree-id1527 . -1) (undo-tree-id1529 . -1) (undo-tree-id1531 . -1) (undo-tree-id1533 . 1) (#("{" 0 1 (fontified nil face rust-string-interpolation-face)) . 1739) (1739 . 1740) (#("{}" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 1739) (1739 . 1741) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 1739) (#("\\" 0 1 (fontified nil face font-lock-string-face)) . 1739) (1739 . 1741) (#("}" 0 1 (fontified nil face rust-string-interpolation-face)) . 1739) (1739 . 1740) (#(" " 0 1 (fontified nil)) . 1739) (1739 . 1740) (#("}" 0 1 (fontified nil face rust-string-interpolation-face)) . 1739) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1551 . -1) (undo-tree-id1553 . -1) (undo-tree-id1555 . -1) (undo-tree-id1557 . -1) (undo-tree-id1559 . -1) (undo-tree-id1561 . -1) (undo-tree-id1563 . -1) (undo-tree-id1565 . -1) (undo-tree-id1567 . -1) (undo-tree-id1569 . -1) (undo-tree-id1571 . -1) (undo-tree-id1573 . -1) (undo-tree-id1575 . -1) (undo-tree-id1577 . -1) (undo-tree-id1579 . -1) (undo-tree-id1581 . -1) (undo-tree-id1583 . -1) (undo-tree-id1585 . -1) (1740 . 1741) (#("\"" 0 1 (fontified nil face rust-string-interpolation-face)) . 1740) (1740 . 1741) (#(" " 0 1 (fontified nil)) . 1740) (1740 . 1741) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 1740) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1598 . -1) (undo-tree-id1600 . -1) (undo-tree-id1602 . -1) (undo-tree-id1604 . -1) (undo-tree-id1606 . -1) (undo-tree-id1608 . -1) (undo-tree-id1610 . -1) (undo-tree-id1612 . -1) (undo-tree-id1614 . -1) (undo-tree-id1616 . -1) (undo-tree-id1618 . -1) (undo-tree-id1620 . -1) (undo-tree-id1622 . -1) (undo-tree-id1624 . -1) (undo-tree-id1626 . -1) (undo-tree-id1628 . -1) (1741 . 1742) (#(", sle" 0 2 (fontified nil) 2 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 5 (fontified nil)) . 1741) (undo-tree-id1629 . -3) (undo-tree-id1630 . -3) (undo-tree-id1631 . -3) (undo-tree-id1632 . -3) (undo-tree-id1633 . -3) (undo-tree-id1634 . -3) (undo-tree-id1635 . -3) (undo-tree-id1636 . -3) (undo-tree-id1637 . -3) (undo-tree-id1639 . -3) (undo-tree-id1641 . -3) (undo-tree-id1643 . -3) (undo-tree-id1645 . -3) (undo-tree-id1647 . -3) (undo-tree-id1649 . -3) (undo-tree-id1651 . -3) (undo-tree-id1653 . -3) (undo-tree-id1655 . -3) (undo-tree-id1657 . -3) (undo-tree-id1659 . -3) (undo-tree-id1661 . -3) (undo-tree-id1663 . -3) (undo-tree-id1665 . 2) (1744 . 1746) (#("elf.ta" 0 3 (fontified nil face font-lock-keyword-face) 3 4 (fontified nil) 4 6 (fontified nil)) . 1744) (undo-tree-id1667 . -4) (undo-tree-id1668 . -4) (undo-tree-id1669 . -4) (undo-tree-id1670 . -4) (undo-tree-id1671 . -4) (undo-tree-id1672 . -4) (undo-tree-id1673 . -4) (undo-tree-id1674 . -4) (undo-tree-id1675 . -4) (undo-tree-id1677 . -4) (undo-tree-id1679 . -4) (undo-tree-id1681 . -4) (undo-tree-id1683 . -4) (undo-tree-id1685 . -4) (undo-tree-id1687 . -4) (undo-tree-id1689 . -4) (undo-tree-id1691 . -4) (undo-tree-id1693 . -4) (undo-tree-id1695 . -4) (undo-tree-id1697 . -4) (undo-tree-id1699 . -4) (undo-tree-id1701 . -4) (undo-tree-id1703 . 2) (1748 . 1750) (#("target_timeline)" 0 15 (fontified nil) 15 16 (fontified nil)) . 1748) (undo-tree-id1705 . -15) (undo-tree-id1706 . -15) (undo-tree-id1707 . -15) (undo-tree-id1708 . -15) (undo-tree-id1709 . -15) (undo-tree-id1710 . -15) (undo-tree-id1711 . -15) (undo-tree-id1712 . -15) (undo-tree-id1713 . -15) (undo-tree-id1715 . -15) (undo-tree-id1717 . -15) (undo-tree-id1719 . -15) (undo-tree-id1721 . -15) (undo-tree-id1723 . -15) (undo-tree-id1725 . -15) (undo-tree-id1727 . -15) (undo-tree-id1729 . -15) (undo-tree-id1731 . -15) (undo-tree-id1733 . -15) (undo-tree-id1735 . -15) (undo-tree-id1737 . -15) (undo-tree-id1739 . -15) (undo-tree-id1741 . 1) (1763 . 1764) (#(" " 0 1 (fontified nil)) . 1763) (1763 . 1764) (#(")" 0 1 (fontified nil)) . 1763) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1754 . -1) (undo-tree-id1756 . -1) (undo-tree-id1758 . -1) (undo-tree-id1760 . -1) (undo-tree-id1762 . -1) (undo-tree-id1764 . -1) (undo-tree-id1766 . -1) (undo-tree-id1768 . 1) (1764 . 1765) (#(";" 0 1 (fontified t)) . 1764) (t 23764 61772 238011 786000)) (23764 65233 177320 884000) 0 nil]) ((1705 . 1707) (#("(" 0 1 (fontified nil)) . -1705) (1705 . 1706) (#("9" 0 1 (fontified t)) . -1705) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) 1706 (1700 . 1706) (1699 . 1700) (t 23764 61356 629571 94000)) nil (23764 63492 188892 107000) 0 nil]) ((1678 . 1679) (t 23764 61219 96742 967000)) nil (23764 61356 549505 653000) 0 nil]) ((1190 . 1200)) nil (23764 61219 11660 352000) 0 nil]) ((1673 . 1688) (#("tar" 0 3 (fontified t)) . -1673) (undo-tree-id1029 . -3) 1676 (1672 . 1676) (#("/" 0 1 (fontified t)) . -1672) (undo-tree-id1030 . -1) 1673 (1666 . 1673)) nil (23764 61219 11681 998000) 0 nil]) ((1181 . 1187) (#("set_manager_id" 0 14 (fontified t)) . 1181) (1660 . 1666) (#("set_manager_id" 0 14 (fontified t)) . 1660) (undo-tree-id1031 . -10) (undo-tree-id1032 . -11) (undo-tree-id1033 . -10) (undo-tree-id1034 . -10) (undo-tree-id1035 . -10) (undo-tree-id1036 . -10) (t 23764 61143 953682 317000)) nil (23764 61219 11699 521000) 0 nil]) ((1368 . 1369) (#(")" 0 1 (fontified nil)) . 1368) (undo-tree-id1013 . -1) (1367 . 1368) (1366 . 1368) (#("(" 0 1 (fontified nil)) . -1366) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (1360 . 1367) (#("," 0 1 (fontified t)) . -1360) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) 1361) nil (23764 61143 939681 667000) 0 nil]) ((692 . 700) (#("stream" 0 6 (fontified t face font-lock-variable-name-face)) . 692)) nil (23764 61143 939687 295000) 0 nil]) ((444 . 452) (#("stream" 0 6 (fontified t face font-lock-variable-name-face)) . 444) (undo-tree-id1018 . -1) 445) nil (23764 61143 939691 37000) 0 nil]) ((1356 . 1357) (1348 . 1356) (#("timel" 0 5 (fontified t)) . -1348) (undo-tree-id1019 . -5) 1353 (1348 . 1353) (#("ti" 0 2 (fontified t)) . 1348)) nil (23764 61143 939695 610000) 0 nil]) ((1338 . 1346) (#("stream" 0 6 (fontified t face font-lock-variable-name-face)) . 1338) (undo-tree-id1020 . -5) 1343) nil (23764 61143 939699 177000) 0 nil]) ((1346 . 1348) (1344 . 1346) (1331 . 1344) (#("targ" 0 4 (fontified t)) . -1331) (undo-tree-id1021 . -4) (undo-tree-id1022 . -4) 1335 (1334 . 1335) (#("t" 0 1 (fontified t)) . -1334) (undo-tree-id1023 . -1) 1335 (1331 . 1335) (#("s" 0 1 (fontified t)) . -1331) (undo-tree-id1024 . -1) (#("t" 0 1 (fontified t)) . -1332) (undo-tree-id1025 . -1) 1333 (1331 . 1333) (1318 . 1331) 1311) nil (23764 61143 939709 802000) 0 nil]) ((711 . 712) (#(")" 0 1 (fontified nil)) . 711) (710 . 711) (709 . 711) (#("(" 0 1 (fontified nil)) . -709) (701 . 710) (#("u" 0 1 (fontified t face font-lock-type-face)) . -701) (undo-tree-id1026 . -1) 702 (699 . 702) (696 . 699) (683 . 696) (#("tar" 0 3 (fontified t)) . -683) (undo-tree-id1027 . -3) (undo-tree-id1028 . -3) 686 (683 . 686) (670 . 683) 663) nil (23764 61143 939720 477000) 0 nil] [nil nil ((nil rear-nonsticky nil 665 . 666) (nil fontified nil 664 . 666) (664 . 666) 663) ((#("tl" 0 1 (fontified nil) 1 2 (fontified nil rear-nonsticky nil)) . 664) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (nil rear-nonsticky t 665 . 666)) (23764 61060 483631 657000) 0 nil]) ((454 . 459) (437 . 454) (432 . 437) (t 23764 59379 175331 567000) 413) nil (23764 61060 487393 902000) 0 nil]) ((#("                dbg!(&receiver);
" 0 15 (fontified t) 15 16 (fontified t rear-nonsticky t) 16 20 (fontified t face font-lock-preprocessor-face) 20 22 (fontified t) 22 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t)) . 1644) (undo-tree-id986 . -29) (undo-tree-id987 . -32) (undo-tree-id988 . 3) (undo-tree-id989 . -29) (undo-tree-id990 . -33) (undo-tree-id991 . -33) (undo-tree-id992 . -33) (undo-tree-id993 . -33) (undo-tree-id994 . -32) (undo-tree-id995 . -29) (undo-tree-id996 . -29) (undo-tree-id997 . -29) (undo-tree-id998 . -29) (undo-tree-id999 . -29) (undo-tree-id1000 . -29) (undo-tree-id1001 . -29) (undo-tree-id1002 . -29) (undo-tree-id1003 . -29) (undo-tree-id1004 . -29) (undo-tree-id1005 . -29) (undo-tree-id1006 . -29)) ((1644 . 1677) (t 23764 59379 175331 567000)) (23764 60729 171161 72000) 0 nil] [nil nil ((#("                dbg!(&receiver);
" 0 15 (fontified t) 15 16 (fontified t rear-nonsticky t) 16 20 (fontified t face font-lock-preprocessor-face) 20 22 (fontified t) 22 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 33 (fontified t)) . 1644) (undo-tree-id934 . -29) (undo-tree-id935 . -32) (undo-tree-id936 . 3) (undo-tree-id937 . -29) (undo-tree-id938 . -33) (undo-tree-id939 . -33) (undo-tree-id940 . -33) (undo-tree-id941 . -33) (undo-tree-id942 . -32) (undo-tree-id943 . -29) (undo-tree-id944 . -29) (undo-tree-id945 . -29) (undo-tree-id946 . -29) (undo-tree-id947 . -29) (undo-tree-id948 . -29) (undo-tree-id949 . -29) (undo-tree-id950 . -29) (undo-tree-id951 . -29) (undo-tree-id952 . -29) (undo-tree-id953 . -29) 1673 (t 23764 58607 731715 180000)) ((1644 . 1677)) (23764 58989 690918 802000) 0 nil]) ((1666 . 1674) (#("rec" 0 3 (fontified t)) . -1666) (undo-tree-id933 . -3) 1669 (1668 . 1669) (1666 . 1668) (#("value" 0 5 (fontified t)) . 1666)) nil (23764 60726 754928 174000) 0 nil]) ((nil rear-nonsticky nil 1659 . 1660) (#("
" 0 1 (fontified nil)) . -1673) (1643 . 1674) 1597 (t 23764 58570 335180 152000)) nil (23764 58607 714565 182000) 0 nil] [nil nil ((nil rear-nonsticky nil 1612 . 1613) (#("
" 0 1 (fontified nil)) . -1626) (1596 . 1627) 1565 (t 23764 58570 335180 152000)) ((#("
                dbg!(&value);
" 0 1 (fontified t) 1 16 (fontified nil) 16 17 (fontified nil rear-nonsticky nil) 17 21 (fontified nil face font-lock-preprocessor-face) 21 28 (fontified nil) 28 29 (fontified nil) 29 30 (fontified nil) 30 31 (fontified nil)) . 1596) (undo-tree-id926 . -30) (undo-tree-id927 . -1) (undo-tree-id928 . -30) (undo-tree-id929 . -17) (undo-tree-id930 . -17) (undo-tree-id931 . -17) (undo-tree-id932 . -17) (1626 . 1627) (nil rear-nonsticky t 1612 . 1613)) (23764 58597 754904 728000) 0 nil]) ((#("                dbg!(&value);
" 0 16 (fontified t) 16 20 (fontified t face font-lock-preprocessor-face) 20 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 1644) (undo-tree-id912 . 1) (undo-tree-id913 . -28) (undo-tree-id914 . -28) (undo-tree-id915 . -28) (undo-tree-id916 . -28) (undo-tree-id917 . -28) (undo-tree-id918 . -28) (undo-tree-id919 . -28) (undo-tree-id920 . 10) (undo-tree-id921 . -21) (undo-tree-id922 . 9) (undo-tree-id923 . -27) (undo-tree-id924 . 3) (undo-tree-id925 . -28) 1672 (t 23764 58398 209084 956000)) nil (23764 58597 762242 895000) 0 nil] [nil nil ((#("                dbg!(&value);
" 0 16 (fontified t) 16 20 (fontified t face font-lock-preprocessor-face) 20 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t)) . 1644) (undo-tree-id903 . 1) (undo-tree-id904 . -28) (undo-tree-id905 . -28) (undo-tree-id906 . -28) (undo-tree-id907 . -28) (undo-tree-id908 . -28) (undo-tree-id909 . -28) (undo-tree-id910 . -28) (undo-tree-id911 . -28) 1672 (t 23764 58398 209084 956000)) ((1644 . 1674)) (23764 58567 579860 675000) 0 nil]) ((1672 . 1673) (#("l" 0 1 (fontified t)) . 1672) (undo-tree-id898 . -1)) nil (23764 58567 585186 797000) 0 nil]) ((1672 . 1673) (#(")" 0 1 (fontified nil)) . 1672) (1671 . 1672) (#(" " 0 1 (fontified nil)) . -1671) (1671 . 1672) (#(")" 0 1 (fontified nil)) . -1671) (1671 . 1672) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1671) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) 1672 (1671 . 1673) (#("(" 0 1 (fontified nil)) . -1671) (1667 . 1672) (1665 . 1667) (1664 . 1666) (#("(" 0 1 (fontified nil)) . -1664) (1660 . 1665) (1644 . 1660) (1644 . 1645) 1671 (t 23764 55231 711755 773000)) nil (23764 58398 114599 334000) 0 nil]) ((#(" with a new unique id manage subscriptions" 0 42 (fontified t face font-lock-doc-face)) . 734)) nil (23764 55231 618726 111000) 0 nil]) ((710 . 716) (t 23764 55220 465168 341000)) nil (23764 55231 618742 903000) 0 nil]) ((1 . 2986) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::default(),
            current_user: None,
        }
    }

    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn blank_copy(&self) -> Self {
        StreamManager {
            ..self.clone()
        }
    }
    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn configure_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(id);
        receiver.maybe_subscribe(timeline);
        StreamManager {
            id,
            current_user: Some(user),
            ..self.clone()
        }
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.set_manager_id(self.id);
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    )))),
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 448 (fontified t face font-lock-variable-name-face) 448 450 (fontified t) 450 456 (fontified t face font-lock-type-face) 456 457 (fontified t) 457 461 (fontified t face font-lock-type-face) 461 466 (fontified t) 466 470 (fontified t face font-lock-keyword-face) 470 471 (fontified t) 471 484 (fontified t face font-lock-type-face) 484 491 (fontified t) 491 494 (fontified t face font-lock-keyword-face) 494 495 (fontified t) 495 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 500 (fontified t face font-lock-function-name-face) 500 501 (face font-lock-function-name-face fontified t) 501 502 (fontified t) 502 510 (face font-lock-variable-name-face fontified t) 510 512 (fontified t) 512 520 (face font-lock-type-face fontified t) 520 523 (fontified t) 523 524 (syntax-table #1# fontified t) 524 525 (fontified t) 525 529 (face font-lock-type-face fontified t) 529 532 (fontified t) 532 540 (fontified t) 540 553 (fontified t face font-lock-type-face) 553 568 (fontified t) 568 576 (fontified t face font-lock-variable-name-face) 576 578 (fontified t) 578 581 (fontified t face font-lock-type-face) 581 587 (fontified t) 587 592 (fontified t face font-lock-type-face) 592 622 (fontified t) 622 624 (fontified t face font-lock-variable-name-face) 624 626 (fontified t) 626 630 (fontified t face font-lock-type-face) 630 655 (fontified t) 655 667 (fontified t face font-lock-variable-name-face) 667 669 (fontified t) 669 673 (fontified t face font-lock-type-face) 673 692 (fontified t) 692 696 (fontified t) 696 770 (fontified t face font-lock-doc-face) 770 774 (fontified t) 774 777 (fontified t face font-lock-keyword-face) 777 778 (fontified t) 778 780 (fontified t face font-lock-keyword-face) 780 781 (fontified t) 781 786 (fontified t face font-lock-function-name-face) 786 791 (fontified t face font-lock-function-name-face) 791 793 (fontified t) 793 797 (fontified t face font-lock-keyword-face) 797 800 (fontified t) 800 801 (fontified t syntax-table #1#) 801 802 (fontified t) 802 806 (fontified t face font-lock-type-face) 806 809 (fontified t) 809 817 (fontified t) 817 830 (fontified t face font-lock-type-face) 830 833 (fontified t) 833 847 (fontified t) 847 851 (fontified t face font-lock-keyword-face) 851 860 (fontified t) 860 876 (fontified t) 876 880 (fontified t) 880 904 (fontified t face font-lock-doc-face) 904 954 (fontified t face font-lock-doc-face) 954 958 (fontified t) 958 961 (fontified t face font-lock-keyword-face) 961 962 (fontified t) 962 964 (fontified t face font-lock-keyword-face) 964 965 (fontified t) 965 979 (fontified t face font-lock-function-name-face) 979 981 (fontified t) 981 985 (fontified t face font-lock-keyword-face) 985 987 (fontified t) 987 995 (fontified t face font-lock-variable-name-face) 995 998 (fontified t) 998 1004 (fontified t face font-lock-type-face) 1004 1006 (fontified t) 1006 1010 (fontified t face font-lock-variable-name-face) 1010 1012 (fontified t) 1012 1016 (fontified t face font-lock-type-face) 1016 1019 (fontified t) 1019 1020 (syntax-table #1# fontified t) 1020 1021 (fontified t) 1021 1025 (fontified t face font-lock-type-face) 1025 1036 (fontified t) 1036 1039 (fontified t face font-lock-keyword-face) 1039 1040 (fontified t) 1040 1042 (fontified t face font-lock-variable-name-face) 1042 1045 (fontified t) 1045 1049 (fontified t face font-lock-type-face) 1049 1056 (fontified t) 1056 1061 (fontified t) 1061 1069 (fontified t) 1069 1072 (fontified t face font-lock-keyword-face) 1072 1073 (fontified t) 1073 1076 (fontified t face font-lock-keyword-face) 1076 1077 (fontified t) 1077 1085 (fontified t face font-lock-variable-name-face) 1085 1088 (fontified t) 1088 1092 (fontified t face font-lock-keyword-face) 1092 1116 (fontified t) 1116 1143 (fontified t face font-lock-string-face) 1143 1183 (fontified t) 1183 1214 (fontified t) 1214 1226 (fontified t) 1226 1227 (fontified t) 1227 1235 (fontified t) 1235 1248 (fontified t face font-lock-type-face) 1248 1279 (fontified t) 1279 1291 (fontified t face font-lock-variable-name-face) 1291 1293 (fontified t) 1293 1297 (fontified t face font-lock-type-face) 1297 1305 (fontified t) 1305 1319 (fontified t) 1319 1323 (fontified t face font-lock-keyword-face) 1323 1351 (fontified t) 1351 1355 (fontified t face font-lock-keyword-face) 1355 1356 (fontified t) 1356 1360 (fontified t face font-lock-type-face) 1360 1362 (face font-lock-type-face fontified t) 1362 1363 (fontified t) 1363 1366 (face font-lock-keyword-face fontified t) 1366 1367 (fontified t) 1367 1380 (face font-lock-type-face fontified t) 1380 1383 (fontified t) 1383 1387 (fontified t) 1387 1391 (fontified t face font-lock-keyword-face) 1391 1392 (fontified t) 1392 1396 (fontified t face font-lock-type-face) 1396 1399 (fontified t) 1399 1404 (fontified t face font-lock-type-face) 1404 1410 (fontified t) 1410 1414 (fontified t face font-lock-keyword-face) 1414 1415 (fontified t) 1415 1420 (fontified t face font-lock-type-face) 1420 1423 (fontified t) 1423 1428 (fontified t face font-lock-type-face) 1428 1435 (fontified t) 1435 1437 (fontified t face font-lock-keyword-face) 1437 1438 (fontified t) 1438 1442 (fontified t face font-lock-function-name-face) 1442 1444 (fontified t) 1444 1447 (fontified t face font-lock-keyword-face) 1447 1448 (fontified t) 1448 1452 (fontified t face font-lock-keyword-face) 1452 1454 (fontified t) 1454 1455 (fontified t) 1455 1456 (syntax-table #1# fontified t) 1456 1457 (fontified t) 1457 1461 (fontified t face font-lock-type-face) 1461 1462 (fontified t) 1462 1468 (fontified t face font-lock-type-face) 1468 1469 (fontified t) 1469 1473 (fontified t face font-lock-type-face) 1473 1475 (fontified t) 1475 1479 (fontified t face font-lock-type-face) 1479 1482 (fontified t) 1482 1486 (fontified t face font-lock-type-face) 1486 1488 (fontified t) 1488 1493 (fontified t face font-lock-type-face) 1493 1497 (fontified t) 1497 1505 (fontified t) 1505 1508 (fontified t face font-lock-keyword-face) 1508 1509 (fontified t) 1509 1512 (fontified t face font-lock-keyword-face) 1512 1513 (fontified t) 1513 1521 (fontified t face font-lock-variable-name-face) 1521 1524 (fontified t) 1524 1528 (fontified t face font-lock-keyword-face) 1528 1552 (fontified t) 1552 1561 (fontified t face font-lock-string-face) 1561 1575 (fontified t face font-lock-string-face) 1575 1578 (fontified t) 1578 1610 (fontified t) 1610 1614 (fontified t face font-lock-keyword-face) 1614 1628 (fontified t) 1628 1633 (fontified t face font-lock-keyword-face) 1633 1664 (fontified t) 1664 1666 (fontified t face font-lock-type-face) 1666 1667 (fontified t) 1667 1672 (fontified t face font-lock-type-face) 1672 1674 (fontified t) 1674 1679 (fontified t face font-lock-type-face) 1679 1680 (fontified t) 1680 1684 (fontified t face font-lock-type-face) 1684 1695 (fontified t) 1695 1696 (syntax-table #1# fontified t) 1696 1715 (fontified t) 1715 1718 (fontified t face font-lock-keyword-face) 1718 1719 (fontified t) 1719 1723 (fontified t face font-lock-variable-name-face) 1723 1726 (fontified t) 1726 1727 (fontified t face font-lock-keyword-face) 1727 1730 (fontified t face font-lock-keyword-face) 1730 1731 (fontified t) 1731 1805 (fontified t) 1805 1822 (fontified t) 1822 1849 (fontified t face font-lock-string-face) 1849 1850 (syntax-table #2# fontified t face font-lock-string-face) 1850 1851 (fontified t face font-lock-string-face) 1851 1854 (fontified t) 1854 1871 (fontified t) 1871 1874 (fontified t face font-lock-keyword-face) 1874 1875 (fontified t) 1875 1883 (fontified t face font-lock-variable-name-face) 1883 1885 (face font-lock-variable-name-face fontified t) 1885 1908 (fontified t) 1924 1927 (face font-lock-keyword-face) 1928 1932 (face font-lock-variable-name-face) 1966 1969 (face font-lock-keyword-face) 1970 1975 (face font-lock-variable-name-face) 1983 1990 (face font-lock-string-face) 2008 2022 (face font-lock-string-face) 2041 2044 (face font-lock-keyword-face) 2045 2049 (face font-lock-variable-name-face) 2083 2086 (face font-lock-keyword-face) 2087 2094 (face font-lock-variable-name-face) 2102 2111 (face font-lock-string-face) 2142 2145 (face font-lock-keyword-face) 2146 2150 (face font-lock-variable-name-face) 2184 2187 (face font-lock-keyword-face) 2188 2197 (face font-lock-variable-name-face) 2205 2214 (face font-lock-string-face) 2216 2226 (face font-lock-string-face) 2286 2295 (face font-lock-string-face) 2295 2296 (face font-lock-string-face syntax-table #2#) 2296 2297 (face font-lock-string-face) 2350 2355 (face font-lock-keyword-face) 2406 2412 (face font-lock-type-face) 2414 2426 (face font-lock-type-face) 2431 2433 (face font-lock-keyword-face) 2443 2457 (face font-lock-string-face) 2459 2460 (syntax-table #1#) 2461 2463 (face font-lock-type-face) 2464 2469 (face font-lock-type-face) 2471 2479 (face font-lock-type-face) 2503 2509 (face font-lock-type-face) 2511 2519 (face font-lock-type-face) 2521 2525 (face font-lock-type-face) 2526 2529 (face font-lock-keyword-face) 2530 2535 (face font-lock-variable-name-face) 2538 2540 (face font-lock-keyword-face) 2570 2571 (syntax-table #1#) 2598 2600 (face font-lock-type-face) 2601 2606 (face font-lock-type-face) 2608 2616 (face font-lock-type-face) 2664 2665 (syntax-table #1#) 2666 2668 (face font-lock-type-face) 2669 2674 (face font-lock-type-face) 2676 2681 (face font-lock-type-face) 2682 2686 (face font-lock-type-face) 2687 2692 (face font-lock-preprocessor-face) 2719 2726 (face font-lock-string-face) 2760 2769 (face font-lock-string-face) 2851 2853 (face font-lock-type-face) 2854 2859 (face font-lock-type-face) 2861 2866 (face font-lock-type-face) 2867 2871 (face font-lock-type-face) 2875 2876 (syntax-table #1#) 2877 2879 (face font-lock-type-face) 2880 2885 (face font-lock-type-face) 2887 2892 (face font-lock-type-face) 2893 2897 (face font-lock-type-face) 2913 2915 (face font-lock-type-face) 2916 2921 (face font-lock-type-face) 2923 2931 (face font-lock-type-face) 2934 2935 (syntax-table #1#) 2936 2938 (face font-lock-type-face) 2939 2944 (face font-lock-type-face) 2946 2954 (face font-lock-type-face) 2969 2972 (face font-lock-type-face) 2977 2978 (syntax-table #1#) 2979 2982 (face font-lock-type-face)) . 1) (undo-tree-id810 . -876) (undo-tree-id811 . -692) (undo-tree-id812 . -875) (undo-tree-id813 . 2219) (undo-tree-id814 . -643) (undo-tree-id815 . -692) (undo-tree-id816 . 1657) (undo-tree-id817 . -887) (undo-tree-id818 . -1347) (undo-tree-id819 . -3005) (undo-tree-id820 . -3005) (undo-tree-id821 . -643) (undo-tree-id822 . -643) (undo-tree-id823 . -3005) (undo-tree-id824 . -643) (undo-tree-id825 . -643) (undo-tree-id826 . -643) (undo-tree-id827 . -643) (undo-tree-id828 . -643) (undo-tree-id829 . -643) (undo-tree-id830 . -643) (undo-tree-id831 . -643) (undo-tree-id832 . -1347) (undo-tree-id833 . -887) (undo-tree-id834 . -809) (undo-tree-id835 . -809) (undo-tree-id836 . -169) (undo-tree-id837 . -809) (undo-tree-id838 . -809) (undo-tree-id839 . -169) (undo-tree-id840 . -809) (undo-tree-id841 . -833) (undo-tree-id842 . -833) (undo-tree-id843 . -169) (undo-tree-id844 . -833) (undo-tree-id845 . -833) (undo-tree-id846 . -169) (undo-tree-id847 . -833) (undo-tree-id848 . -833) (undo-tree-id849 . -833) (undo-tree-id850 . -833) (undo-tree-id851 . -169) (undo-tree-id852 . -958) (undo-tree-id853 . -961) (undo-tree-id854 . -958) (undo-tree-id855 . -1025) (undo-tree-id856 . -860) (undo-tree-id857 . -833) (undo-tree-id858 . -169) (undo-tree-id859 . -860) (undo-tree-id860 . -860) (undo-tree-id861 . -169) (undo-tree-id862 . -870) (undo-tree-id863 . -860) (undo-tree-id864 . -169) (undo-tree-id865 . -870) (undo-tree-id866 . -870) (undo-tree-id867 . -860) (undo-tree-id868 . -169) (undo-tree-id869 . -870) (undo-tree-id870 . -870) (undo-tree-id871 . -860) (undo-tree-id872 . -169) (undo-tree-id873 . -169) (undo-tree-id874 . -870) (undo-tree-id875 . -870) (undo-tree-id876 . -870) (undo-tree-id877 . -860) (undo-tree-id878 . -169) 871) nil (23764 55220 387757 367000) 0 nil]) ((#("            current_user: Some(user),
" 0 12 (fontified t) 12 24 (fontified t face font-lock-variable-name-face) 24 26 (fontified t) 26 30 (fontified t face font-lock-type-face) 30 38 (fontified t)) . 834) (undo-tree-id879 . -12) (undo-tree-id880 . -24) (undo-tree-id881 . -12) (undo-tree-id882 . -14) (undo-tree-id883 . -30) (undo-tree-id884 . -31)) nil (23764 55220 387777 550000) 0 nil]) ((#("            id,
" 0 16 (fontified t)) . 834) (undo-tree-id885 . -12) (undo-tree-id886 . -12) (undo-tree-id887 . -14) (undo-tree-id888 . -15) (undo-tree-id889 . -16) (undo-tree-id890 . -12) (undo-tree-id891 . -14) (undo-tree-id892 . -12) (undo-tree-id893 . -11) 846) nil (23764 55220 387805 508000) 0 nil]) ((#("        receiver.maybe_subscribe(timeline);
" 0 31 (fontified t) 31 43 (fontified t) 43 44 (fontified t)) . 810)) nil (23764 55220 387808 654000) 0 nil]) ((#("        receiver.set_manager_id(id);
" 0 37 (fontified t)) . 810)) nil (23764 55220 387810 537000) 0 nil]) ((#("        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 24 (fontified t face font-lock-variable-name-face) 24 27 (fontified t) 27 31 (fontified t face font-lock-keyword-face) 31 55 (fontified t) 55 82 (fontified t face font-lock-string-face) 82 85 (fontified t)) . 810)) nil (23764 55220 387812 456000) 0 nil]) ((#("        let id = Uuid::new_v4();
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 14 (fontified t face font-lock-variable-name-face) 14 17 (fontified t) 17 21 (fontified t face font-lock-type-face) 21 33 (fontified t)) . 810) (undo-tree-id894 . -27) (undo-tree-id895 . -27) (undo-tree-id896 . -27) (undo-tree-id897 . -27) 837) nil (23764 55220 387819 393000) 0 nil]) ((#(", timeline: &String, user: User" 0 2 (fontified t) 2 10 (fontified t face font-lock-variable-name-face) 10 13 (fontified t) 13 19 (fontified t face font-lock-type-face) 19 21 (fontified t) 21 25 (fontified t face font-lock-variable-name-face) 25 27 (fontified t) 27 31 (fontified t face font-lock-type-face)) . 798)) nil (23764 55220 387822 111000) 0 nil]) ((782 . 787) (#("configure" 0 9 (fontified t face font-lock-function-name-face)) . 782)) nil (23764 55220 387824 357000) 0 nil]) ((693 . 1165) 704 (t 23764 54756 121830 371000)) nil (23764 55220 387827 78000) 0 nil]) ((1022 . 1023) (#(" - " 0 3 (fontified t)) . 1022) (t 23764 54719 118769 31000)) nil (23764 54756 97428 365000) 0 nil]) ((1 . 2824) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::default(),
            current_user: None,
        }
    }

    /// Create a StreamManager copy with a new unique id manage subscriptions
    pub fn configure_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(id);
        receiver.maybe-subscribe(timeline);
        StreamManager {
            id,
            current_user: Some(user),
            ..self.clone()
        }
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.set_manager_id(self.id);
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    )))),
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 47 (fontified t face font-lock-doc-face) 47 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 448 (fontified t face font-lock-variable-name-face) 448 450 (fontified t) 450 456 (fontified t face font-lock-type-face) 456 457 (fontified t) 457 461 (fontified t face font-lock-type-face) 461 466 (fontified t) 466 470 (fontified t face font-lock-keyword-face) 470 471 (fontified t) 471 484 (fontified t face font-lock-type-face) 484 491 (fontified t) 491 494 (fontified t face font-lock-keyword-face) 494 495 (fontified t) 495 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 501 (fontified t face font-lock-function-name-face) 501 502 (fontified t) 502 510 (fontified t face font-lock-variable-name-face) 510 512 (fontified t) 512 520 (fontified t face font-lock-type-face) 520 523 (fontified t) 523 524 (fontified t syntax-table #1#) 524 525 (fontified t) 525 529 (fontified t face font-lock-type-face) 529 540 (fontified t) 540 547 (fontified t face font-lock-type-face) 547 553 (fontified t face font-lock-type-face) 553 556 (fontified t) 556 568 (fontified t) 568 576 (fontified t face font-lock-variable-name-face) 576 578 (fontified t) 578 581 (fontified t face font-lock-type-face) 581 587 (fontified t) 587 592 (fontified t face font-lock-type-face) 592 610 (fontified t) 610 622 (fontified t) 622 624 (fontified t face font-lock-variable-name-face) 624 626 (fontified t) 626 630 (fontified t face font-lock-type-face) 630 639 (fontified t) 639 640 (fontified t) 640 642 (fontified t) 642 643 (fontified t) 643 655 (fontified t) 655 667 (fontified t face font-lock-variable-name-face) 667 669 (fontified t) 669 673 (fontified t face font-lock-type-face) 673 692 (fontified t) 692 696 (fontified t) 696 769 (fontified t face font-lock-doc-face) 769 770 (fontified t face font-lock-doc-face) 770 774 (fontified t) 774 777 (fontified t face font-lock-keyword-face) 777 778 (fontified t) 778 780 (fontified t face font-lock-keyword-face) 780 781 (fontified t) 781 795 (fontified t face font-lock-function-name-face) 795 797 (fontified t) 797 801 (fontified t face font-lock-keyword-face) 801 803 (fontified t) 803 811 (fontified t face font-lock-variable-name-face) 811 814 (fontified t) 814 820 (fontified t face font-lock-type-face) 820 822 (fontified t) 822 826 (fontified t face font-lock-variable-name-face) 826 828 (fontified t) 828 832 (fontified t face font-lock-type-face) 832 835 (fontified t) 835 836 (syntax-table #1# fontified t) 836 837 (fontified t) 837 841 (fontified t face font-lock-type-face) 841 844 (fontified t) 844 852 (fontified t) 852 855 (fontified t face font-lock-keyword-face) 855 856 (fontified t) 856 858 (fontified t face font-lock-variable-name-face) 858 861 (fontified t) 861 865 (fontified t face font-lock-type-face) 865 885 (fontified t) 885 888 (fontified t face font-lock-keyword-face) 888 889 (fontified t) 889 892 (fontified t face font-lock-keyword-face) 892 893 (fontified t) 893 901 (fontified t face font-lock-variable-name-face) 901 904 (fontified t) 904 908 (fontified t face font-lock-keyword-face) 908 932 (fontified t) 932 959 (fontified t face font-lock-string-face) 959 962 (fontified t) 962 998 (fontified t) 998 999 (fontified t) 1051 1064 (face font-lock-type-face) 1095 1107 (face font-lock-variable-name-face) 1109 1113 (face font-lock-type-face) 1135 1139 (face font-lock-keyword-face) 1167 1171 (face font-lock-keyword-face) 1172 1174 (face font-lock-type-face) 1174 1178 (face font-lock-type-face) 1179 1182 (face font-lock-keyword-face) 1183 1196 (face font-lock-type-face) 1203 1207 (face font-lock-keyword-face) 1208 1212 (face font-lock-type-face) 1215 1220 (face font-lock-type-face) 1226 1230 (face font-lock-keyword-face) 1231 1236 (face font-lock-type-face) 1239 1243 (face font-lock-type-face) 1243 1244 (face font-lock-type-face) 1251 1253 (face font-lock-keyword-face) 1254 1258 (face font-lock-function-name-face) 1260 1263 (face font-lock-keyword-face) 1264 1268 (face font-lock-keyword-face) 1271 1272 (syntax-table #1#) 1273 1276 (face font-lock-type-face) 1276 1277 (face font-lock-type-face) 1278 1284 (face font-lock-type-face) 1285 1289 (face font-lock-type-face) 1291 1295 (face font-lock-type-face) 1298 1302 (face font-lock-type-face) 1304 1309 (face font-lock-type-face) 1321 1324 (face font-lock-keyword-face) 1325 1328 (face font-lock-keyword-face) 1329 1337 (face font-lock-variable-name-face) 1340 1344 (face font-lock-keyword-face) 1368 1391 (face font-lock-string-face) 1426 1430 (face font-lock-keyword-face) 1444 1449 (face font-lock-keyword-face) 1480 1482 (face font-lock-type-face) 1483 1488 (face font-lock-type-face) 1490 1495 (face font-lock-type-face) 1496 1500 (face font-lock-type-face) 1511 1512 (syntax-table #1#) 1531 1534 (face font-lock-keyword-face) 1535 1539 (face font-lock-variable-name-face) 1542 1546 (face font-lock-keyword-face) 1638 1665 (face font-lock-string-face) 1665 1666 (face font-lock-string-face syntax-table #2#) 1666 1667 (face font-lock-string-face) 1687 1690 (face font-lock-keyword-face) 1691 1699 (face font-lock-variable-name-face) 1699 1701 (face font-lock-variable-name-face) 1740 1743 (face font-lock-keyword-face) 1744 1748 (face font-lock-variable-name-face) 1782 1785 (face font-lock-keyword-face) 1786 1791 (face font-lock-variable-name-face) 1799 1806 (face font-lock-string-face) 1824 1838 (face font-lock-string-face) 1857 1860 (face font-lock-keyword-face) 1861 1865 (face font-lock-variable-name-face) 1899 1902 (face font-lock-keyword-face) 1903 1910 (face font-lock-variable-name-face) 1918 1927 (face font-lock-string-face) 1958 1961 (face font-lock-keyword-face) 1962 1966 (face font-lock-variable-name-face) 2000 2003 (face font-lock-keyword-face) 2004 2013 (face font-lock-variable-name-face) 2021 2030 (face font-lock-string-face) 2032 2042 (face font-lock-string-face) 2102 2111 (face font-lock-string-face) 2111 2112 (face font-lock-string-face syntax-table #2#) 2112 2113 (face font-lock-string-face) 2166 2170 (face font-lock-keyword-face) 2170 2171 (face font-lock-keyword-face) 2222 2224 (face font-lock-type-face) 2224 2228 (face font-lock-type-face) 2230 2242 (face font-lock-type-face) 2247 2249 (face font-lock-keyword-face) 2259 2273 (face font-lock-string-face) 2275 2276 (syntax-table #1#) 2277 2279 (face font-lock-type-face) 2280 2285 (face font-lock-type-face) 2287 2295 (face font-lock-type-face) 2319 2325 (face font-lock-type-face) 2327 2335 (face font-lock-type-face) 2337 2341 (face font-lock-type-face) 2342 2345 (face font-lock-keyword-face) 2346 2351 (face font-lock-variable-name-face) 2354 2356 (face font-lock-keyword-face) 2386 2387 (syntax-table #1#) 2414 2416 (face font-lock-type-face) 2417 2422 (face font-lock-type-face) 2424 2432 (face font-lock-type-face) 2480 2481 (syntax-table #1#) 2482 2484 (face font-lock-type-face) 2485 2490 (face font-lock-type-face) 2492 2497 (face font-lock-type-face) 2498 2502 (face font-lock-type-face) 2503 2508 (face font-lock-preprocessor-face) 2535 2542 (face font-lock-string-face) 2576 2585 (face font-lock-string-face) 2667 2669 (face font-lock-type-face) 2670 2675 (face font-lock-type-face) 2677 2682 (face font-lock-type-face) 2683 2687 (face font-lock-type-face) 2691 2692 (syntax-table #1#) 2693 2695 (face font-lock-type-face) 2696 2701 (face font-lock-type-face) 2703 2708 (face font-lock-type-face) 2709 2713 (face font-lock-type-face) 2729 2731 (face font-lock-type-face) 2732 2737 (face font-lock-type-face) 2739 2747 (face font-lock-type-face) 2750 2751 (syntax-table #1#) 2752 2754 (face font-lock-type-face) 2755 2760 (face font-lock-type-face) 2762 2770 (face font-lock-type-face) 2785 2788 (face font-lock-type-face) 2793 2794 (syntax-table #1#) 2795 2798 (face font-lock-type-face)) . 1) (undo-tree-id729 . -1016) (undo-tree-id730 . 2052) (undo-tree-id731 . -1016) (undo-tree-id732 . -1164) (undo-tree-id733 . 1657) (undo-tree-id734 . -1164) (undo-tree-id735 . -1164) (undo-tree-id736 . -997) (undo-tree-id737 . -997) (undo-tree-id738 . -997) (undo-tree-id739 . -781) (undo-tree-id740 . -781) (undo-tree-id741 . -675) (undo-tree-id742 . -781) (undo-tree-id743 . -781) (undo-tree-id744 . -675) (undo-tree-id745 . -689) (undo-tree-id746 . -683) (undo-tree-id747 . -1164) (undo-tree-id748 . -689) (undo-tree-id749 . -689) (undo-tree-id750 . -689) (undo-tree-id751 . -1016) (undo-tree-id752 . -1016) (undo-tree-id753 . -1016) (undo-tree-id754 . -1016) (undo-tree-id755 . -1012) (undo-tree-id756 . -1012) (undo-tree-id757 . -913) (undo-tree-id758 . -400) (undo-tree-id759 . -373) (undo-tree-id760 . -913) (undo-tree-id761 . -400) (undo-tree-id762 . -400) (undo-tree-id763 . -400) (undo-tree-id764 . -856) (undo-tree-id765 . -858) (undo-tree-id766 . -994) (undo-tree-id767 . -996) (undo-tree-id768 . -1079) (undo-tree-id769 . -1081) (undo-tree-id770 . -1016) (undo-tree-id771 . -1016) (undo-tree-id772 . -400) (undo-tree-id773 . -1016) (undo-tree-id774 . -1016) (undo-tree-id775 . -1016) (undo-tree-id776 . -1016) (undo-tree-id777 . -1022) (undo-tree-id778 . -1031) (undo-tree-id779 . -1016) (undo-tree-id780 . -1021) (undo-tree-id781 . -1022) (undo-tree-id782 . -1031) (undo-tree-id783 . -1016) (undo-tree-id784 . -1021) (undo-tree-id785 . -1022) (undo-tree-id786 . -1031) (undo-tree-id787 . -1016) (undo-tree-id788 . -1021) (undo-tree-id789 . -1016) (undo-tree-id790 . -1021) (undo-tree-id791 . -1022) (undo-tree-id792 . -1031) (undo-tree-id793 . -1022) (undo-tree-id794 . -1031) (undo-tree-id795 . -1016) (undo-tree-id796 . -1021)) nil (23764 54719 104097 861000) 0 nil]) ((1017 . 1032) (#("subscribe" 0 9 (fontified t)) . 1017) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1)) nil (23764 54719 104118 950000) 0 nil]) ((763 . 770) (761 . 763) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -761) (undo-tree-id808 . -1) (undo-tree-id809 . -1) 762 (749 . 762)) nil (23764 54719 104125 138000) 0 nil] [nil nil ((753 . 761) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -753) (undo-tree-id576 . -1) (undo-tree-id577 . -1) 754 (#("c" 0 1 (fontified t face font-lock-doc-face)) . -754) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (#("o" 0 1 (fontified t face font-lock-doc-face)) . -755) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (#("n" 0 1 (fontified t face font-lock-doc-face)) . -756) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (#("f" 0 1 (fontified t face font-lock-doc-face)) . -757) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -758) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (#("g" 0 1 (fontified t face font-lock-doc-face)) . -759) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (#("u" 0 1 (fontified t face font-lock-doc-face)) . -760) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (#("r" 0 1 (fontified t face font-lock-doc-face)) . -761) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (#("e" 0 1 (fontified t face font-lock-doc-face)) . -762) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -763) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (#("i" 0 1 (fontified t face font-lock-doc-face)) . -764) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (#("t" 0 1 (fontified t face font-lock-doc-face)) . -765) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (#(" " 0 1 (fontified t face font-lock-doc-face)) . -766) (undo-tree-id602 . -1) (undo-tree-id603 . -1) 767 (758 . 767) (#("i" 0 1 (fontified nil face font-lock-doc-face)) . -758) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (#("g" 0 1 (fontified t face font-lock-doc-face)) . -759) (undo-tree-id606 . -1) (undo-tree-id607 . -1) 760 (757 . 760) (749 . 757)) ((#(" and con" 0 4 (fontified nil face font-lock-doc-face) 4 5 (fontified nil face font-lock-doc-face) 5 6 (fontified nil face font-lock-doc-face) 6 7 (fontified nil face font-lock-doc-face) 7 8 (fontified nil face font-lock-doc-face)) . 749) (undo-tree-id611 . -4) (undo-tree-id612 . -4) (undo-tree-id613 . -4) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -4) (undo-tree-id620 . -4) (undo-tree-id621 . -4) (undo-tree-id622 . -4) (undo-tree-id623 . -4) (undo-tree-id624 . -4) (undo-tree-id625 . -4) (undo-tree-id626 . -4) (undo-tree-id627 . -4) (undo-tree-id628 . -4) (undo-tree-id629 . -4) (undo-tree-id630 . -4) (undo-tree-id631 . -4) (undo-tree-id632 . -4) (undo-tree-id633 . -4) (undo-tree-id634 . -4) (undo-tree-id635 . -4) (undo-tree-id636 . -4) (undo-tree-id637 . -4) (undo-tree-id638 . -4) (undo-tree-id639 . -4) (undo-tree-id640 . -4) (undo-tree-id641 . -4) (undo-tree-id642 . -4) (undo-tree-id643 . -4) (undo-tree-id644 . -4) (undo-tree-id645 . -4) (undo-tree-id646 . -4) (undo-tree-id647 . -4) (undo-tree-id648 . -4) (undo-tree-id649 . -4) (undo-tree-id650 . -4) (undo-tree-id651 . -4) (undo-tree-id652 . -4) (undo-tree-id653 . -4) (undo-tree-id654 . -4) (undo-tree-id655 . -4) (undo-tree-id656 . -4) (undo-tree-id657 . -4) (undo-tree-id658 . -4) (undo-tree-id659 . -4) (undo-tree-id660 . -4) (undo-tree-id661 . -4) (undo-tree-id662 . -8) (undo-tree-id663 . -8) (undo-tree-id664 . -4) (undo-tree-id665 . -4) (undo-tree-id666 . -4) (undo-tree-id667 . -4) (#("fig" 0 1 (fontified nil face font-lock-doc-face) 1 2 (fontified nil face font-lock-doc-face) 2 3 (fontified nil face font-lock-doc-face)) . 757) (undo-tree-id668 . -3) (undo-tree-id669 . -3) (758 . 760) (#("igure it " 0 1 (fontified nil face font-lock-doc-face) 1 2 (fontified nil face font-lock-doc-face) 2 3 (fontified nil face font-lock-doc-face) 3 4 (fontified nil face font-lock-doc-face) 4 5 (fontified nil face font-lock-doc-face) 5 6 (fontified nil face font-lock-doc-face) 6 7 (fontified nil face font-lock-doc-face) 7 8 (fontified nil face font-lock-doc-face) 8 9 (fontified nil face font-lock-doc-face)) . 758) (undo-tree-id670 . -9) (undo-tree-id671 . -9) (753 . 767) (#(" use it " 0 8 (fontified t face font-lock-doc-face)) . 753) (undo-tree-id672 . -5) (undo-tree-id673 . -4) (undo-tree-id674 . -5) (undo-tree-id675 . -5) (undo-tree-id676 . -4) (undo-tree-id677 . -5) (undo-tree-id678 . -4) (undo-tree-id679 . -6) (undo-tree-id680 . -5) (undo-tree-id681 . -6) (undo-tree-id682 . -6) (undo-tree-id683 . -5) (undo-tree-id684 . -6) (undo-tree-id685 . -6) (undo-tree-id686 . -5) (undo-tree-id687 . -6) (undo-tree-id688 . -5) (undo-tree-id689 . -6) (undo-tree-id690 . -5) (undo-tree-id691 . -7) (undo-tree-id692 . -6) (undo-tree-id693 . -7) (undo-tree-id694 . -7) (undo-tree-id695 . -6) (undo-tree-id696 . -7) (undo-tree-id697 . -7) (undo-tree-id698 . -6) (undo-tree-id699 . -7) (undo-tree-id700 . -6) (undo-tree-id701 . -7) (undo-tree-id702 . -6) (undo-tree-id703 . -8) (undo-tree-id704 . -7) (undo-tree-id705 . -8) (undo-tree-id706 . -8) (undo-tree-id707 . -7) (undo-tree-id708 . -8) (undo-tree-id709 . -8) (undo-tree-id710 . -7) (undo-tree-id711 . -8) (undo-tree-id712 . -7) (undo-tree-id713 . -8) (undo-tree-id714 . -7) (undo-tree-id715 . -7) (undo-tree-id716 . -7) (undo-tree-id717 . -7) (undo-tree-id718 . -7) (undo-tree-id719 . -7) (undo-tree-id720 . -7) (undo-tree-id721 . -7) (undo-tree-id722 . -7) (undo-tree-id723 . -7) (undo-tree-id724 . -7) (undo-tree-id725 . -7) (undo-tree-id726 . -7) (undo-tree-id727 . -7) (undo-tree-id728 . -7)) (23764 54578 514289 389000) 0 nil]) ((724 . 729)) nil (23764 54578 553945 130000) 0 nil]) ((704 . 710) (701 . 704) (#("Clone the " 0 10 (fontified t face font-lock-doc-face)) . 701) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (t 23764 54517 580277 836000)) nil (23764 54578 514341 796000) 0 nil]) ((642 . 643)) nil (23764 54517 562144 351000) 0 nil]) ((640 . 642) (#("(" 0 1 (fontified nil)) . -640) (633 . 641) (#("new_v4()," 0 9 (fontified t)) . 633) (t 23764 54236 752489 208000)) nil (23764 54517 562151 234000) 0 nil]) ((756 . 770) (#("new_copy" 0 3 (fontified t face font-lock-function-name-face) 3 8 (fontified t face font-lock-function-name-face)) . 756) (undo-tree-id574 . 5) (undo-tree-id575 . -8)) nil (23764 54236 681520 340000) 0 nil] [nil nil ((#("o" 0 1 (fontified t face font-lock-function-name-face)) . -757) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) 758 (756 . 758) (#("new" 0 3 (fontified t face font-lock-function-name-face)) . 756)) ((756 . 759) (#("co" 0 1 (fontified nil face font-lock-function-name-face) 1 2 (fontified nil face font-lock-function-name-face)) . 756) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -2) (undo-tree-id551 . -1) (undo-tree-id552 . -2) (undo-tree-id553 . -2) (undo-tree-id554 . -1) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -1) (undo-tree-id558 . -2) (undo-tree-id559 . -1) (undo-tree-id560 . -2) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (757 . 758)) (23764 54220 5104 915000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1127) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1)) nil (23764 54220 22473 71000) 0 nil]) ((#("    /// Subscribe to a channel if not already subscribed
    ///
    ///
    /// `.add()` also unsubscribes from any channels that no longer have clients
    pub fn add(&mut self, timeline: &str, _user: &User) {}

    pub fn set_user(&mut self, user: User) {}
" 0 4 (fontified t) 4 57 (fontified t face font-lock-doc-face) 57 61 (fontified t) 61 65 (fontified t face font-lock-doc-face) 65 69 (fontified t) 69 73 (fontified t face font-lock-doc-face) 73 77 (fontified t) 77 154 (fontified t face font-lock-doc-face) 154 158 (fontified t) 158 161 (fontified t face font-lock-keyword-face) 161 162 (fontified t) 162 164 (fontified t face font-lock-keyword-face) 164 165 (fontified t) 165 168 (fontified t face font-lock-function-name-face) 168 170 (fontified t) 170 173 (fontified t face font-lock-keyword-face) 173 174 (fontified t) 174 178 (fontified t face font-lock-keyword-face) 178 180 (fontified t) 180 188 (fontified t face font-lock-variable-name-face) 188 191 (fontified t) 191 194 (fontified t face font-lock-type-face) 194 196 (fontified t) 196 201 (fontified t face font-lock-variable-name-face) 201 204 (fontified t) 204 208 (fontified t face font-lock-type-face) 208 218 (fontified t) 218 221 (fontified t face font-lock-keyword-face) 221 222 (fontified t) 222 224 (fontified t face font-lock-keyword-face) 224 225 (fontified t) 225 233 (fontified t face font-lock-function-name-face) 233 235 (fontified t) 235 238 (fontified t face font-lock-keyword-face) 238 239 (fontified t) 239 243 (fontified t face font-lock-keyword-face) 243 245 (fontified t) 245 249 (fontified t face font-lock-variable-name-face) 249 251 (fontified t) 251 255 (fontified t face font-lock-type-face) 255 260 (fontified t)) . 1128) (undo-tree-id536 . -249) (undo-tree-id537 . -249) (undo-tree-id538 . -35) (undo-tree-id539 . -35) (undo-tree-id540 . -249) (undo-tree-id541 . -35) (undo-tree-id542 . -35) 1163 (t 23764 53876 295654 399000)) nil (23764 54220 5165 788000) 0 nil]) ((1 . 3045) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{Filter, User};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::new_v4(),
            current_user: None,
        }
    }

    /// Clone the StreamManager with a new unique id
    pub fn new_copy(&self, timeline: &String, user: User) -> Self {
        let id = Uuid::new_v4();
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(id);
        receiver.subscribe(timeline);
        StreamManager { id, current_user: Some(user), ..self.clone() }
    }

    /// Subscribe to a channel if not already subscribed
    ///
    ///
    /// `.add()` also unsubscribes from any channels that no longer have clients
    pub fn add(&mut self, timeline: &str, _user: &User) {
    }

    pub fn set_user(&mut self, user: User) {
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.set_manager_id(self.id);
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    )))),
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 97 (fontified t) 97 103 (fontified t face font-lock-type-face) 103 105 (fontified t) 105 109 (fontified t face font-lock-type-face) 109 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 376 (fontified t) 376 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 411 (fontified t) 411 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 448 (fontified t face font-lock-variable-name-face) 448 450 (fontified t) 450 456 (fontified t face font-lock-type-face) 456 457 (fontified t) 457 461 (fontified t face font-lock-type-face) 461 466 (fontified t) 466 470 (fontified t face font-lock-keyword-face) 470 471 (fontified t) 471 484 (fontified t face font-lock-type-face) 484 491 (fontified t) 491 494 (fontified t face font-lock-keyword-face) 494 495 (fontified t) 495 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 500 (fontified t face font-lock-function-name-face) 500 501 (face font-lock-function-name-face fontified t) 501 502 (fontified t) 502 510 (face font-lock-variable-name-face fontified t) 510 512 (fontified t) 512 520 (face font-lock-type-face fontified t) 520 523 (fontified t) 523 524 (syntax-table #1# fontified t) 524 525 (fontified t) 525 529 (face font-lock-type-face fontified t) 529 532 (fontified t) 532 540 (fontified t) 540 553 (fontified t face font-lock-type-face) 553 568 (fontified t) 568 576 (fontified t face font-lock-variable-name-face) 576 578 (fontified t) 578 581 (fontified t face font-lock-type-face) 581 587 (fontified t) 587 592 (fontified t face font-lock-type-face) 592 622 (fontified t) 622 624 (fontified t face font-lock-variable-name-face) 624 626 (fontified t) 626 630 (fontified t face font-lock-type-face) 630 654 (fontified t) 654 666 (fontified t face font-lock-variable-name-face) 666 668 (fontified t) 668 672 (fontified t face font-lock-type-face) 672 695 (fontified t) 695 744 (fontified t face font-lock-doc-face) 744 748 (fontified t) 748 751 (fontified t face font-lock-keyword-face) 751 752 (fontified t) 752 754 (fontified t face font-lock-keyword-face) 754 755 (fontified t) 755 763 (fontified t face font-lock-function-name-face) 763 765 (fontified t) 765 769 (fontified t face font-lock-keyword-face) 769 771 (fontified t) 771 779 (fontified t face font-lock-variable-name-face) 779 782 (fontified t) 782 788 (fontified t face font-lock-type-face) 788 790 (fontified t) 790 794 (fontified t face font-lock-variable-name-face) 794 796 (fontified t) 796 800 (fontified t face font-lock-type-face) 800 803 (fontified t) 803 804 (fontified t syntax-table #1#) 804 805 (fontified t) 805 809 (fontified t face font-lock-type-face) 809 812 (fontified t) 812 820 (fontified t) 820 823 (fontified t face font-lock-keyword-face) 823 824 (fontified t) 824 826 (fontified t face font-lock-variable-name-face) 826 829 (fontified t) 829 833 (fontified t face font-lock-type-face) 833 844 (fontified t) 844 845 (fontified t) 845 852 (fontified t) 852 853 (rear-nonsticky t fontified t) 853 856 (fontified t face font-lock-keyword-face) 856 857 (fontified t) 857 860 (fontified t face font-lock-keyword-face) 860 861 (fontified t) 861 869 (fontified t face font-lock-variable-name-face) 869 872 (fontified t) 872 876 (fontified t face font-lock-keyword-face) 876 900 (fontified t) 900 927 (fontified t face font-lock-string-face) 927 930 (fontified t) 930 962 (fontified t) 962 967 (fontified t) 967 1002 (fontified t) 1002 1004 (fontified t) 1004 1005 (fontified t) 1005 1013 (fontified t) 1013 1026 (fontified t face font-lock-type-face) 1026 1033 (fontified t) 1033 1045 (fontified t face font-lock-variable-name-face) 1045 1047 (fontified t) 1047 1051 (fontified t face font-lock-type-face) 1051 1052 (fontified t) 1052 1056 (fontified t) 1056 1058 (fontified t) 1058 1061 (fontified t) 1061 1065 (fontified t face font-lock-keyword-face) 1065 1076 (fontified t) 1076 1087 (fontified t) 1087 1128 (fontified t face font-lock-doc-face) 1128 1140 (fontified t face font-lock-doc-face) 1140 1144 (fontified t) 1144 1148 (fontified t face font-lock-doc-face) 1148 1152 (fontified t) 1152 1156 (fontified t face font-lock-doc-face) 1156 1160 (fontified t) 1160 1237 (fontified t face font-lock-doc-face) 1237 1241 (fontified t) 1241 1244 (fontified t face font-lock-keyword-face) 1244 1245 (fontified t) 1245 1247 (fontified t face font-lock-keyword-face) 1247 1248 (fontified t) 1248 1249 (fontified t face font-lock-function-name-face) 1249 1251 (fontified t face font-lock-function-name-face) 1251 1253 (fontified t) 1253 1256 (fontified t face font-lock-keyword-face) 1256 1257 (fontified t) 1257 1261 (fontified t face font-lock-keyword-face) 1261 1263 (fontified t) 1263 1271 (fontified t face font-lock-variable-name-face) 1271 1274 (fontified t) 1274 1277 (fontified t face font-lock-type-face) 1277 1279 (fontified t) 1279 1284 (fontified t face font-lock-variable-name-face) 1284 1287 (fontified t) 1287 1291 (fontified t face font-lock-type-face) 1291 1295 (fontified t) 1295 1301 (fontified t) 1301 1306 (fontified t) 1306 1309 (fontified t face font-lock-keyword-face) 1309 1310 (fontified t) 1310 1312 (fontified t face font-lock-keyword-face) 1312 1313 (fontified t) 1313 1321 (face font-lock-function-name-face fontified t) 1321 1323 (fontified t) 1323 1326 (face font-lock-keyword-face fontified t) 1326 1327 (fontified t) 1327 1331 (face font-lock-keyword-face fontified t) 1331 1333 (fontified t) 1333 1337 (face font-lock-variable-name-face fontified t) 1337 1339 (fontified t) 1339 1343 (face font-lock-type-face fontified t) 1343 1347 (fontified t) 1347 1353 (fontified t) 1353 1356 (fontified t) 1356 1360 (fontified t face font-lock-keyword-face) 1360 1361 (fontified t) 1361 1367 (fontified t face font-lock-type-face) 1367 1368 (fontified t) 1368 1371 (fontified t face font-lock-keyword-face) 1371 1372 (fontified t) 1372 1385 (fontified t face font-lock-type-face) 1385 1392 (fontified t) 1392 1396 (fontified t face font-lock-keyword-face) 1396 1397 (fontified t) 1397 1401 (fontified t face font-lock-type-face) 1401 1404 (fontified t) 1404 1409 (fontified t face font-lock-type-face) 1409 1415 (fontified t) 1415 1419 (fontified t face font-lock-keyword-face) 1419 1420 (fontified t) 1420 1425 (fontified t face font-lock-type-face) 1425 1428 (fontified t) 1428 1433 (fontified t face font-lock-type-face) 1433 1440 (fontified t) 1440 1442 (fontified t face font-lock-keyword-face) 1442 1443 (fontified t) 1443 1447 (fontified t face font-lock-function-name-face) 1447 1449 (fontified t) 1449 1452 (fontified t face font-lock-keyword-face) 1452 1453 (fontified t) 1453 1457 (fontified t face font-lock-keyword-face) 1457 1460 (fontified t) 1460 1461 (syntax-table #1# fontified t) 1461 1462 (fontified t) 1462 1466 (fontified t face font-lock-type-face) 1466 1467 (fontified t) 1467 1473 (fontified t face font-lock-type-face) 1473 1474 (fontified t) 1474 1478 (fontified t face font-lock-type-face) 1478 1480 (fontified t) 1480 1484 (fontified t face font-lock-type-face) 1484 1487 (fontified t) 1487 1491 (fontified t face font-lock-type-face) 1491 1493 (fontified t) 1493 1498 (fontified t face font-lock-type-face) 1498 1502 (fontified t) 1502 1505 (fontified t) 1505 1510 (fontified t) 1510 1513 (fontified t face font-lock-keyword-face) 1513 1514 (fontified t) 1514 1517 (fontified t face font-lock-keyword-face) 1517 1518 (fontified t) 1518 1526 (fontified t face font-lock-variable-name-face) 1526 1529 (fontified t) 1529 1531 (fontified t face font-lock-keyword-face) 1531 1533 (fontified t face font-lock-keyword-face) 1533 1557 (fontified t) 1557 1576 (fontified t face font-lock-string-face) 1576 1580 (fontified t face font-lock-string-face) 1580 1583 (fontified t) 1583 1590 (fontified t) 1590 1615 (fontified t) 1615 1619 (fontified t face font-lock-keyword-face) 1619 1625 (fontified t) 1625 1633 (fontified t) 1633 1638 (fontified t face font-lock-keyword-face) 1638 1669 (fontified t) 1669 1671 (fontified t face font-lock-type-face) 1671 1672 (fontified t) 1672 1677 (fontified t face font-lock-type-face) 1677 1679 (fontified t) 1679 1684 (fontified t face font-lock-type-face) 1684 1685 (fontified t) 1685 1689 (fontified t face font-lock-type-face) 1689 1700 (fontified t) 1700 1701 (syntax-table #1# fontified t) 1701 1720 (fontified t) 1720 1723 (fontified t face font-lock-keyword-face) 1723 1724 (fontified t) 1724 1728 (fontified t face font-lock-variable-name-face) 1728 1731 (fontified t) 1731 1735 (fontified t face font-lock-keyword-face) 1735 1755 (fontified t) 1755 1761 (fontified t) 1761 1765 (fontified t) 1765 1807 (fontified t) 1807 1827 (fontified t) 1827 1847 (fontified t face font-lock-string-face) 1847 1853 (face font-lock-string-face fontified t) 1853 1854 (face font-lock-string-face fontified t) 1854 1855 (syntax-table #2# face font-lock-string-face fontified t) 1855 1856 (face font-lock-string-face fontified t) 1856 1859 (fontified t) 2300 2301 (syntax-table #2#) 2464 2465 (syntax-table #1#) 2575 2576 (syntax-table #1#) 2669 2670 (syntax-table #1#) 2880 2881 (syntax-table #1#) 2939 2940 (syntax-table #1#) 2982 2983 (syntax-table #1#)) . 1) (undo-tree-id380 . -1005) (undo-tree-id381 . -1005) (undo-tree-id382 . -1005) (undo-tree-id383 . 2228) (undo-tree-id384 . -1148) (undo-tree-id385 . -1295) (undo-tree-id386 . 1715) (undo-tree-id387 . -1295) (undo-tree-id388 . -1295) (undo-tree-id389 . -1148) (undo-tree-id390 . -1156) (undo-tree-id391 . -1148) (undo-tree-id392 . -1148) (undo-tree-id393 . -1148) (undo-tree-id394 . -1148) (undo-tree-id395 . -994) (undo-tree-id396 . -994) (undo-tree-id397 . -993) (undo-tree-id398 . -993) (undo-tree-id399 . -993) (undo-tree-id400 . -993) (undo-tree-id401 . -993) (undo-tree-id402 . -956) (undo-tree-id403 . -993) (undo-tree-id404 . -871) (undo-tree-id405 . -956) (undo-tree-id406 . -838) (undo-tree-id407 . -871) (undo-tree-id408 . -770) (undo-tree-id409 . -838) (undo-tree-id410 . -771) (undo-tree-id411 . -770) (undo-tree-id412 . -771) (undo-tree-id413 . -771) (undo-tree-id414 . -772) (undo-tree-id415 . -771) (undo-tree-id416 . -772) (undo-tree-id417 . -772) (undo-tree-id418 . -771) (undo-tree-id419 . -772) (undo-tree-id420 . -772) (undo-tree-id421 . -771) (undo-tree-id422 . -772) (undo-tree-id423 . -965) (undo-tree-id424 . -772) (undo-tree-id425 . -771) (undo-tree-id426 . -773) (undo-tree-id427 . -772) (undo-tree-id428 . -774) (undo-tree-id429 . -773) (undo-tree-id430 . -775) (undo-tree-id431 . -774) (undo-tree-id432 . -776) (undo-tree-id433 . -775) (undo-tree-id434 . -777) (undo-tree-id435 . -776) (undo-tree-id436 . -778) (undo-tree-id437 . -777) (undo-tree-id438 . -779) (undo-tree-id439 . -778) (undo-tree-id440 . -780) (undo-tree-id441 . -779) (undo-tree-id442 . -781) (undo-tree-id443 . -780) (undo-tree-id444 . -781) (undo-tree-id445 . -781) (undo-tree-id446 . -782) (undo-tree-id447 . -781) (undo-tree-id448 . -781) (undo-tree-id449 . -781) (undo-tree-id450 . -748) (undo-tree-id451 . -751) (undo-tree-id452 . -748) (undo-tree-id453 . -751) (undo-tree-id454 . -748) (undo-tree-id455 . -809) (undo-tree-id456 . -748) (undo-tree-id457 . -809) (undo-tree-id458 . -843) (undo-tree-id459 . -781) (undo-tree-id460 . -842) (undo-tree-id461 . -843) (undo-tree-id462 . -842) (undo-tree-id463 . -843) (undo-tree-id464 . -842) (undo-tree-id465 . -843) (undo-tree-id466 . -842) (undo-tree-id467 . -843) (undo-tree-id468 . -842) (undo-tree-id469 . -843) (undo-tree-id470 . -842) (undo-tree-id471 . -843) (undo-tree-id472 . -841) (undo-tree-id473 . -842) (undo-tree-id474 . -882) (undo-tree-id475 . -843) (undo-tree-id476 . -965) (undo-tree-id477 . -882) (undo-tree-id478 . -964) (undo-tree-id479 . -965) (undo-tree-id480 . -964) (undo-tree-id481 . -965) (undo-tree-id482 . -964) (undo-tree-id483 . -965) (undo-tree-id484 . -964) (undo-tree-id485 . -965) (undo-tree-id486 . -926) (undo-tree-id487 . -927) (undo-tree-id488 . -926) (undo-tree-id489 . -927) (undo-tree-id490 . -964) (undo-tree-id491 . -965) (undo-tree-id492 . -964) (undo-tree-id493 . -965) (undo-tree-id494 . -961) (undo-tree-id495 . -962) (undo-tree-id496 . -964) (undo-tree-id497 . -965) (undo-tree-id498 . -964) (undo-tree-id499 . -965) (undo-tree-id500 . -964) (undo-tree-id501 . -965) (undo-tree-id502 . -964) (undo-tree-id503 . -965) (undo-tree-id504 . -926) (undo-tree-id505 . -927) (undo-tree-id506 . -926) (undo-tree-id507 . -927) (undo-tree-id508 . -964) (undo-tree-id509 . -965) (undo-tree-id510 . -964) (undo-tree-id511 . -965) (undo-tree-id512 . -961) (undo-tree-id513 . -962) (undo-tree-id514 . 2049) (undo-tree-id515 . -962) (undo-tree-id516 . 2048) (undo-tree-id517 . -964) (undo-tree-id518 . 2046) (undo-tree-id519 . -965) 966) nil (23764 53876 220856 228000) 0 nil]) ((782 . 783)) nil (23764 53876 220880 877000) 0 nil]) ((#("." 0 1 (fontified t)) . -1002) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (#("a" 0 1 (fontified t)) . -1003) (undo-tree-id522 . -1) 1004 (1002 . 1004)) nil (23764 53876 220891 897000) 0 nil] [nil ([nil nil ((991 . 992)) ((#("&" 0 1 (fontified t)) . 991) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1)) (23764 53860 776200 349000) 0 nil]) ((782 . 785) (#("S" 0 1 (fontified t face font-lock-type-face)) . -782) (undo-tree-id368 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -783) (undo-tree-id369 . -1) (#("r" 0 1 (fontified t face font-lock-type-face)) . -784) (undo-tree-id370 . -1) 785 (782 . 785) (#("String" 0 6 (fontified t face font-lock-type-face)) . 782)) ((782 . 788) (#("Str" 0 1 (fontified nil face font-lock-type-face) 1 2 (fontified nil face font-lock-type-face) 2 3 (fontified nil face font-lock-type-face)) . 782) (782 . 785) (#("str" 0 3 (fontified t face font-lock-type-face)) . 782)) (23764 53860 781920 121000) 0 nil] [nil ([nil nil ((1025 . 1027) (#("(" 0 1 (fontified nil)) . -1025) (1018 . 1026)) ((#(".to_str(" 0 7 (fontified nil) 7 8 (fontified nil)) . 1018) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -5) (undo-tree-id358 . -5) (undo-tree-id359 . -5) (undo-tree-id360 . -6) (undo-tree-id361 . -5) (undo-tree-id362 . -5) (undo-tree-id363 . -1) (undo-tree-id364 . -7) (undo-tree-id365 . -1) (undo-tree-id366 . -7) (1025 . 1026) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1025) (undo-tree-id367 . 1)) (23764 53840 583633 253000) 0 nil] [nil nil ((1025 . 1027) (#("(" 0 1 (fontified nil)) . -1025) (1025 . 1026) (1018 . 1025)) ((#(".as_str" 0 1 (fontified nil) 1 7 (fontified nil)) . 1018) (undo-tree-id310 . -7) (undo-tree-id311 . -7) (undo-tree-id312 . -6) (undo-tree-id313 . -7) (undo-tree-id314 . -5) (undo-tree-id315 . -6) (undo-tree-id316 . -4) (undo-tree-id317 . -5) (undo-tree-id318 . -1) (undo-tree-id319 . -7) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -1) (undo-tree-id327 . -7) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -3) (undo-tree-id333 . -4) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -4) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -4) (undo-tree-id340 . -3) (undo-tree-id341 . -1) (undo-tree-id342 . -3) (undo-tree-id343 . -4) (undo-tree-id344 . -2) (undo-tree-id345 . -3) (undo-tree-id346 . -1) (undo-tree-id347 . -2) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (#("(" 0 1 (fontified nil)) . 1025) (1025 . 1026) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1025) (undo-tree-id354 . 1)) (23764 53830 792422 232000) 0 nil]) ((797 . 804) (#("Disp" 0 4 (fontified t face font-lock-type-face)) . -797) (undo-tree-id306 . -4) 801 (797 . 801) (#("S" 0 1 (fontified t face font-lock-type-face)) . -797) (undo-tree-id307 . -1) 798 (793 . 798) (#("r" 0 1 (fontified t)) . -793) (undo-tree-id308 . -1) 794 (782 . 794) (#("String" 0 6 (fontified t face font-lock-type-face)) . 782) (undo-tree-id309 . -1) 783) ((782 . 788) (#("impl std::fr" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil) 5 8 (fontified nil face font-lock-constant-face) 8 10 (fontified nil) 10 11 (fontified nil face font-lock-constant-face) 11 12 (fontified nil)) . 782) (793 . 794) (#("mt::S" 0 2 (fontified nil face font-lock-constant-face) 2 4 (fontified nil) 4 5 (fontified nil face font-lock-type-face)) . 793) (797 . 798) (#("Disp" 0 4 (fontified nil face font-lock-type-face)) . 797) (797 . 801) (#("Display" 0 7 (fontified t face font-lock-type-face)) . 797)) (23764 53840 594141 31000) 0 nil] [nil nil ((994 . 995)) ((#("&" 0 1 (fontified t)) . 994) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1)) (23764 53800 399859 399000) 0 nil]) ((#("self." 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t)) . 962) (undo-tree-id275 . -4)) nil (23764 53861 217933 719000) 0 nil]) ((#("        self.current_user = Some(user);
" 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t) 8 12 (fontified t face font-lock-keyword-face) 12 28 (fontified t) 28 32 (fontified t face font-lock-type-face) 32 39 (fontified t) 39 40 (fontified t)) . 1010) (undo-tree-id276 . -39) (undo-tree-id277 . -39) (undo-tree-id278 . -38) 1048) nil (23764 53800 399879 486000) 0 nil]) ((1102 . 1103) (#(")" 0 1 (fontified nil)) . 1102) (1101 . 1102) (#(" " 0 1 (fontified nil)) . -1101) (1101 . 1102) (#(")" 0 1 (fontified nil)) . -1101) (1101 . 1102) (#("," 0 1 (fontified t)) . -1101) (undo-tree-id279 . -1) 1102 (1097 . 1102) (1096 . 1098) (#("(" 0 1 (fontified nil face font-lock-type-face)) . -1096) (1090 . 1097) (#(" " 0 1 (fontified t)) . -1090) (undo-tree-id280 . -1) (undo-tree-id281 . -1) 1091 (1090 . 1091) (#(" " 0 1 (fontified t)) . -1090) (undo-tree-id282 . -1) 1091 (1090 . 1091) (1078 . 1090) (#("curr" 0 4 (fontified t)) . -1078) (undo-tree-id283 . -4) (undo-tree-id284 . -4) 1082 (1080 . 1082) (1077 . 1080)) nil (23764 53800 399898 993000) 0 nil]) ((nil rear-nonsticky nil 1017 . 1018) (#("
" 0 1 (fontified nil)) . -1049) (1009 . 1050) 972) nil (23764 53800 399906 16000) 0 nil]) ((#("        self.current_user = Some(user);
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 28 (fontified t) 28 32 (fontified t face font-lock-type-face) 32 40 (fontified t)) . 1326) (undo-tree-id285 . -38) 1364) nil (23764 53800 399909 547000) 0 nil]) ((788 . 800) (780 . 788)) nil (23764 53800 399911 895000) 0 nil]) ((770 . 780)) nil (23764 53800 399913 804000) 0 nil]) ((nil rear-nonsticky nil 822 . 823) (#("
" 0 1 (fontified nil)) . -979) (814 . 980) 782) nil (23764 53800 399916 731000) 0 nil]) ((#("        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(self.id);
        receiver.subscribe(timeline);
" 0 8 (fontified t) 8 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t) 12 15 (fontified t face font-lock-keyword-face) 15 16 (fontified t) 16 24 (fontified t face font-lock-variable-name-face) 24 27 (fontified t) 27 31 (fontified t face font-lock-keyword-face) 31 55 (fontified t) 55 82 (fontified t face font-lock-string-face) 82 117 (fontified t) 117 121 (fontified t face font-lock-keyword-face) 121 165 (fontified t)) . 1079) (undo-tree-id286 . -133) (undo-tree-id287 . -6) (undo-tree-id288 . -133) (undo-tree-id289 . -133) (undo-tree-id290 . -6) (undo-tree-id291 . -133) 1212 (t 23764 41332 502279 895000)) nil (23764 53800 399926 258000) 0 nil]) ((1 . 2999) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::{User, Filter};
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::json;
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::new_v4(),
            current_user: None,
        }
    }

    /// Clone the StreamManager with a new unique id
    pub fn new_copy(&self) -> Self {
        let id = Uuid::new_v4();
        StreamManager { id, ..self.clone() }
    }

    /// Subscribe to a channel if not already subscribed
    ///
    ///
    /// `.add()` also unsubscribes from any channels that no longer have clients
    pub fn add(&mut self, timeline: &str, _user: &User) {
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(self.id);
        receiver.subscribe(timeline);
    }

    pub fn set_user(&mut self, user: User) {
        self.current_user = Some(user);
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.set_manager_id(self.id);
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    )))),
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 47 (fontified t face font-lock-doc-face) 47 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 78 (fontified t) 78 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 96 (fontified t) 96 97 (fontified t) 97 101 (fontified t face font-lock-type-face) 101 103 (fontified t) 103 109 (fontified t face font-lock-type-face) 109 110 (fontified t) 110 112 (fontified t) 112 115 (fontified t face font-lock-keyword-face) 115 116 (fontified t) 116 123 (fontified t face font-lock-constant-face) 123 125 (fontified t) 125 131 (fontified t face font-lock-constant-face) 131 133 (fontified t) 133 139 (fontified t face font-lock-type-face) 139 141 (fontified t) 141 144 (fontified t face font-lock-keyword-face) 144 145 (fontified t) 145 152 (fontified t face font-lock-constant-face) 152 155 (fontified t) 155 160 (fontified t face font-lock-type-face) 160 162 (fontified t) 162 166 (fontified t face font-lock-type-face) 166 169 (fontified t) 169 172 (fontified t face font-lock-keyword-face) 172 173 (fontified t) 173 183 (fontified t face font-lock-constant-face) 183 191 (fontified t) 191 194 (fontified t face font-lock-keyword-face) 194 195 (fontified t) 195 205 (fontified t face font-lock-constant-face) 205 207 (fontified t) 207 212 (fontified t face font-lock-type-face) 212 214 (fontified t) 214 217 (fontified t face font-lock-keyword-face) 217 218 (fontified t) 218 221 (fontified t face font-lock-constant-face) 221 223 (fontified t) 223 227 (fontified t face font-lock-constant-face) 227 230 (fontified t) 230 233 (fontified t face font-lock-type-face) 233 235 (fontified t) 235 240 (fontified t face font-lock-type-face) 240 243 (fontified t) 243 246 (fontified t face font-lock-keyword-face) 246 247 (fontified t) 247 252 (fontified t face font-lock-constant-face) 252 254 (fontified t) 254 256 (fontified t face font-lock-constant-face) 256 258 (fontified t) 258 263 (fontified t face font-lock-type-face) 263 265 (fontified t) 265 268 (fontified t face font-lock-keyword-face) 268 269 (fontified t) 269 273 (fontified t face font-lock-constant-face) 273 275 (fontified t) 275 279 (fontified t face font-lock-type-face) 279 282 (fontified t) 282 325 (fontified t face font-lock-doc-face) 325 348 (fontified t face font-lock-preprocessor-face) 348 349 (fontified t) 349 352 (fontified t face font-lock-keyword-face) 352 353 (fontified t) 353 359 (fontified t face font-lock-keyword-face) 359 360 (fontified t) 360 373 (fontified t face font-lock-type-face) 373 380 (fontified t) 380 388 (fontified t face font-lock-variable-name-face) 388 390 (fontified t) 390 393 (fontified t face font-lock-type-face) 393 394 (fontified t) 394 399 (fontified t face font-lock-type-face) 399 400 (fontified t) 400 408 (fontified t face font-lock-type-face) 408 416 (fontified t) 416 418 (fontified t face font-lock-variable-name-face) 418 420 (fontified t) 420 424 (fontified t face font-lock-constant-face) 424 426 (fontified t) 426 430 (fontified t face font-lock-type-face) 430 436 (fontified t) 436 448 (fontified t face font-lock-variable-name-face) 448 450 (fontified t) 450 456 (fontified t face font-lock-type-face) 456 457 (fontified t) 457 461 (fontified t face font-lock-type-face) 461 466 (fontified t) 466 470 (fontified t face font-lock-keyword-face) 470 471 (fontified t) 471 484 (fontified t face font-lock-type-face) 484 491 (fontified t) 491 494 (fontified t face font-lock-keyword-face) 494 495 (fontified t) 495 497 (fontified t face font-lock-keyword-face) 497 498 (fontified t) 498 501 (fontified t face font-lock-function-name-face) 501 502 (fontified t) 502 510 (fontified t face font-lock-variable-name-face) 510 512 (fontified t) 512 520 (fontified t face font-lock-type-face) 520 523 (fontified t) 523 524 (syntax-table #1# fontified t) 524 525 (fontified t) 525 529 (fontified t face font-lock-type-face) 529 533 (fontified t) 533 540 (fontified t) 540 553 (fontified t face font-lock-type-face) 553 556 (fontified t) 556 563 (fontified t) 563 568 (fontified t) 568 576 (fontified t face font-lock-variable-name-face) 576 578 (fontified t) 578 581 (fontified t face font-lock-type-face) 581 587 (fontified t) 587 589 (fontified t face font-lock-type-face) 589 592 (fontified t face font-lock-type-face) 592 610 (fontified t) 610 622 (fontified t) 622 624 (fontified t face font-lock-variable-name-face) 624 626 (fontified t) 626 630 (fontified t face font-lock-type-face) 630 641 (fontified t) 641 642 (fontified t) 642 654 (fontified t) 654 666 (fontified t face font-lock-variable-name-face) 666 668 (fontified t) 668 672 (fontified t face font-lock-type-face) 672 695 (fontified t) 695 744 (fontified t face font-lock-doc-face) 744 748 (fontified t) 748 751 (fontified t face font-lock-keyword-face) 751 752 (fontified t) 752 754 (fontified t face font-lock-keyword-face) 754 755 (fontified t) 755 763 (fontified t face font-lock-function-name-face) 763 765 (fontified t) 765 769 (fontified t face font-lock-keyword-face) 769 772 (fontified t) 772 773 (fontified t syntax-table #1#) 773 774 (fontified t) 774 778 (fontified t face font-lock-type-face) 778 789 (fontified t) 789 792 (fontified t face font-lock-keyword-face) 792 793 (fontified t) 793 795 (fontified t face font-lock-variable-name-face) 795 798 (fontified t) 798 802 (fontified t face font-lock-type-face) 802 822 (fontified t) 822 835 (fontified t face font-lock-type-face) 835 844 (fontified t) 844 848 (fontified t face font-lock-keyword-face) 848 870 (fontified t) 870 923 (fontified t face font-lock-doc-face) 923 927 (fontified t) 927 931 (fontified t face font-lock-doc-face) 931 935 (fontified t) 935 939 (fontified t face font-lock-doc-face) 939 943 (fontified t) 943 1020 (fontified t face font-lock-doc-face) 1020 1024 (fontified t) 1024 1027 (fontified t face font-lock-keyword-face) 1027 1028 (fontified t) 1028 1030 (fontified t face font-lock-keyword-face) 1030 1031 (fontified t) 1031 1034 (fontified t face font-lock-function-name-face) 1034 1036 (fontified t) 1036 1039 (fontified t face font-lock-keyword-face) 1039 1040 (fontified t) 1040 1044 (fontified t face font-lock-keyword-face) 1044 1046 (fontified t) 1046 1054 (fontified t face font-lock-variable-name-face) 1054 1056 (fontified t) 1056 1057 (fontified t) 1057 1060 (fontified t face font-lock-type-face) 1060 1062 (fontified t) 1062 1067 (fontified t face font-lock-variable-name-face) 1067 1070 (fontified t) 1070 1074 (fontified t face font-lock-type-face) 1074 1078 (fontified t) 1078 1086 (fontified t) 1086 1089 (fontified t face font-lock-keyword-face) 1089 1090 (fontified t) 1090 1093 (fontified t face font-lock-keyword-face) 1093 1094 (fontified t) 1094 1102 (fontified t face font-lock-variable-name-face) 1102 1105 (fontified t) 1105 1109 (fontified t face font-lock-keyword-face) 1109 1110 (fontified t) 1110 1133 (fontified t) 1133 1142 (fontified t face font-lock-string-face) 1142 1160 (face font-lock-string-face fontified t) 1160 1163 (fontified t) 1163 1195 (fontified t) 1195 1199 (fontified t face font-lock-keyword-face) 1199 1254 (fontified t) 1254 1257 (fontified t face font-lock-keyword-face) 1257 1258 (fontified t) 1258 1260 (fontified t face font-lock-keyword-face) 1260 1261 (fontified t) 1261 1269 (fontified t face font-lock-function-name-face) 1269 1271 (fontified t) 1271 1274 (fontified t face font-lock-keyword-face) 1274 1275 (fontified t) 1275 1279 (fontified t face font-lock-keyword-face) 1279 1281 (fontified t) 1281 1285 (fontified t face font-lock-variable-name-face) 1285 1287 (fontified t) 1287 1291 (fontified t face font-lock-type-face) 1291 1303 (fontified t) 1303 1307 (fontified t face font-lock-keyword-face) 1307 1323 (fontified t) 1323 1327 (fontified t face font-lock-type-face) 1327 1344 (fontified t) 1344 1348 (fontified t face font-lock-keyword-face) 1348 1349 (fontified t) 1349 1355 (fontified t face font-lock-type-face) 1355 1356 (fontified t) 1356 1359 (fontified t face font-lock-keyword-face) 1359 1360 (fontified t) 1360 1373 (fontified t face font-lock-type-face) 1373 1380 (fontified t) 1380 1384 (fontified t face font-lock-keyword-face) 1384 1385 (fontified t) 1385 1389 (fontified t face font-lock-type-face) 1389 1392 (fontified t) 1392 1397 (fontified t face font-lock-type-face) 1397 1403 (fontified t) 1403 1407 (fontified t face font-lock-keyword-face) 1407 1408 (fontified t) 1408 1413 (fontified t face font-lock-type-face) 1413 1416 (fontified t) 1416 1421 (fontified t face font-lock-type-face) 1421 1428 (fontified t) 1428 1430 (fontified t face font-lock-keyword-face) 1430 1431 (fontified t) 1431 1435 (fontified t face font-lock-function-name-face) 1435 1437 (fontified t) 1437 1440 (fontified t face font-lock-keyword-face) 1440 1441 (fontified t) 1441 1445 (fontified t face font-lock-keyword-face) 1445 1448 (fontified t) 1448 1449 (fontified t syntax-table #1#) 1449 1450 (fontified t) 1450 1454 (fontified t face font-lock-type-face) 1454 1455 (fontified t) 1455 1461 (fontified t face font-lock-type-face) 1461 1462 (fontified t) 1462 1466 (fontified t face font-lock-type-face) 1466 1468 (fontified t) 1468 1472 (fontified t face font-lock-type-face) 1472 1475 (fontified t) 1475 1479 (fontified t face font-lock-type-face) 1479 1481 (fontified t) 1481 1486 (fontified t face font-lock-type-face) 1486 1498 (fontified t) 1498 1501 (fontified t face font-lock-keyword-face) 1501 1502 (fontified t) 1502 1505 (fontified t face font-lock-keyword-face) 1505 1506 (fontified t) 1506 1514 (fontified t face font-lock-variable-name-face) 1514 1517 (fontified t) 1517 1521 (fontified t face font-lock-keyword-face) 1521 1545 (fontified t) 1545 1568 (fontified t face font-lock-string-face) 1568 1578 (fontified t) 1578 1603 (fontified t) 1603 1607 (fontified t face font-lock-keyword-face) 1607 1613 (fontified t) 1613 1621 (fontified t) 1621 1626 (fontified t face font-lock-keyword-face) 1626 1657 (fontified t) 1657 1659 (fontified t face font-lock-type-face) 1659 1660 (fontified t) 1660 1663 (fontified t face font-lock-type-face) 1663 1665 (face font-lock-type-face fontified t) 1665 1667 (fontified t) 1667 1672 (face font-lock-type-face fontified t) 1672 1673 (fontified t) 1673 1677 (face font-lock-type-face fontified t) 1677 1688 (fontified t) 1688 1689 (syntax-table #1# fontified t) 1689 1692 (fontified t) 1692 1708 (fontified t) 1708 1711 (fontified t face font-lock-keyword-face) 1711 1712 (fontified t) 1712 1716 (fontified t face font-lock-variable-name-face) 1716 1719 (fontified t) 1719 1723 (fontified t face font-lock-keyword-face) 1723 1815 (fontified t) 1815 1842 (fontified t face font-lock-string-face) 1842 1843 (fontified t syntax-table #2# face font-lock-string-face) 1843 1844 (fontified t face font-lock-string-face) 1844 1864 (fontified t) 1864 1867 (fontified t face font-lock-keyword-face) 1867 1868 (fontified t) 1868 1878 (fontified t face font-lock-variable-name-face) 1878 1917 (fontified t) 1917 1920 (fontified t face font-lock-keyword-face) 1920 1921 (fontified t) 1921 1925 (fontified t face font-lock-variable-name-face) 1925 1959 (fontified t) 1959 1962 (fontified t face font-lock-keyword-face) 1962 1963 (fontified t) 1963 1968 (fontified t face font-lock-variable-name-face) 1968 1976 (fontified t) 1976 1983 (fontified t face font-lock-string-face) 1983 2001 (fontified t) 2001 2015 (fontified t face font-lock-string-face) 2015 2034 (fontified t) 2034 2037 (fontified t face font-lock-keyword-face) 2037 2038 (fontified t) 2038 2042 (fontified t face font-lock-variable-name-face) 2042 2076 (fontified t) 2076 2079 (fontified t face font-lock-keyword-face) 2079 2080 (fontified t) 2080 2087 (fontified t face font-lock-variable-name-face) 2087 2095 (fontified t) 2095 2104 (fontified t face font-lock-string-face) 2104 2135 (fontified t) 2135 2138 (fontified t face font-lock-keyword-face) 2138 2139 (fontified t) 2139 2143 (fontified t face font-lock-variable-name-face) 2143 2177 (fontified t) 2177 2180 (fontified t face font-lock-keyword-face) 2180 2181 (fontified t) 2181 2190 (fontified t face font-lock-variable-name-face) 2190 2192 (fontified t) 2192 2198 (fontified t) 2198 2207 (face font-lock-string-face fontified t) 2207 2209 (fontified t) 2209 2219 (face font-lock-string-face fontified t) 2219 2221 (fontified t) 2221 2279 (fontified t) 2279 2288 (fontified t face font-lock-string-face) 2288 2289 (fontified t syntax-table #2# face font-lock-string-face) 2289 2290 (fontified t face font-lock-string-face) 2290 2343 (fontified t) 2343 2348 (fontified t face font-lock-keyword-face) 2348 2399 (fontified t) 2399 2405 (fontified t face font-lock-type-face) 2405 2407 (fontified t) 2407 2419 (fontified t face font-lock-type-face) 2419 2424 (fontified t) 2424 2426 (fontified t face font-lock-keyword-face) 2426 2436 (fontified t) 2436 2450 (fontified t face font-lock-string-face) 2450 2452 (fontified t) 2452 2453 (fontified t syntax-table #1#) 2453 2454 (fontified t) 2454 2456 (fontified t face font-lock-type-face) 2456 2457 (fontified t) 2457 2462 (fontified t face font-lock-type-face) 2462 2464 (fontified t) 2464 2472 (fontified t face font-lock-type-face) 2472 2496 (fontified t) 2496 2502 (fontified t face font-lock-type-face) 2502 2504 (fontified t) 2504 2512 (fontified t face font-lock-type-face) 2512 2514 (fontified t) 2514 2518 (fontified t face font-lock-type-face) 2518 2519 (fontified t) 2519 2522 (fontified t face font-lock-keyword-face) 2522 2523 (fontified t) 2523 2528 (fontified t face font-lock-variable-name-face) 2528 2531 (fontified t) 2531 2533 (fontified t face font-lock-keyword-face) 2533 2563 (fontified t) 2563 2564 (fontified t syntax-table #1#) 2564 2591 (fontified t) 2591 2593 (fontified t face font-lock-type-face) 2593 2594 (fontified t) 2594 2599 (fontified t face font-lock-type-face) 2599 2601 (fontified t) 2601 2609 (fontified t face font-lock-type-face) 2609 2657 (fontified t) 2657 2658 (fontified t syntax-table #1#) 2658 2659 (fontified t) 2659 2661 (fontified t face font-lock-type-face) 2661 2662 (fontified t) 2662 2667 (fontified t face font-lock-type-face) 2667 2669 (fontified t) 2669 2674 (fontified t face font-lock-type-face) 2674 2675 (fontified t) 2675 2679 (fontified t face font-lock-type-face) 2679 2680 (fontified t) 2680 2685 (fontified t face font-lock-preprocessor-face) 2685 2712 (fontified t) 2712 2719 (fontified t face font-lock-string-face) 2719 2721 (fontified t) 2721 2728 (fontified t) 2728 2753 (fontified t) 2753 2762 (fontified t face font-lock-string-face) 2762 2844 (fontified t) 2844 2846 (fontified t face font-lock-type-face) 2846 2847 (fontified t) 2847 2852 (fontified t face font-lock-type-face) 2852 2854 (fontified t) 2854 2859 (fontified t face font-lock-type-face) 2859 2860 (fontified t) 2860 2864 (fontified t face font-lock-type-face) 2864 2868 (fontified t) 2868 2869 (fontified t syntax-table #1#) 2869 2870 (fontified t) 2870 2872 (fontified t face font-lock-type-face) 2872 2873 (fontified t) 2873 2878 (fontified t face font-lock-type-face) 2878 2880 (fontified t) 2880 2885 (fontified t face font-lock-type-face) 2885 2886 (fontified t) 2886 2890 (fontified t face font-lock-type-face) 2890 2906 (fontified t) 2906 2908 (fontified t face font-lock-type-face) 2908 2909 (fontified t) 2909 2914 (fontified t face font-lock-type-face) 2914 2916 (fontified t) 2916 2924 (fontified t face font-lock-type-face) 2924 2927 (fontified t) 2927 2928 (fontified t syntax-table #1#) 2928 2929 (fontified t) 2929 2931 (fontified t face font-lock-type-face) 2931 2932 (fontified t) 2932 2937 (fontified t face font-lock-type-face) 2937 2939 (fontified t) 2939 2947 (fontified t face font-lock-type-face) 2947 2962 (fontified t) 2962 2965 (fontified t face font-lock-type-face) 2965 2970 (fontified t) 2970 2971 (fontified t syntax-table #1#) 2971 2972 (fontified t) 2972 2975 (fontified t face font-lock-type-face) 2975 2998 (fontified t)) . 1) (undo-tree-id244 . -403) (undo-tree-id245 . 2895) (undo-tree-id246 . -403) (undo-tree-id247 . -191) (undo-tree-id248 . -403) (undo-tree-id249 . -402) (undo-tree-id250 . -69) (undo-tree-id251 . -77) (undo-tree-id252 . -52) (undo-tree-id253 . -57) (undo-tree-id254 . -400) (undo-tree-id255 . -408) (undo-tree-id256 . -512) (undo-tree-id257 . -520) (undo-tree-id258 . -191) (undo-tree-id259 . -403) (undo-tree-id260 . -403) (undo-tree-id261 . -349) (undo-tree-id262 . -1399) (undo-tree-id263 . -1376) (undo-tree-id264 . -1424) (undo-tree-id265 . -1250) (undo-tree-id266 . -1020) (undo-tree-id267 . -744) (undo-tree-id268 . -487) (undo-tree-id269 . -1344) (undo-tree-id270 . -466) (undo-tree-id271 . -403) (undo-tree-id272 . -403)) nil (23764 41332 479943 856000) 0 nil]) ((#("use crate::user::User;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 21 (fontified t face font-lock-type-face) 21 23 (fontified t)) . 113) (undo-tree-id273 . -21) (undo-tree-id274 . -21) 134) nil (23764 41332 479952 544000) 0 nil]) ((98 . 104) (104 . 105) (#("}" 0 1 (fontified t)) . -98) (97 . 99) (#("{" 0 1 (fontified nil)) . -97) (97 . 98) (t 23764 39535 795506 314000)) nil (23764 41332 479957 240000) 0 nil]) ((1 . 3014) (#("//! Manage all existing Redis PubSub connection
use crate::user::Filter;
use serde_json::json;
use crate::receiver::Receiver;
use crate::user::User;
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::Value;
use std::sync::{Arc, Mutex};
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::new_v4(),
            current_user: None,
        }
    }

    /// Clone the StreamManager with a new unique id
    pub fn new_copy(&self) -> Self {
        let id = Uuid::new_v4();
        StreamManager { id, ..self.clone() }
    }

    /// Subscribe to a channel if not already subscribed
    ///
    ///
    /// `.add()` also unsubscribes from any channels that no longer have clients
    pub fn add(&mut self, timeline: &str, _user: &User) {
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(self.id);
        receiver.subscribe(timeline);
    }

    pub fn set_user(&mut self, user: User) {
        self.current_user = Some(user);
    }
}

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.set_manager_id(self.id);
        match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self
                    .clone()
                    .current_user
                    .expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    )))),
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        }
    }
}
" 0 47 (fontified t face font-lock-doc-face) 47 48 (fontified t rear-nonsticky t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 63 (fontified t face font-lock-constant-face) 63 65 (fontified t) 65 71 (fontified t face font-lock-type-face) 71 73 (fontified t) 73 76 (fontified t face font-lock-keyword-face) 76 77 (fontified t) 77 87 (fontified t face font-lock-constant-face) 87 94 (fontified t) 94 95 (fontified t) 95 98 (fontified t face font-lock-keyword-face) 98 99 (fontified t) 99 104 (fontified t face font-lock-keyword-face) 104 106 (fontified t) 106 114 (fontified t face font-lock-constant-face) 114 116 (fontified t) 116 124 (fontified t face font-lock-type-face) 124 126 (fontified t) 126 129 (fontified t face font-lock-keyword-face) 129 130 (fontified t) 130 135 (fontified t face font-lock-keyword-face) 135 137 (fontified t) 137 141 (fontified t face font-lock-constant-face) 141 143 (fontified t) 143 147 (fontified t face font-lock-type-face) 147 149 (fontified t) 149 152 (fontified t face font-lock-keyword-face) 152 153 (fontified t) 153 160 (fontified t face font-lock-constant-face) 160 162 (fontified t) 162 168 (fontified t face font-lock-constant-face) 168 170 (fontified t) 170 176 (fontified t face font-lock-type-face) 176 178 (fontified t) 178 181 (fontified t face font-lock-keyword-face) 181 182 (fontified t) 182 189 (fontified t face font-lock-constant-face) 189 192 (fontified t) 192 197 (fontified t face font-lock-type-face) 197 199 (fontified t) 199 203 (fontified t face font-lock-type-face) 203 206 (fontified t) 206 209 (fontified t face font-lock-keyword-face) 209 210 (fontified t) 210 220 (fontified t face font-lock-constant-face) 220 222 (fontified t) 222 227 (fontified t face font-lock-type-face) 227 229 (fontified t) 229 232 (fontified t face font-lock-keyword-face) 232 233 (fontified t) 233 236 (fontified t face font-lock-constant-face) 236 238 (fontified t) 238 242 (fontified t face font-lock-constant-face) 242 245 (fontified t) 245 248 (fontified t face font-lock-type-face) 248 250 (fontified t) 250 255 (fontified t face font-lock-type-face) 255 258 (fontified t) 258 261 (fontified t face font-lock-keyword-face) 261 262 (fontified t) 262 267 (fontified t face font-lock-constant-face) 267 269 (fontified t) 269 271 (fontified t face font-lock-constant-face) 271 273 (fontified t) 273 278 (fontified t face font-lock-type-face) 278 280 (fontified t) 280 283 (fontified t face font-lock-keyword-face) 283 284 (fontified t) 284 288 (fontified t face font-lock-constant-face) 288 290 (fontified t) 290 294 (fontified t face font-lock-type-face) 294 297 (fontified t) 297 340 (fontified t face font-lock-doc-face) 340 363 (fontified t face font-lock-preprocessor-face) 363 364 (fontified t) 364 367 (fontified t face font-lock-keyword-face) 367 368 (fontified t) 368 374 (fontified t face font-lock-keyword-face) 374 375 (fontified t) 375 388 (fontified t face font-lock-type-face) 388 395 (fontified t) 395 403 (fontified t face font-lock-variable-name-face) 403 405 (fontified t) 405 408 (fontified t face font-lock-type-face) 408 409 (fontified t) 409 414 (fontified t face font-lock-type-face) 414 415 (fontified t) 415 423 (fontified t face font-lock-type-face) 423 431 (fontified t) 431 433 (fontified t face font-lock-variable-name-face) 433 435 (fontified t) 435 439 (fontified t face font-lock-constant-face) 439 441 (fontified t) 441 445 (fontified t face font-lock-type-face) 445 451 (fontified t) 451 463 (fontified t face font-lock-variable-name-face) 463 465 (fontified t) 465 471 (fontified t face font-lock-type-face) 471 472 (fontified t) 472 476 (fontified t face font-lock-type-face) 476 481 (fontified t) 481 485 (fontified t face font-lock-keyword-face) 485 486 (fontified t) 486 492 (fontified t face font-lock-type-face) 492 499 (fontified t face font-lock-type-face) 499 502 (fontified t) 502 506 (fontified t) 506 509 (fontified t face font-lock-keyword-face) 509 510 (fontified t) 510 512 (fontified t face font-lock-keyword-face) 512 513 (fontified t) 513 516 (fontified t face font-lock-function-name-face) 516 517 (fontified t) 517 525 (fontified t face font-lock-variable-name-face) 525 527 (fontified t) 527 535 (fontified t face font-lock-type-face) 535 538 (fontified t) 538 539 (syntax-table #1# fontified t) 539 540 (fontified t) 540 544 (fontified t face font-lock-type-face) 544 555 (fontified t) 555 568 (fontified t face font-lock-type-face) 568 583 (fontified t) 583 591 (fontified t face font-lock-variable-name-face) 591 593 (fontified t) 593 595 (fontified t face font-lock-type-face) 595 596 (face font-lock-type-face fontified t) 596 602 (fontified t) 602 607 (face font-lock-type-face fontified t) 607 625 (fontified t) 625 637 (fontified t) 637 639 (fontified t face font-lock-variable-name-face) 639 641 (fontified t) 641 645 (fontified t face font-lock-type-face) 645 657 (fontified t) 657 669 (fontified t) 669 681 (fontified t face font-lock-variable-name-face) 681 683 (fontified t) 683 687 (fontified t face font-lock-type-face) 687 688 (fontified t) 688 710 (fontified t) 710 759 (fontified t face font-lock-doc-face) 759 763 (fontified t) 763 766 (fontified t face font-lock-keyword-face) 766 767 (fontified t) 767 769 (fontified t face font-lock-keyword-face) 769 770 (fontified t) 770 778 (fontified t face font-lock-function-name-face) 778 780 (fontified t) 780 784 (fontified t face font-lock-keyword-face) 784 787 (fontified t) 787 788 (syntax-table #1# fontified t) 788 789 (fontified t) 789 793 (fontified t face font-lock-type-face) 793 796 (fontified t) 796 804 (fontified t) 804 807 (fontified t face font-lock-keyword-face) 807 808 (fontified t) 808 810 (fontified t face font-lock-variable-name-face) 810 813 (fontified t) 813 817 (fontified t face font-lock-type-face) 817 837 (fontified t) 837 850 (fontified t face font-lock-type-face) 850 859 (fontified t) 859 863 (fontified t face font-lock-keyword-face) 863 885 (fontified t) 885 938 (fontified t face font-lock-doc-face) 938 942 (fontified t) 942 946 (fontified t face font-lock-doc-face) 946 950 (fontified t) 950 954 (fontified t face font-lock-doc-face) 954 958 (fontified t) 958 1035 (fontified t face font-lock-doc-face) 1035 1039 (fontified t) 1039 1042 (fontified t face font-lock-keyword-face) 1042 1043 (fontified t) 1043 1045 (fontified t face font-lock-keyword-face) 1045 1046 (fontified t) 1046 1049 (fontified t face font-lock-function-name-face) 1049 1051 (fontified t) 1051 1054 (fontified t face font-lock-keyword-face) 1054 1055 (fontified t) 1055 1059 (fontified t face font-lock-keyword-face) 1059 1061 (fontified t) 1061 1069 (fontified t face font-lock-variable-name-face) 1069 1072 (fontified t) 1072 1075 (fontified t face font-lock-type-face) 1075 1077 (fontified t) 1077 1082 (fontified t face font-lock-variable-name-face) 1082 1085 (fontified t) 1085 1089 (fontified t face font-lock-type-face) 1089 1101 (fontified t) 1101 1104 (fontified t face font-lock-keyword-face) 1104 1105 (fontified t) 1105 1108 (fontified t face font-lock-keyword-face) 1108 1109 (fontified t) 1109 1117 (fontified t face font-lock-variable-name-face) 1117 1120 (fontified t) 1120 1124 (fontified t face font-lock-keyword-face) 1124 1125 (fontified t) 1125 1148 (fontified t) 1148 1157 (face font-lock-string-face fontified t) 1157 1175 (face font-lock-string-face fontified t) 1175 1178 (fontified t) 1178 1188 (fontified t) 1188 1210 (fontified t) 1210 1214 (fontified t face font-lock-keyword-face) 1214 1220 (fontified t) 1220 1265 (fontified t) 1265 1269 (fontified t) 1269 1272 (fontified t face font-lock-keyword-face) 1272 1273 (fontified t) 1273 1275 (fontified t face font-lock-keyword-face) 1275 1276 (fontified t) 1276 1284 (fontified t face font-lock-function-name-face) 1284 1286 (fontified t) 1286 1289 (fontified t face font-lock-keyword-face) 1289 1290 (fontified t) 1290 1294 (fontified t face font-lock-keyword-face) 1294 1296 (fontified t) 1296 1300 (fontified t face font-lock-variable-name-face) 1300 1302 (fontified t) 1302 1306 (fontified t face font-lock-type-face) 1306 1310 (fontified t) 1310 1318 (fontified t) 1318 1322 (fontified t face font-lock-keyword-face) 1322 1338 (fontified t) 1338 1342 (fontified t face font-lock-type-face) 1342 1358 (fontified t) 1358 1359 (fontified t) 1359 1363 (fontified t face font-lock-keyword-face) 1363 1364 (fontified t) 1364 1370 (fontified t face font-lock-type-face) 1370 1371 (fontified t) 1371 1374 (fontified t face font-lock-keyword-face) 1374 1375 (fontified t) 1375 1388 (fontified t face font-lock-type-face) 1388 1395 (fontified t) 1395 1399 (fontified t face font-lock-keyword-face) 1399 1400 (fontified t) 1400 1404 (fontified t face font-lock-type-face) 1404 1407 (fontified t) 1407 1412 (fontified t face font-lock-type-face) 1412 1418 (fontified t) 1418 1422 (fontified t face font-lock-keyword-face) 1422 1423 (fontified t) 1423 1428 (fontified t face font-lock-type-face) 1428 1431 (fontified t) 1431 1436 (fontified t face font-lock-type-face) 1436 1443 (fontified t) 1443 1445 (fontified t face font-lock-keyword-face) 1445 1446 (fontified t) 1446 1450 (fontified t face font-lock-function-name-face) 1450 1452 (fontified t) 1452 1455 (fontified t face font-lock-keyword-face) 1455 1456 (fontified t) 1456 1460 (fontified t face font-lock-keyword-face) 1460 1463 (fontified t) 1463 1464 (syntax-table #1# fontified t) 1464 1465 (fontified t) 1465 1469 (fontified t face font-lock-type-face) 1469 1470 (fontified t) 1470 1476 (fontified t face font-lock-type-face) 1476 1477 (fontified t) 1477 1481 (fontified t face font-lock-type-face) 1481 1483 (fontified t) 1483 1487 (fontified t face font-lock-type-face) 1487 1490 (fontified t) 1490 1494 (fontified t face font-lock-type-face) 1494 1496 (fontified t) 1496 1501 (fontified t face font-lock-type-face) 1501 1513 (fontified t) 1513 1516 (fontified t face font-lock-keyword-face) 1516 1517 (fontified t) 1517 1520 (fontified t face font-lock-keyword-face) 1520 1521 (fontified t) 1521 1529 (fontified t face font-lock-variable-name-face) 1529 1532 (fontified t) 1532 1536 (fontified t face font-lock-keyword-face) 1536 1560 (fontified t) 1560 1583 (fontified t face font-lock-string-face) 1583 1618 (fontified t) 1618 1622 (fontified t face font-lock-keyword-face) 1622 1628 (fontified t) 1628 1636 (fontified t) 1636 1641 (fontified t face font-lock-keyword-face) 1641 1660 (fontified t) 1660 1672 (fontified t) 1672 1674 (fontified t face font-lock-type-face) 1674 1675 (fontified t) 1675 1678 (fontified t face font-lock-type-face) 1678 1680 (face font-lock-type-face fontified t) 1680 1682 (fontified t) 1682 1687 (face font-lock-type-face fontified t) 1687 1688 (fontified t) 1688 1692 (face font-lock-type-face fontified t) 1692 1703 (fontified t) 1703 1704 (syntax-table #1# fontified t) 1704 1705 (fontified t) 1705 1707 (fontified t) 1723 1726 (face font-lock-keyword-face) 1727 1731 (face font-lock-variable-name-face) 1734 1738 (face font-lock-keyword-face) 1830 1857 (face font-lock-string-face) 1857 1858 (face font-lock-string-face syntax-table #2#) 1858 1859 (face font-lock-string-face) 1879 1882 (face font-lock-keyword-face) 1883 1893 (face font-lock-variable-name-face) 1932 1935 (face font-lock-keyword-face) 1936 1940 (face font-lock-variable-name-face) 1974 1977 (face font-lock-keyword-face) 1978 1983 (face font-lock-variable-name-face) 1991 1998 (face font-lock-string-face) 2016 2030 (face font-lock-string-face) 2049 2052 (face font-lock-keyword-face) 2053 2057 (face font-lock-variable-name-face) 2091 2094 (face font-lock-keyword-face) 2095 2102 (face font-lock-variable-name-face) 2110 2119 (face font-lock-string-face) 2150 2153 (face font-lock-keyword-face) 2154 2158 (face font-lock-variable-name-face) 2192 2195 (face font-lock-keyword-face) 2196 2205 (face font-lock-variable-name-face) 2213 2222 (face font-lock-string-face) 2224 2234 (face font-lock-string-face) 2294 2303 (face font-lock-string-face) 2303 2304 (face font-lock-string-face syntax-table #2#) 2304 2305 (face font-lock-string-face) 2358 2362 (face font-lock-keyword-face) 2362 2363 (face font-lock-keyword-face) 2414 2420 (face font-lock-type-face) 2422 2434 (face font-lock-type-face) 2439 2441 (face font-lock-keyword-face) 2451 2465 (face font-lock-string-face) 2467 2468 (syntax-table #1#) 2469 2471 (face font-lock-type-face) 2472 2477 (face font-lock-type-face) 2479 2487 (face font-lock-type-face) 2511 2517 (face font-lock-type-face) 2519 2527 (face font-lock-type-face) 2529 2532 (face font-lock-type-face) 2532 2533 (face font-lock-type-face) 2534 2537 (face font-lock-keyword-face) 2538 2543 (face font-lock-variable-name-face) 2546 2548 (face font-lock-keyword-face) 2578 2579 (syntax-table #1#) 2606 2608 (face font-lock-type-face) 2609 2614 (face font-lock-type-face) 2616 2624 (face font-lock-type-face) 2672 2673 (syntax-table #1#) 2674 2676 (face font-lock-type-face) 2677 2682 (face font-lock-type-face) 2684 2689 (face font-lock-type-face) 2690 2694 (face font-lock-type-face) 2695 2700 (face font-lock-preprocessor-face) 2727 2734 (face font-lock-string-face) 2768 2777 (face font-lock-string-face) 2859 2861 (face font-lock-type-face) 2862 2867 (face font-lock-type-face) 2869 2874 (face font-lock-type-face) 2875 2879 (face font-lock-type-face) 2883 2884 (syntax-table #1#) 2885 2887 (face font-lock-type-face) 2888 2893 (face font-lock-type-face) 2895 2900 (face font-lock-type-face) 2901 2905 (face font-lock-type-face) 2921 2923 (face font-lock-type-face) 2924 2929 (face font-lock-type-face) 2931 2939 (face font-lock-type-face) 2942 2943 (syntax-table #1#) 2944 2946 (face font-lock-type-face) 2947 2952 (face font-lock-type-face) 2954 2962 (face font-lock-type-face) 2977 2980 (face font-lock-type-face) 2985 2986 (syntax-table #1#) 2987 2990 (face font-lock-type-face)) . 1) (undo-tree-id166 . -94) (undo-tree-id167 . -48) (undo-tree-id168 . -94) (undo-tree-id169 . 9) (undo-tree-id170 . -2017) (undo-tree-id171 . -2017) (undo-tree-id172 . -1265) (undo-tree-id173 . -479) (undo-tree-id174 . -1237) (undo-tree-id175 . -2073) (undo-tree-id176 . -2073) (undo-tree-id177 . -1505) (undo-tree-id178 . -2073) (undo-tree-id179 . -2073) (undo-tree-id180 . -1505) (undo-tree-id181 . -2017) (undo-tree-id182 . -2073) (undo-tree-id183 . -2073) (undo-tree-id184 . -1178) (undo-tree-id185 . -1776) (undo-tree-id186 . -1747) (undo-tree-id187 . -938) (undo-tree-id188 . -1776) (undo-tree-id189 . -1776) (undo-tree-id190 . -938) (undo-tree-id191 . -1776) (undo-tree-id192 . -1776) (undo-tree-id193 . -938) (undo-tree-id194 . -1189) (undo-tree-id195 . -1104) (undo-tree-id196 . -3003) (undo-tree-id197 . -1189) (undo-tree-id198 . -1189) (undo-tree-id199 . -699) (undo-tree-id200 . -1189) (undo-tree-id201 . -1750) (undo-tree-id202 . -1779) (undo-tree-id203 . -1358) (undo-tree-id204 . -1189) (undo-tree-id205 . -1750) (undo-tree-id206 . -558) (undo-tree-id207 . -582) (undo-tree-id208 . -1750) (undo-tree-id209 . -558) (undo-tree-id210 . -770) (undo-tree-id211 . -558) (undo-tree-id212 . -178) (undo-tree-id213 . -558) (undo-tree-id214 . -770) (undo-tree-id215 . -1237) (undo-tree-id216 . -1195) (undo-tree-id217 . -479) (undo-tree-id218 . -770) (undo-tree-id219 . -1237) (undo-tree-id220 . -1237) (undo-tree-id221 . -1358) (undo-tree-id222 . 1655) (undo-tree-id223 . -1358) (undo-tree-id224 . -1358) (undo-tree-id225 . -1358) (undo-tree-id226 . -1358) (undo-tree-id227 . -1358) (undo-tree-id228 . -1358) (undo-tree-id229 . -48) (undo-tree-id230 . -48) (undo-tree-id231 . -48) (undo-tree-id232 . -2358) (undo-tree-id233 . -2363) (undo-tree-id234 . -2340) (undo-tree-id235 . -2341) (undo-tree-id236 . -2647) (undo-tree-id237 . -2648) (undo-tree-id238 . -2672) (undo-tree-id239 . -2676) (undo-tree-id240 . -2362) (undo-tree-id241 . -2368) (undo-tree-id242 . -2363) (undo-tree-id243 . -2369) 49) nil (23764 39535 783915 482000) 0 nil]) ((nil rear-nonsticky nil 48 . 49) (#("
" 0 1 (fontified nil)) . -95) (48 . 96) 1) nil (23764 39535 783926 558000) 0 nil] [nil nil ((1 . 48)) ((#("use crate::user::Filter;
use serde_json::json;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 23 (fontified t face font-lock-type-face) 23 25 (fontified t) 25 28 (fontified t face font-lock-keyword-face) 28 29 (fontified t) 29 39 (fontified t face font-lock-constant-face) 39 47 (fontified t)) . 1) (undo-tree-id162 . -47) (undo-tree-id163 . -46) (undo-tree-id164 . -47) (undo-tree-id165 . -47)) (23764 39534 356708 301000) 0 nil]) ((#("use crate::user::Filter;
use serde_json::json;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 9 (fontified t face font-lock-keyword-face) 9 11 (fontified t) 11 15 (fontified t face font-lock-constant-face) 15 17 (fontified t) 17 23 (fontified t face font-lock-type-face) 23 25 (fontified t) 25 28 (fontified t face font-lock-keyword-face) 28 29 (fontified t) 29 39 (fontified t face font-lock-constant-face) 39 47 (fontified t)) . 1312) (undo-tree-id152 . -42) (undo-tree-id153 . -47) (undo-tree-id154 . -17) (undo-tree-id155 . -42) (undo-tree-id156 . -17) (undo-tree-id157 . -47) (undo-tree-id158 . -17) (undo-tree-id159 . -42) (undo-tree-id160 . -17) (undo-tree-id161 . -42) 1329 (t 23764 12366 952543 793000)) nil (23764 39534 362227 746000) 0 nil]) ((#("let result = " 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 10 (fontified t face font-lock-variable-name-face) 10 13 (fontified t)) . 1637) (undo-tree-id146 . -1)) nil (23764 12366 940044 555000) 0 nil]) ((#(";" 0 1 (fontified t)) . -3018) (undo-tree-id147 . -1) 3019) nil (23764 12366 940054 625000) 0 nil]) ((#("        result
" 0 14 (fontified t) 14 15 (fontified t)) . 3020) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) 3028 (t 23764 12251 472778 673000)) nil (23764 12366 940065 723000) 0 nil]) ((#("use std::time::Instant;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 13 (fontified t face font-lock-constant-face) 13 15 (fontified t) 15 22 (fontified t face font-lock-type-face) 22 24 (fontified t)) . 212)) nil (23764 12251 466923 871000) 0 nil]) ((#("use std::collections::HashMap;
" 0 3 (fontified t face font-lock-keyword-face) 3 4 (fontified t) 4 7 (fontified t face font-lock-constant-face) 7 9 (fontified t) 9 20 (fontified t face font-lock-constant-face) 20 22 (fontified t) 22 29 (fontified t face font-lock-type-face) 29 31 (fontified t)) . 183) (t 23764 11239 746529 487000)) nil (23764 12251 466930 811000) 0 nil]) ((1 . 3098) (#("//! Manage all existing Redis PubSub connection
use crate::receiver::Receiver;
use crate::user::User;
use futures::stream::Stream;
use futures::{Async, Poll};
use serde_json::Value;
use std::collections::HashMap;
use std::sync::{Arc, Mutex};
use std::time::Instant;
use tokio::io::Error;
use uuid::Uuid;

/// Struct for manageing all Redis streams
#[derive(Clone, Debug)]
pub struct StreamManager {
    receiver: Arc<Mutex<Receiver>>,
    id: uuid::Uuid,
    current_user: Option<User>,
}
impl StreamManager {
    pub fn new(reciever: Receiver) -> Self {
        StreamManager {
            receiver: Arc::new(Mutex::new(reciever)),
            id: Uuid::new_v4(),
            current_user: None,
        }
    }

    /// Clone the StreamManager with a new unique id
    pub fn new_copy(&self) -> Self {
        let id = Uuid::new_v4();
        StreamManager { id, ..self.clone() }
    }

    /// Subscribe to a channel if not already subscribed
    ///
    ///
    /// `.add()` also unsubscribes from any channels that no longer have clients
    pub fn add(&mut self, timeline: &str, _user: &User) {
        let mut receiver = self.receiver.lock().expect(\"No panic in other threads\");
        receiver.set_manager_id(self.id);
        receiver.subscribe(timeline);
    }

    pub fn set_user(&mut self, user: User) {
        self.current_user = Some(user);
    }
}
use crate::user::Filter;
use serde_json::json;

impl Stream for StreamManager {
    type Item = Value;
    type Error = Error;

    fn poll(&mut self) -> Poll<Option<Self::Item>, Self::Error> {
        let mut receiver = self.receiver.lock().expect(\"No other thread panic\");
        receiver.set_manager_id(self.id);
        let result = match receiver.poll() {
            Ok(Async::Ready(Some(value))) => {
                let user = self.clone().current_user.expect(\"Previously set current user\");

                let user_langs = user.langs.clone();
                let copy = value.clone();
                let event = copy[\"event\"].as_str().expect(\"Redis string\");
                let copy = value.clone();
                let payload = copy[\"payload\"].to_string();
                let copy = value.clone();
                let toot_lang = copy[\"payload\"][\"language\"]
                    .as_str()
                    .expect(\"redis str\")
                    .to_string();

                match (&user.filter, user_langs) {
                    (Filter::Notification, _) if event != \"notification\" => Ok(Async::NotReady),
                    (Filter::Language, Some(ref langs)) if !langs.contains(&toot_lang) => {
                        Ok(Async::NotReady)
                    }

                    _ => Ok(Async::Ready(Some(json!(
                        {\"event\": event,
                         \"payload\": payload,}
                    )))),
                }
            }
            Ok(Async::Ready(None)) => Ok(Async::Ready(None)),
            Ok(Async::NotReady) => Ok(Async::NotReady),
            Err(e) => Err(e),
        };
        result
    }
}
" 0 48 (fontified t face font-lock-doc-face) 48 51 (fontified t face font-lock-keyword-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 59 (fontified t) 59 67 (fontified t face font-lock-constant-face) 67 69 (fontified t) 69 77 (fontified t face font-lock-type-face) 77 79 (fontified t) 79 82 (fontified t face font-lock-keyword-face) 82 83 (fontified t) 83 88 (fontified t face font-lock-keyword-face) 88 90 (fontified t) 90 94 (fontified t face font-lock-constant-face) 94 96 (fontified t) 96 100 (fontified t face font-lock-type-face) 100 102 (fontified t) 102 105 (fontified t face font-lock-keyword-face) 105 106 (fontified t) 106 113 (fontified t face font-lock-constant-face) 113 115 (fontified t) 115 121 (fontified t face font-lock-constant-face) 121 123 (fontified t) 123 129 (fontified t face font-lock-type-face) 129 131 (fontified t) 131 134 (fontified t face font-lock-keyword-face) 134 135 (fontified t) 135 142 (fontified t face font-lock-constant-face) 142 145 (fontified t) 145 150 (fontified t face font-lock-type-face) 150 152 (fontified t) 152 156 (fontified t face font-lock-type-face) 156 159 (fontified t) 159 162 (fontified t face font-lock-keyword-face) 162 163 (fontified t) 163 173 (fontified t face font-lock-constant-face) 173 175 (fontified t) 175 180 (fontified t face font-lock-type-face) 180 182 (fontified t) 182 185 (fontified t face font-lock-keyword-face) 185 186 (fontified t) 186 189 (fontified t face font-lock-constant-face) 189 191 (fontified t) 191 202 (fontified t face font-lock-constant-face) 202 204 (fontified t) 204 211 (fontified t face font-lock-type-face) 211 213 (fontified t) 213 216 (fontified t face font-lock-keyword-face) 216 217 (fontified t) 217 220 (fontified t face font-lock-constant-face) 220 222 (fontified t) 222 226 (fontified t face font-lock-constant-face) 226 229 (fontified t) 229 232 (fontified t face font-lock-type-face) 232 234 (fontified t) 234 239 (fontified t face font-lock-type-face) 239 242 (fontified t) 242 245 (fontified t face font-lock-keyword-face) 245 246 (fontified t) 246 249 (fontified t face font-lock-constant-face) 249 251 (fontified t) 251 255 (fontified t face font-lock-constant-face) 255 257 (fontified t) 257 264 (fontified t face font-lock-type-face) 264 266 (fontified t) 266 269 (fontified t face font-lock-keyword-face) 269 270 (fontified t) 270 275 (fontified t face font-lock-constant-face) 275 277 (fontified t) 277 279 (fontified t face font-lock-constant-face) 279 281 (fontified t) 281 286 (fontified t face font-lock-type-face) 286 288 (fontified t) 288 291 (fontified t face font-lock-keyword-face) 291 292 (fontified t) 292 296 (fontified t face font-lock-constant-face) 296 298 (fontified t) 298 302 (fontified t face font-lock-type-face) 302 305 (fontified t) 305 348 (fontified t face font-lock-doc-face) 348 371 (fontified t face font-lock-preprocessor-face) 371 372 (fontified t) 372 375 (fontified t face font-lock-keyword-face) 375 376 (fontified t) 376 382 (fontified t face font-lock-keyword-face) 382 383 (fontified t) 383 396 (fontified t face font-lock-type-face) 396 403 (fontified t) 403 411 (fontified t face font-lock-variable-name-face) 411 413 (fontified t) 413 416 (fontified t face font-lock-type-face) 416 417 (fontified t) 417 422 (fontified t face font-lock-type-face) 422 423 (fontified t) 423 431 (fontified t face font-lock-type-face) 431 439 (fontified t) 439 441 (fontified t face font-lock-variable-name-face) 441 443 (fontified t) 443 447 (fontified t face font-lock-constant-face) 447 449 (fontified t) 449 453 (fontified t face font-lock-type-face) 453 459 (fontified t) 459 471 (fontified t face font-lock-variable-name-face) 471 473 (fontified t) 473 479 (fontified t face font-lock-type-face) 479 480 (fontified t) 480 484 (fontified t face font-lock-type-face) 484 489 (fontified t) 489 493 (fontified t face font-lock-keyword-face) 493 494 (fontified t) 494 500 (fontified t face font-lock-type-face) 500 507 (fontified t face font-lock-type-face) 507 510 (fontified t) 510 514 (fontified t) 514 517 (fontified t face font-lock-keyword-face) 517 518 (fontified t) 518 520 (fontified t face font-lock-keyword-face) 520 521 (fontified t) 521 524 (fontified t face font-lock-function-name-face) 524 525 (fontified t) 525 533 (fontified t face font-lock-variable-name-face) 533 535 (fontified t) 535 543 (fontified t face font-lock-type-face) 543 546 (fontified t) 546 547 (fontified t syntax-table #1#) 547 548 (fontified t) 548 552 (fontified t face font-lock-type-face) 552 563 (fontified t) 563 576 (fontified t face font-lock-type-face) 576 591 (fontified t) 591 599 (fontified t face font-lock-variable-name-face) 599 601 (fontified t) 601 604 (fontified t face font-lock-type-face) 604 610 (fontified t) 610 615 (fontified t face font-lock-type-face) 615 645 (fontified t) 645 647 (fontified t face font-lock-variable-name-face) 647 649 (fontified t) 649 653 (fontified t face font-lock-type-face) 653 677 (fontified t) 677 689 (fontified t face font-lock-variable-name-face) 689 691 (fontified t) 691 695 (fontified t face font-lock-type-face) 695 718 (fontified t) 718 767 (fontified t face font-lock-doc-face) 767 771 (fontified t) 771 774 (fontified t face font-lock-keyword-face) 774 775 (fontified t) 775 777 (fontified t face font-lock-keyword-face) 777 778 (fontified t) 778 786 (fontified t face font-lock-function-name-face) 786 788 (fontified t) 788 792 (fontified t face font-lock-keyword-face) 792 795 (fontified t) 795 796 (fontified t syntax-table #1#) 796 797 (fontified t) 797 801 (fontified t face font-lock-type-face) 801 812 (fontified t) 812 815 (fontified t face font-lock-keyword-face) 815 816 (fontified t) 816 818 (fontified t face font-lock-variable-name-face) 818 821 (fontified t) 821 825 (fontified t face font-lock-type-face) 825 845 (fontified t) 845 858 (fontified t face font-lock-type-face) 858 867 (fontified t) 867 871 (fontified t face font-lock-keyword-face) 871 893 (fontified t) 893 946 (fontified t face font-lock-doc-face) 946 950 (fontified t) 950 954 (fontified t face font-lock-doc-face) 954 958 (fontified t) 958 962 (fontified t face font-lock-doc-face) 962 966 (fontified t) 966 1010 (fontified t face font-lock-doc-face) 1010 1043 (fontified t face font-lock-doc-face) 1043 1047 (fontified t) 1047 1050 (fontified t face font-lock-keyword-face) 1050 1051 (fontified t) 1051 1053 (fontified t face font-lock-keyword-face) 1053 1054 (fontified t) 1054 1057 (fontified t face font-lock-function-name-face) 1057 1059 (fontified t) 1059 1062 (fontified t face font-lock-keyword-face) 1062 1063 (fontified t) 1063 1067 (fontified t face font-lock-keyword-face) 1067 1069 (fontified t) 1069 1077 (fontified t face font-lock-variable-name-face) 1077 1080 (fontified t) 1080 1083 (fontified t face font-lock-type-face) 1083 1085 (fontified t) 1085 1090 (fontified t face font-lock-variable-name-face) 1090 1093 (fontified t) 1093 1097 (fontified t face font-lock-type-face) 1097 1101 (fontified t) 1101 1109 (fontified t) 1109 1112 (fontified t face font-lock-keyword-face) 1112 1113 (fontified t) 1113 1116 (fontified t face font-lock-keyword-face) 1116 1117 (fontified t) 1117 1125 (fontified t face font-lock-variable-name-face) 1125 1128 (fontified t) 1128 1132 (fontified t face font-lock-keyword-face) 1132 1149 (fontified t) 1149 1155 (fontified t) 1155 1156 (fontified t) 1156 1173 (fontified t face font-lock-string-face) 1173 1174 (fontified t face font-lock-string-face) 1174 1177 (fontified t face font-lock-string-face) 1177 1178 (fontified t face font-lock-string-face) 1178 1183 (fontified t face font-lock-string-face) 1183 1185 (fontified t) 1185 1186 (fontified t) 1186 1194 (fontified t) 1194 1218 (fontified t) 1218 1222 (fontified t face font-lock-keyword-face) 1222 1228 (fontified t) 1228 1277 (fontified t) 1277 1280 (fontified t face font-lock-keyword-face) 1280 1281 (fontified t) 1281 1283 (fontified t face font-lock-keyword-face) 1283 1284 (fontified t) 1284 1292 (fontified t face font-lock-function-name-face) 1292 1294 (fontified t) 1294 1297 (fontified t face font-lock-keyword-face) 1297 1298 (fontified t) 1298 1302 (fontified t face font-lock-keyword-face) 1302 1304 (fontified t) 1304 1308 (fontified t face font-lock-variable-name-face) 1308 1310 (fontified t) 1310 1314 (fontified t face font-lock-type-face) 1314 1326 (fontified t) 1326 1330 (fontified t face font-lock-keyword-face) 1330 1346 (fontified t) 1346 1350 (fontified t face font-lock-type-face) 1350 1366 (fontified t) 1366 1369 (fontified t face font-lock-keyword-face) 1369 1370 (fontified t) 1370 1375 (fontified t face font-lock-keyword-face) 1375 1377 (fontified t) 1377 1381 (fontified t face font-lock-constant-face) 1381 1383 (fontified t) 1383 1389 (fontified t face font-lock-type-face) 1389 1391 (fontified t) 1391 1394 (fontified t face font-lock-keyword-face) 1394 1395 (fontified t) 1395 1405 (fontified t face font-lock-constant-face) 1405 1414 (fontified t) 1414 1418 (fontified t face font-lock-keyword-face) 1418 1419 (fontified t) 1419 1425 (fontified t face font-lock-type-face) 1425 1426 (fontified t) 1426 1429 (fontified t face font-lock-keyword-face) 1429 1430 (fontified t) 1430 1443 (fontified t face font-lock-type-face) 1443 1450 (fontified t) 1450 1454 (fontified t face font-lock-keyword-face) 1454 1455 (fontified t) 1455 1459 (fontified t face font-lock-type-face) 1459 1462 (fontified t) 1462 1467 (fontified t face font-lock-type-face) 1467 1473 (fontified t) 1473 1477 (fontified t face font-lock-keyword-face) 1477 1478 (fontified t) 1478 1483 (fontified t face font-lock-type-face) 1483 1486 (fontified t) 1486 1491 (fontified t face font-lock-type-face) 1491 1498 (fontified t) 1498 1500 (fontified t face font-lock-keyword-face) 1500 1501 (fontified t) 1501 1505 (fontified t face font-lock-function-name-face) 1505 1507 (fontified t) 1507 1510 (fontified t face font-lock-keyword-face) 1510 1511 (fontified t) 1511 1515 (fontified t face font-lock-keyword-face) 1515 1518 (fontified t) 1518 1519 (syntax-table #1# fontified t) 1519 1520 (fontified t) 1520 1524 (fontified t face font-lock-type-face) 1524 1525 (fontified t) 1525 1531 (fontified t face font-lock-type-face) 1531 1532 (fontified t) 1532 1536 (fontified t face font-lock-type-face) 1536 1538 (fontified t) 1538 1542 (fontified t face font-lock-type-face) 1542 1543 (fontified t) 1543 1545 (fontified t) 1545 1549 (fontified t face font-lock-type-face) 1549 1551 (fontified t) 1551 1556 (fontified t face font-lock-type-face) 1556 1557 (fontified t) 1557 1568 (fontified t) 1568 1570 (fontified t face font-lock-keyword-face) 1570 1571 (fontified t face font-lock-keyword-face) 1571 1572 (fontified t) 1572 1575 (fontified t face font-lock-keyword-face) 1575 1576 (fontified t) 1576 1584 (fontified t face font-lock-variable-name-face) 1584 1587 (fontified t) 1587 1591 (fontified t face font-lock-keyword-face) 1591 1615 (fontified t) 1615 1638 (fontified t face font-lock-string-face) 1638 1641 (fontified t) 1641 1673 (fontified t) 1673 1677 (fontified t face font-lock-keyword-face) 1677 1678 (fontified t) 1678 1683 (fontified t) 1683 1686 (fontified t) 1686 1691 (fontified t) 1691 1694 (face font-lock-keyword-face fontified t) 1694 1695 (fontified t) 1695 1701 (face font-lock-variable-name-face fontified t) 1701 1704 (fontified t) 1704 1709 (face font-lock-keyword-face fontified t) 1709 1728 (fontified t) 1728 1740 (fontified t) 1740 1742 (fontified t face font-lock-type-face) 1742 1743 (fontified t) 1743 1748 (fontified t face font-lock-type-face) 1748 1750 (fontified t) 1750 1755 (fontified t face font-lock-type-face) 1755 1756 (fontified t) 1756 1760 (fontified t face font-lock-type-face) 1760 1771 (fontified t) 1771 1772 (fontified t syntax-table #1#) 1772 1775 (fontified t) 1775 1791 (fontified t) 1791 1794 (fontified t face font-lock-keyword-face) 1794 1795 (fontified t) 1795 1799 (fontified t face font-lock-variable-name-face) 1799 1802 (fontified t) 1802 1806 (fontified t face font-lock-keyword-face) 1806 1835 (fontified t) 1835 1837 (fontified t face font-lock-string-face) 1837 1838 (fontified t face font-lock-string-face) 1838 1853 (fontified t face font-lock-string-face) 1853 1854 (fontified t face font-lock-string-face) 1854 1855 (fontified t face font-lock-string-face) 1855 1862 (fontified t face font-lock-string-face) 1862 1863 (fontified t syntax-table #2# face font-lock-string-face) 1863 1864 (fontified t face font-lock-string-face) 1864 1867 (fontified t) 1867 1884 (fontified t) 1884 1887 (fontified t face font-lock-keyword-face) 1887 1888 (fontified t) 1888 1898 (fontified t face font-lock-variable-name-face) 1898 1937 (fontified t) 1937 1940 (fontified t face font-lock-keyword-face) 1940 1941 (fontified t) 1941 1945 (fontified t face font-lock-variable-name-face) 1945 1963 (fontified t) 1963 1979 (fontified t) 1979 1982 (fontified t face font-lock-keyword-face) 1982 1983 (fontified t) 1983 1988 (fontified t face font-lock-variable-name-face) 1988 1996 (fontified t) 1996 2003 (fontified t face font-lock-string-face) 2003 2020 (fontified t) 2020 2021 (fontified t) 2021 2030 (fontified t face font-lock-string-face) 2030 2031 (fontified t face font-lock-string-face) 2031 2035 (fontified t face font-lock-string-face) 2035 2038 (fontified t) 2038 2054 (fontified t) 2054 2057 (fontified t face font-lock-keyword-face) 2057 2058 (fontified t) 2058 2062 (fontified t face font-lock-variable-name-face) 2062 2096 (fontified t) 2096 2099 (fontified t face font-lock-keyword-face) 2099 2100 (fontified t) 2100 2107 (fontified t face font-lock-variable-name-face) 2107 2115 (fontified t) 2115 2124 (fontified t face font-lock-string-face) 2124 2155 (fontified t) 2155 2158 (fontified t face font-lock-keyword-face) 2158 2159 (fontified t) 2159 2163 (fontified t face font-lock-variable-name-face) 2163 2197 (fontified t) 2197 2200 (fontified t face font-lock-keyword-face) 2200 2201 (fontified t) 2201 2210 (fontified t face font-lock-variable-name-face) 2210 2218 (fontified t) 2218 2227 (fontified t face font-lock-string-face) 2227 2229 (fontified t) 2229 2239 (fontified t face font-lock-string-face) 2239 2271 (fontified t) 2271 2299 (fontified t) 2299 2308 (fontified t face font-lock-string-face) 2308 2309 (syntax-table #2# fontified t face font-lock-string-face) 2309 2310 (fontified t face font-lock-string-face) 2310 2363 (fontified t) 2363 2368 (fontified t face font-lock-keyword-face) 2368 2381 (fontified t) 2381 2398 (fontified t) 2398 2419 (fontified t) 2419 2425 (fontified t face font-lock-type-face) 2425 2427 (fontified t) 2427 2439 (fontified t face font-lock-type-face) 2439 2444 (fontified t) 2444 2446 (fontified t face font-lock-keyword-face) 2446 2456 (fontified t) 2456 2457 (fontified t face font-lock-string-face) 2457 2470 (fontified t face font-lock-string-face) 2470 2472 (fontified t) 2472 2473 (syntax-table #1# fontified t) 2473 2474 (fontified t) 2474 2476 (fontified t face font-lock-type-face) 2476 2477 (fontified t) 2477 2482 (fontified t face font-lock-type-face) 2482 2483 (fontified t) 2483 2484 (fontified t) 2484 2492 (fontified t face font-lock-type-face) 2492 2495 (fontified t) 2495 2516 (fontified t) 2516 2522 (fontified t face font-lock-type-face) 2522 2524 (fontified t) 2524 2532 (fontified t face font-lock-type-face) 2532 2534 (fontified t) 2534 2538 (fontified t face font-lock-type-face) 2538 2539 (fontified t) 2539 2542 (face font-lock-keyword-face fontified t) 2542 2543 (fontified t) 2543 2548 (face font-lock-variable-name-face fontified t) 2548 2551 (fontified t) 2551 2553 (face font-lock-keyword-face fontified t) 2553 2583 (fontified t) 2583 2584 (syntax-table #1# fontified t) 2584 2587 (fontified t) 2611 2613 (face font-lock-type-face) 2614 2619 (face font-lock-type-face) 2621 2629 (face font-lock-type-face) 2677 2678 (syntax-table #1#) 2679 2681 (face font-lock-type-face) 2682 2687 (face font-lock-type-face) 2689 2694 (face font-lock-type-face) 2695 2699 (face font-lock-type-face) 2700 2705 (face font-lock-preprocessor-face) 2732 2739 (face font-lock-string-face) 2773 2782 (face font-lock-string-face) 2888 2889 (syntax-table #1#) 2947 2948 (syntax-table #1#) 2990 2991 (syntax-table #1#)) . 1) (undo-tree-id31 . -1194) (undo-tree-id32 . -1194) (undo-tree-id33 . -1194) (undo-tree-id34 . 1000) (undo-tree-id35 . -1828) (undo-tree-id36 . -1828) (undo-tree-id37 . -2014) (undo-tree-id38 . -2014) (undo-tree-id39 . -2014) (undo-tree-id40 . -2014) (undo-tree-id41 . -2014) (undo-tree-id42 . -2020) (undo-tree-id43 . -2020) (undo-tree-id44 . -2025) (undo-tree-id45 . -2025) (undo-tree-id46 . -665) (undo-tree-id47 . -2026) (undo-tree-id48 . -2025) (undo-tree-id49 . -665) (undo-tree-id50 . -2026) (undo-tree-id51 . -665) (undo-tree-id52 . -2026) (undo-tree-id53 . -2022) (undo-tree-id54 . -2028) (undo-tree-id55 . -2027) (undo-tree-id56 . -665) (undo-tree-id57 . -2029) (undo-tree-id58 . -2028) (undo-tree-id59 . -665) (undo-tree-id60 . -2030) (undo-tree-id61 . -2029) (undo-tree-id62 . -665) (undo-tree-id63 . -2031) (undo-tree-id64 . -2030) (undo-tree-id65 . -665) (undo-tree-id66 . -2032) (undo-tree-id67 . -2031) (undo-tree-id68 . -665) (undo-tree-id69 . -2033) (undo-tree-id70 . -2032) (undo-tree-id71 . -665) (undo-tree-id72 . -2034) (undo-tree-id73 . -2033) (undo-tree-id74 . -665) (undo-tree-id75 . -2033) (undo-tree-id76 . -2033) (undo-tree-id77 . -665) (undo-tree-id78 . -2032) (undo-tree-id79 . -2033) (undo-tree-id80 . -665) (undo-tree-id81 . -2032) (undo-tree-id82 . -2032) (undo-tree-id83 . -665) (undo-tree-id84 . -2031) (undo-tree-id85 . -2032) (undo-tree-id86 . -665) (undo-tree-id87 . -2030) (undo-tree-id88 . -2031) (undo-tree-id89 . -665) (undo-tree-id90 . -2029) (undo-tree-id91 . -2030) (undo-tree-id92 . -665) (undo-tree-id93 . -2028) (undo-tree-id94 . -2029) (undo-tree-id95 . -665) (undo-tree-id96 . -2027) (undo-tree-id97 . -2028) (undo-tree-id98 . -665) (undo-tree-id99 . -2026) (undo-tree-id100 . -2027) (undo-tree-id101 . -665) (undo-tree-id102 . -246) (undo-tree-id103 . -249) (undo-tree-id104 . -186) (undo-tree-id105 . -189) (undo-tree-id106 . -186) (undo-tree-id107 . -211) (undo-tree-id108 . -246) (undo-tree-id109 . -264) (undo-tree-id110 . -2025) (undo-tree-id111 . -2026) (undo-tree-id112 . -665) (undo-tree-id113 . -2024) (undo-tree-id114 . -2025) (undo-tree-id115 . -665) (undo-tree-id116 . -2023) (undo-tree-id117 . -2024) (undo-tree-id118 . -665) (undo-tree-id119 . -2022) (undo-tree-id120 . -2023) (undo-tree-id121 . -665) (undo-tree-id122 . -2021) (undo-tree-id123 . -2022) (undo-tree-id124 . -2021) (undo-tree-id125 . -2022) (undo-tree-id126 . 1013) (undo-tree-id127 . -2022) (undo-tree-id128 . 1012) (undo-tree-id129 . -2034) (undo-tree-id130 . 1000) (undo-tree-id131 . -2035) 2023) nil (23764 11239 695902 130000) 0 nil]) ((2023 . 2035) (2022 . 2024) (#("\"" 0 1 (fontified nil)) . -2022) (2022 . 2023)) nil (23764 11239 695915 176000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 2021) (undo-tree-id132 . -1) (undo-tree-id133 . -2) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 2022 (2021 . 2023) (#("(" 0 1 (fontified nil)) . -2021) (2015 . 2022) (#("unwrap" 0 6 (fontified t)) . 2015) (undo-tree-id136 . -2) (undo-tree-id137 . -3) (undo-tree-id138 . -1) (undo-tree-id139 . -2) (undo-tree-id140 . -1) (undo-tree-id141 . -6)) nil (23764 11239 695930 747000) 0 nil]) ((1858 . 1864) (1837 . 1858) (1836 . 1838) (#("\"" 0 1 (fontified nil)) . -1836) (1836 . 1837)) nil (23764 11239 695935 799000) 0 nil]) ((1829 . 1835) (#("unwrap" 0 6 (fontified t)) . 1829) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) 1830) nil (23764 11239 695941 87000) 0 nil]) ((1185 . 1186)) nil (23764 11239 695943 125000) 0 nil]) ((1170 . 1183) (1158 . 1170) (1157 . 1159) (#("\"" 0 1 (fontified nil)) . -1157) (1157 . 1158) (1156 . 1158) (#("(" 0 1 (fontified nil)) . -1156) (1156 . 1157) (1150 . 1156) (#("ex" 0 2 (fontified t)) . -1150) (undo-tree-id145 . -2) 1152 (1150 . 1152) (#("unwrap();" 0 9 (fontified t)) . 1150) (t 23764 8683 268529 816000)) nil (23764 11239 695949 773000) 0 nil] [nil nil ((nil rear-nonsticky nil 1175 . 1176) (nil fontified nil 1168 . 1176) (1168 . 1176) (t 23764 8683 268529 816000)) ((#("unwrap()" 0 7 (fontified nil) 7 8 (fontified nil rear-nonsticky nil)) . 1168) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (undo-tree-id5 . -7) (undo-tree-id6 . -7) (undo-tree-id7 . -7) (undo-tree-id8 . -7) (undo-tree-id9 . -6) (undo-tree-id10 . -7) (undo-tree-id11 . -7) (undo-tree-id12 . -7) (undo-tree-id13 . -7) (undo-tree-id14 . -7) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7) (undo-tree-id18 . -7) (undo-tree-id19 . -7) (undo-tree-id20 . -7) (undo-tree-id21 . -7) (undo-tree-id22 . -7) (undo-tree-id23 . -6) (undo-tree-id24 . -7) (undo-tree-id25 . 2) (undo-tree-id26 . -7) (undo-tree-id27 . 1) (undo-tree-id28 . -7) (undo-tree-id29 . 1) (undo-tree-id30 . -8) (nil rear-nonsticky t 1175 . 1176)) (23764 11170 170410 986000) 0 nil]) nil nil (23764 11170 172541 469000) 0 nil] #3# 55337 108 nil)