"4a79d693eef159a54389e9f29301e2d459b158d3"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((1658 . 1659)) nil (23701 44285 151407 160000) 0 nil]) ((#("	    // Record wher
" 0 5 (fontified t) 5 6 (fontified t face font-lock-comment-delimiter-face) 6 8 (fontified t face font-lock-comment-delimiter-face) 8 19 (fontified t face font-lock-comment-face) 19 20 (fontified t face font-lock-comment-face)) . 1037) (undo-tree-id209 . -18) 1055) nil (23701 44285 151422 985000) 0 nil]) ((1022 . 1028) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1022) (undo-tree-id210 . -1) 1023 (1002 . 1023) (#("p" 0 1 (fontified t)) . -1002) (undo-tree-id211 . -1) 1003 (1002 . 1003) (999 . 1002) 990) nil (23701 44285 151432 358000) 0 nil]) ((999 . 1005) (998 . 1000) (#("{" 0 1 (fontified nil)) . -998) (992 . 999) (#("
" 0 1 (fontified t)) . -992) (undo-tree-id212 . -1) (#("	" 0 1 (fontified t)) . -993) (undo-tree-id213 . -1) (#(" " 0 1 (fontified t)) . -994) (undo-tree-id214 . -1) (#(" " 0 1 (fontified t)) . -995) (undo-tree-id215 . -1) (#(" " 0 1 (fontified t)) . -996) (undo-tree-id216 . -1) (#(" " 0 1 (fontified t)) . -997) (undo-tree-id217 . -1) (#("e" 0 1 (fontified t)) . -998) (undo-tree-id218 . -1) 999 (998 . 999) (992 . 998) 991) nil (23701 44285 151449 299000) 0 nil]) ((999 . 1013) (994 . 999) (#("	    " 0 5 (fontified nil)) . 993) (undo-tree-id219 . -5) (998 . 999) (992 . 998) 991) nil (23701 44285 151458 487000) 0 nil]) ((975 . 984) (974 . 976) (#("(" 0 1 (fontified nil)) . -974) (971 . 975) (#("d" 0 1 (fontified t)) . -971) (undo-tree-id220 . -1) 972 (968 . 972) (#("r" 0 1 (fontified t)) . -968) (undo-tree-id221 . -1) 969 (966 . 969) (961 . 966) (958 . 961) 956) nil (23701 44285 151468 465000) 0 nil]) ((956 . 957)) nil (23701 44285 151471 852000) 0 nil]) ((#(" " 0 1 (fontified t)) . -955) (undo-tree-id222 . -1) 956 (955 . 956) (948 . 955) (#("colRi" 0 5 (fontified t)) . -948) (undo-tree-id223 . -5) 953 (941 . 953) (940 . 942) (#("(" 0 1 (fontified nil)) . -940) (940 . 941)) nil (23701 44285 151479 75000) 0 nil]) ((941 . 947) (940 . 942) (#("{" 0 1 (fontified nil)) . -940) (936 . 941) (931 . 936)) nil (23701 44285 151484 15000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 924) (921 . 924) (914 . 921) (913 . 915) (#("(" 0 1 (fontified nil)) . -913) (913 . 914) (900 . 913) (#("addW" 0 4 (fontified t)) . -900) (undo-tree-id224 . -4) 904 (900 . 904) (897 . 900) 875) nil (23701 44285 151491 557000) 0 nil]) ((897 . 903) (896 . 898) (#("{" 0 1 (fontified nil)) . -896) (895 . 897) (#(")" 0 1 (fontified nil)) . 895) (894 . 895) (#(" " 0 1 (fontified nil)) . -894) (894 . 895) (#(")" 0 1 (fontified nil)) . -894) (891 . 895) (#("i" 0 1 (fontified t)) . -891) (undo-tree-id225 . -1) 892 (887 . 892) (#("C" 0 1 (fontified t)) . -887) (undo-tree-id226 . -1) (#("l" 0 1 (fontified t)) . -888) (undo-tree-id227 . -1) 889 (887 . 889) (885 . 887) (#(" " 0 1 (fontified t)) . -885) (undo-tree-id228 . -1) 886 (880 . 886) (879 . 881) (#("(" 0 1 (fontified nil)) . -879) (876 . 880) (#("I" 0 1 (fontified t)) . -876) (undo-tree-id229 . -1) 877 (876 . 877) (#("c" 0 1 (fontified t)) . -876) (undo-tree-id230 . -1) (#("o" 0 1 (fontified t)) . -877) (undo-tree-id231 . -1) 878 (876 . 878) (871 . 876) (#("	    " 0 5 (fontified nil)) . 870) (undo-tree-id232 . -5) (875 . 876) (869 . 875) 865) nil (23701 44285 151515 939000) 0 nil]) ((865 . 866) (#("-" 0 1 (fontified t)) . 865)) nil (23701 44285 151522 762000) 0 nil]) ((851 . 852) (#("h" 0 1 (fontified t face font-lock-variable-name-face)) . -851) (undo-tree-id233 . -1) 852 (848 . 852) (#("Left" 0 4 (fontified t face font-lock-variable-name-face)) . 848)) nil (23701 44285 151526 724000) 0 nil]) ((nil rear-nonsticky nil 838 . 839) (#("
" 0 1 (fontified nil)) . -869) (833 . 870) 831) nil (23701 44285 151529 902000) 0 nil]) ((824 . 832) (823 . 824) (822 . 824) (#("[" 0 1 (fontified nil)) . -822) (803 . 823) (797 . 803) 775) nil (23701 44285 151533 878000) 0 nil]) ((nil rear-nonsticky nil 774 . 775) (#("
" 0 1 (fontified nil)) . -797) (769 . 798) 719) nil (23701 44285 151536 831000) 0 nil]) ((#("	    const col = arr[index]
" 0 5 (fontified t) 5 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 14 (fontified t face font-lock-variable-name-face) 14 20 (fontified t) 20 21 (fontified t) 21 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t)) . 714) (undo-tree-id234 . 2) (undo-tree-id235 . -25) 739) nil (23701 44285 151541 598000) 0 nil]) ((735 . 740) (734 . 736) (#("[" 0 1 (fontified nil)) . -734) (731 . 735) (725 . 731) (#("=" 0 1 (fontified t)) . -725) (undo-tree-id236 . -1) (#(" " 0 1 (fontified t)) . -726) (undo-tree-id237 . -1) 727 (721 . 727) (#("s" 0 1 (fontified t)) . -721) (undo-tree-id238 . -1) (#("t" 0 1 (fontified t)) . -722) (undo-tree-id239 . -1) 723 (720 . 723) (#("o" 0 1 (fontified t)) . -720) (undo-tree-id240 . -1) 721 (719 . 721) (713 . 719) 683) nil (23701 44285 151554 155000) 0 nil]) ((#("	    " 0 5 (fontified t)) . -770) (undo-tree-id241 . -5) 775 (769 . 775) 719) nil (23701 44285 151561 322000) 0 nil]) ((#("	    
" 0 5 (fontified t) 5 6 (fontified t)) . 770) (undo-tree-id242 . -4) 774) nil (23701 44285 151564 949000) 0 nil]) ((762 . 769) (#("{" 0 1 (fontified nil)) . -762) (undo-tree-id243 . -1) (#("}" 0 1 (fontified t)) . 763) (#("
" 0 1 (fontified t)) . -763) (undo-tree-id244 . -1) (#("	" 0 1 (fontified t)) . -764) (undo-tree-id245 . -1) (#(" " 0 1 (fontified t)) . -765) (undo-tree-id246 . -1) (#(" " 0 1 (fontified t)) . -766) (undo-tree-id247 . -1) (#(" " 0 1 (fontified t)) . -767) (undo-tree-id248 . -1) (#(" " 0 1 (fontified t)) . -768) (undo-tree-id249 . -1) 769 (763 . 769) (762 . 764) (#("{" 0 1 (fontified nil)) . -762) (760 . 763)) nil (23701 44285 151577 786000) 0 nil]) ((754 . 755)) nil (23701 44285 151582 492000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 759) (758 . 759) (757 . 759) (#("(" 0 1 (fontified nil)) . -757) (754 . 758) (#("n" 0 1 (fontified t)) . -754) (undo-tree-id250 . -1) (#("t" 0 1 (fontified t)) . -755) (undo-tree-id251 . -1) 756 (748 . 756) (740 . 748) (#("e" 0 1 (fontified t)) . -740) (undo-tree-id252 . -1) (#("x" 0 1 (fontified t)) . -741) (undo-tree-id253 . -1) 742 (734 . 742)) nil (23701 44285 151592 789000) 0 nil]) ((#(")" 0 1 (fontified t)) . 728)) nil (23701 44285 151596 729000) 0 nil]) ((#(" " 0 1 (fontified t)) . -735) (undo-tree-id254 . -1) 736 (733 . 736) (#("=" 0 1 (fontified t)) . -733) (undo-tree-id255 . -1) 734 (729 . 734) (#(")" 0 1 (fontified nil)) . 729) (728 . 729) (#(" " 0 1 (fontified nil)) . -728) (728 . 729) (#(")" 0 1 (fontified nil)) . -728) (726 . 729) (#("w" 0 1 (fontified t)) . -726) (undo-tree-id256 . -1) 727 (723 . 727) (722 . 724) (#("(" 0 1 (fontified nil)) . -722) (719 . 723) (713 . 719) 697) nil (23701 44285 151611 818000) 0 nil]) ((741 . 742) (#(")" 0 1 (fontified nil)) . 741) (739 . 741) (738 . 740) (#("(" 0 1 (fontified nil)) . -738) (738 . 739) (725 . 738) (#("add" 0 3 (fontified t)) . -725) (undo-tree-id257 . -3) 728 (725 . 728) (#("i" 0 1 (fontified t)) . -725) (undo-tree-id258 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -726) (undo-tree-id259 . -1) (#("d" 0 1 (fontified t)) . -727) (undo-tree-id260 . -1) (#("e" 0 1 (fontified t)) . -728) (undo-tree-id261 . -1) (#("x" 0 1 (fontified t)) . -729) (undo-tree-id262 . -1) 730 (725 . 730) (724 . 725) (#("	" 0 1 (fontified nil)) . 723) (undo-tree-id263 . -1) (724 . 725) (722 . 724) 721) nil (23701 44285 151632 309000) 0 nil]) ((#("`" 0 1 (fontified nil face font-lock-string-face)) . -719) (undo-tree-id264 . -1) (#("`" 0 1 (fontified t face font-lock-string-face)) . 720) (719 . 721) (#("`" 0 1 (fontified nil)) . -719) (719 . 720) (713 . 719) 708) nil (23701 44285 151641 456000) 0 nil]) ((700 . 704)) nil (23701 44285 151644 163000) 0 nil]) ((709 . 711) (708 . 710) (#("{" 0 1 (fontified nil)) . -708) (707 . 709) (#(")" 0 1 (fontified nil)) . 707) (706 . 707) (#(" " 0 1 (fontified nil)) . -706) (706 . 707) (#(")" 0 1 (fontified nil)) . -706) (701 . 707) (#("i" 0 1 (fontified t)) . -701) (undo-tree-id265 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -702) (undo-tree-id266 . -1) (#("d" 0 1 (fontified t)) . -703) (undo-tree-id267 . -1) 704 (701 . 704) (700 . 702) (#("(" 0 1 (fontified nil face font-lock-variable-name-face)) . -700) (697 . 701) (693 . 697) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -693) (undo-tree-id268 . -1) 694 (681 . 694) (#("if (i )" 0 2 (fontified t face font-lock-keyword-face) 2 3 (fontified t) 3 6 (fontified t) 6 7 (fontified t)) . 681) (undo-tree-id269 . 1)) nil (23701 44285 151660 318000) 0 nil]) ((#("[" 0 1 (fontified nil)) . -687) (undo-tree-id270 . -1) (#("]" 0 1 (fontified t)) . 688) (687 . 689) (#("[" 0 1 (fontified nil)) . -687) (685 . 688) (#("o" 0 1 (fontified t)) . -685) (undo-tree-id271 . -1) 686 (685 . 686) (684 . 686) (#("(" 0 1 (fontified nil)) . -684) (684 . 685) (#("I" 0 1 (fontified t)) . -684) (undo-tree-id272 . -1) 685 (684 . 685) (#("I" 0 1 (fontified t)) . -684) (undo-tree-id273 . -1) 685 (683 . 685) (681 . 683) (#("i" 0 1 (fontified t)) . -681) (undo-tree-id274 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -682) (undo-tree-id275 . -1) (#(" " 0 1 (fontified t)) . -683) (undo-tree-id276 . -1) (#("(" 0 1 (fontified nil)) . -684) (undo-tree-id277 . -1) (#(")" 0 1 (fontified t)) . 685) (684 . 686) (#("(" 0 1 (fontified nil)) . -684) (681 . 685) (679 . 681) 634) nil (23701 44285 151688 844000) 0 nil]) ((681 . 685) (#("	" 0 1 (fontified nil)) . 680) (680 . 681) (#("    " 0 4 (fontified nil)) . 680) (undo-tree-id278 . -4) (679 . 685) (678 . 680) (#("{" 0 1 (fontified nil)) . -678) (677 . 679)) nil (23701 44285 151699 313000) 0 nil]) ((671 . 675) (#("=" 0 1 (fontified t)) . -671) (undo-tree-id279 . -1) 672 (669 . 672) (#("t" 0 1 (fontified t)) . -669) (undo-tree-id280 . -1) 670 (669 . 670) (#(";" 0 1 (fontified t)) . -669) (undo-tree-id281 . -1) 670 (667 . 670) (#(" " 0 1 (fontified t)) . -667) (undo-tree-id282 . -1) (#("-" 0 1 (fontified t)) . -668) (undo-tree-id283 . -1) (#(" " 0 1 (fontified t)) . -669) (undo-tree-id284 . -1) (#("1" 0 1 (fontified t)) . -670) (undo-tree-id285 . -1) 671 (667 . 671) (#(")" 0 1 (fontified nil)) . 667) (666 . 667) (665 . 667) (#("(" 0 1 (fontified nil)) . -665) (661 . 666) (655 . 661) (#("1" 0 1 (fontified t)) . -655) (undo-tree-id286 . -1) 656 (649 . 656) (#(";" 0 1 (fontified t)) . -649) (undo-tree-id287 . -1) 650 (649 . 650)) nil (23701 44285 151721 759000) 0 nil]) ((640 . 650) (639 . 641) (#("(" 0 1 (fontified nil)) . -639) (635 . 640) (631 . 635) (631 . 632)) nil (23701 44285 151729 884000) 0 nil]) ((#("    arr.forEach((col, i) => {
	// add water to col
	const prevCol = arr[i - 1];
	if (precCol || col >= arr[i - 1])
    })
" 0 8 (fontified t) 8 15 (fontified t) 15 16 (fontified t) 16 23 (fontified t) 23 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t face font-lock-comment-delimiter-face) 32 34 (fontified t face font-lock-comment-delimiter-face) 34 50 (fontified t face font-lock-comment-face) 50 51 (fontified t face font-lock-comment-face) 51 52 (fontified t) 52 57 (fontified t face font-lock-keyword-face) 57 58 (fontified t) 58 65 (fontified t face font-lock-variable-name-face) 65 71 (fontified t) 71 77 (fontified t) 77 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 83 (fontified t face font-lock-keyword-face) 83 84 (fontified t) 84 106 (fontified t) 106 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 119 (fontified t) 119 120 (fontified t) 120 121 (fontified t) 121 122 (fontified t)) . 631) (undo-tree-id288 . -121) (undo-tree-id289 . 26) (undo-tree-id290 . -121) (undo-tree-id291 . -12) (undo-tree-id292 . -121) (undo-tree-id293 . -12) (undo-tree-id294 . -121) 752) nil (23701 44285 151739 893000) 0 nil]) ((#("!" 0 1 (fontified t)) . 716)) nil (23701 44285 151742 359000) 0 nil]) ((725 . 728) (#(":" 0 1 (fontified t)) . -725) (undo-tree-id295 . -1) 726 (725 . 726)) nil (23701 44285 151746 9000) 0 nil]) ((716 . 717)) nil (23701 44285 151748 300000) 0 nil]) ((723 . 724) (#(" " 0 1 (fontified t)) . -723) (undo-tree-id296 . -1) (#("|" 0 1 (fontified t)) . -724) (undo-tree-id297 . -1) 725 (719 . 725) (#("v" 0 1 (fontified t)) . -719) (undo-tree-id298 . -1) (#("C" 0 1 (fontified t)) . -720) (undo-tree-id299 . -1) 721 (716 . 721)) nil (23701 44285 151758 989000) 0 nil]) ((709 . 710)) nil (23701 44285 151762 209000) 0 nil]) ((703 . 708) (702 . 704) (#("[" 0 1 (fontified nil)) . -702) (693 . 703) (683 . 693) (#("l" 0 1 (fontified t)) . -683) (undo-tree-id300 . -1) 684 (683 . 684) (681 . 683) 665) nil (23701 44285 151787 148000) 0 nil]) ((#("a" 0 1 (fontified t)) . -687) (undo-tree-id301 . -1) (#("r" 0 1 (fontified t)) . -688) (undo-tree-id302 . -1) (#("r" 0 1 (fontified t)) . -689) (undo-tree-id303 . -1) 690 (689 . 690) (#("a" 0 1 (fontified t)) . -689) (undo-tree-id304 . -1) 690 (687 . 690)) nil (23701 44285 151797 483000) 0 nil]) ((#(" " 0 1 (fontified t)) . -704) (undo-tree-id305 . -1) (#("|" 0 1 (fontified t)) . -705) (undo-tree-id306 . -1) (#("|" 0 1 (fontified t)) . -706) (undo-tree-id307 . -1) 707 (704 . 707) (#("]" 0 1 (fontified nil)) . 704) (698 . 704) (697 . 699) (#("[" 0 1 (fontified nil)) . -697) (694 . 698) (#("c" 0 1 (fontified t)) . -694) (undo-tree-id308 . -1) 695 (692 . 695) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id309 . -1) 693 (691 . 693) (#("<" 0 1 (fontified t)) . -691) (undo-tree-id310 . -1) (#("=" 0 1 (fontified t)) . -692) (undo-tree-id311 . -1) 693 (692 . 693) (687 . 692) (686 . 688) (#("(" 0 1 (fontified nil)) . -686) (683 . 687) (681 . 683) 680) nil (23701 44285 151816 694000) 0 nil]) ((662 . 681) (660 . 662) 634) nil (23701 44285 151823 932000) 0 nil]) ((660 . 665) (659 . 661) (#("{" 0 1 (fontified nil)) . -659) (659 . 660) (#("[" 0 1 (fontified nil)) . -659) (undo-tree-id312 . -1) (#("]" 0 1 (fontified t)) . 660) (659 . 661) (#("[" 0 1 (fontified nil)) . -659) (659 . 660) (655 . 659) (#(")" 0 1 (fontified nil)) . 655) (654 . 655) (#(" " 0 1 (fontified nil)) . -654) (654 . 655) (#(")" 0 1 (fontified nil)) . -654) (648 . 655) (#("i" 0 1 (fontified t)) . -648) (undo-tree-id313 . -1) 649 (648 . 649) (647 . 649) (#("(" 0 1 (fontified nil)) . -647) (647 . 648) (646 . 648) (#("(" 0 1 (fontified nil)) . -646) (635 . 647) (630 . 635) 599) nil (23701 44285 151838 200000) 0 nil]) ((#("    let waterBlocks = 0;
    let leftMax = 0;
    let rightMax = 0;

    arr.forEach((col, i) => {
	if (col >)

    })

" 0 4 (fontified t) 4 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 19 (fontified t face font-lock-variable-name-face) 19 24 (fontified t) 24 25 (fontified t) 25 29 (fontified t) 29 32 (fontified t face font-lock-keyword-face) 32 33 (fontified t) 33 40 (fontified t face font-lock-variable-name-face) 40 44 (fontified t) 44 46 (fontified t) 46 50 (fontified t) 50 53 (fontified t face font-lock-keyword-face) 53 54 (fontified t) 54 62 (fontified t face font-lock-variable-name-face) 62 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t) 68 69 (fontified t) 69 77 (fontified t) 77 84 (fontified t) 84 85 (fontified t) 85 86 (fontified t) 86 97 (fontified t) 97 98 (fontified t) 98 99 (fontified t) 99 100 (fontified t) 100 102 (fontified t face font-lock-keyword-face) 102 103 (fontified t) 103 109 (fontified t) 109 110 (fontified t) 110 111 (fontified t) 111 112 (fontified t) 112 116 (fontified t) 116 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 120 (fontified t)) . 631) (undo-tree-id314 . -119) (undo-tree-id315 . -119) (undo-tree-id316 . -119) (undo-tree-id317 . -119) 750) nil (23701 44285 151847 938000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 940) (undo-tree-id318 . -1)) nil (23701 44285 151851 209000) 0 nil]) ((nil rear-nonsticky nil 940 . 941) (#("
" 0 1 (face font-lock-comment-face fontified nil)) . -975) (940 . 976)) nil (23701 44285 151853 817000) 0 nil]) ((877 . 886) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -877) (undo-tree-id319 . -1) 878 (877 . 878) (873 . 877) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -873) (undo-tree-id320 . -1) 874 (853 . 874) (#(" " 0 1 (fontified t face font-lock-string-face)) . -853) (undo-tree-id321 . -1) 854 (852 . 854) (#(" " 0 1 (fontified t)) . -852) (undo-tree-id322 . -1) 853 (852 . 853) (#(" " 0 1 (fontified nil face font-lock-comment-face)) . 851) (undo-tree-id323 . -1) (852 . 853) (851 . 852)) nil (23701 44285 151869 921000) 0 nil]) ((899 . 904) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -899) (undo-tree-id324 . -1) 900 (881 . 900) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -881) (undo-tree-id325 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -882) (undo-tree-id326 . -1) 883 (881 . 883) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -881) (undo-tree-id327 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -882) (undo-tree-id328 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -883) (undo-tree-id329 . -1) 884 (880 . 884) (#("," 0 1 (fontified t face font-lock-comment-face)) . -880) (undo-tree-id330 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -881) (undo-tree-id331 . -1) 882 (864 . 882) (858 . 864) (#("ahdd more water" 0 15 (fontified t face font-lock-comment-face)) . 858) (undo-tree-id332 . 13)) nil (23701 44285 151889 458000) 0 nil]) ((859 . 860)) nil (23701 44285 151895 164000) 0 nil]) ((850 . 851) (829 . 850) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -829) (undo-tree-id333 . -1) 830 (815 . 830) (805 . 815) (#("if it runs off, we're done" 0 26 (fontified t face font-lock-comment-face)) . 805)) nil (23701 44285 151900 581000) 0 nil]) ((791 . 800)) nil (23701 44285 151902 842000) 0 nil]) ((574 . 575) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 574) (574 . 575) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 574) (undo-tree-id334 . 1)) nil (23701 44285 151906 780000) 0 nil] [nil nil ((574 . 575)) ((#("w" 0 1 (fontified t face font-lock-comment-face)) . 574) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1)) (23701 10605 105079 272000) 0 nil]) ((583 . 584) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 583) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1)) nil (23701 10605 105209 599000) 0 nil] [nil nil ((#("w" 0 1 (fontified t face font-lock-comment-face)) . 583) (undo-tree-id183 . 1) (undo-tree-id184 . 1) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1)) ((583 . 584)) (23701 10596 508443 161000) 0 nil]) ((583 . 584) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 583) (undo-tree-id193 . 1)) nil (23701 10596 508661 199000) 0 nil]) ((574 . 575) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 574) (574 . 575) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 574) (574 . 575) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 574)) nil (23701 10596 508469 215000) 0 nil]) ((574 . 575)) nil (23701 10596 508474 771000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-face)) . 574)) nil (23701 10596 508478 78000) 0 nil]) ((580 . 581) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 580)) nil (23701 10596 508482 446000) 0 nil]) ((588 . 589) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 588)) nil (23701 10596 508487 5000) 0 nil]) ((553 . 560)) ((#("WWWWWWW" 0 7 (fontified t face font-lock-comment-face)) . 553) (undo-tree-id155 . 7) (undo-tree-id156 . 6) (undo-tree-id157 . 5) (undo-tree-id158 . 4) (undo-tree-id159 . 3) (undo-tree-id160 . 2) (undo-tree-id161 . 1) (undo-tree-id162 . 1) (undo-tree-id163 . 1) (undo-tree-id164 . 7) (undo-tree-id165 . -7) (undo-tree-id166 . 2) (undo-tree-id167 . 1) (undo-tree-id168 . 3) (undo-tree-id169 . 2) (undo-tree-id170 . 4) (undo-tree-id171 . 3) (undo-tree-id172 . 5) (undo-tree-id173 . 4) (undo-tree-id174 . 6) (undo-tree-id175 . 5) (undo-tree-id176 . 7) (undo-tree-id177 . 6) (undo-tree-id178 . 7) (undo-tree-id179 . 7) (undo-tree-id180 . 6) (undo-tree-id181 . 7) (undo-tree-id182 . 6)) (23701 10468 169596 802000) 0 nil]) ((557 . 563)) nil (23701 10467 179036 626000) 0 nil]) ((810 . 830) (#(" " 0 1 (fontified t)) . -810) (undo-tree-id148 . -1) (#(" " 0 1 (fontified t)) . -811) (undo-tree-id149 . -1) 812 (810 . 812) (809 . 810) (797 . 809) (782 . 797) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -782) (undo-tree-id150 . -1) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -783) (undo-tree-id151 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -784) (undo-tree-id152 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -785) (undo-tree-id153 . -1) 786 (779 . 786) (778 . 779) (776 . 778) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -776) (undo-tree-id154 . -1) 777 (768 . 777)) nil (23701 10467 178710 469000) 0 nil]) ((765 . 768)) nil (23701 10467 178723 216000) 0 nil]) ((764 . 771) (763 . 764) 762) nil (23701 10467 178728 372000) 0 nil]) ((563 . 564) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 563)) nil (23701 10467 178732 185000) 0 nil]) ((562 . 563) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10467 178736 963000) 0 nil]) ((570 . 571) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 570)) nil (23701 10467 178741 806000) 0 nil] [nil nil ((570 . 571) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 570) (undo-tree-id126 . 1) (undo-tree-id127 . 1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . 1) (undo-tree-id132 . 1) (undo-tree-id133 . 1) (undo-tree-id134 . 1)) ((570 . 571) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 570) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1)) (23701 10215 932739 293000) 0 nil]) ((575 . 576) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 575) (undo-tree-id135 . 1) (undo-tree-id136 . 1) (undo-tree-id137 . 1)) nil (23701 10215 933051 270000) 0 nil]) ((567 . 568) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 567) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1)) nil (23701 10215 932765 864000) 0 nil] [nil nil ((#("W" 0 1 (fontified t face font-lock-comment-face)) . 567) (undo-tree-id7 . 1)) ((567 . 568)) (23701 10206 972772 486000) 0 nil]) ((577 . 578)) nil (23701 10206 973792 385000) 0 nil]) ((569 . 570)) nil (23701 10206 972783 693000) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-comment-face)) . -562) (undo-tree-id8 . -1) (undo-tree-id9 . 1) 563 (561 . 563) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -561) (undo-tree-id10 . -1) (undo-tree-id11 . 1) 562 (561 . 562)) nil (23701 10206 972801 85000) 0 nil]) ((720 . 724) (#("l" 0 1 (fontified t)) . -720) (undo-tree-id12 . -1) 721 (719 . 721) (718 . 720) (#("(" 0 1 (fontified nil)) . -718) (716 . 719) (715 . 716) (713 . 715) 707) nil (23701 10206 972815 686000) 0 nil]) ((704 . 708)) nil (23701 10206 972820 786000) 0 nil]) ((#(")" 0 1 (fontified t)) . 701) (undo-tree-id13 . 1)) nil (23701 10206 972825 934000) 0 nil]) ((700 . 702) (#("(" 0 1 (fontified nil)) . -700) (700 . 701)) nil (23701 10206 972834 195000) 0 nil]) ((#("	" 0 1 (fontified t)) . -709) (undo-tree-id14 . -1) 710 (708 . 710) 687) nil (23701 10206 972841 301000) 0 nil]) ((708 . 713) (707 . 709) (#("{" 0 1 (fontified nil)) . -707) (706 . 708) (704 . 706) (#("+" 0 1 (fontified t)) . -704) (undo-tree-id15 . -1) 705 (700 . 705) (699 . 701) (#("(" 0 1 (fontified nil)) . -699) (688 . 700) (#("f" 0 1 (fontified t)) . -688) (undo-tree-id16 . -1) (#("o" 0 1 (fontified t)) . -689) (undo-tree-id17 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -690) (undo-tree-id18 . -1) 691 (688 . 691) (684 . 688) (#("    " 0 4 (fontified nil)) . 683) (undo-tree-id19 . -4) (687 . 688) (682 . 687) 680) nil (23701 10206 972872 632000) 0 nil]) ((677 . 681)) nil (23701 10206 972881 801000) 0 nil]) ((658 . 659) (#("9" 0 1 (fontified t)) . -658) (undo-tree-id20 . -1) 659 (655 . 659)) nil (23701 10206 972888 281000) 0 nil]) ((673 . 674) (661 . 673) (656 . 661) (655 . 656) (#("," 0 1 (fontified t)) . -655) (undo-tree-id21 . -1) (#("
" 0 1 (fontified t)) . -656) (undo-tree-id22 . -1) (#("	" 0 1 (fontified t)) . -657) (undo-tree-id23 . -1) 658 (656 . 658) (655 . 656) (#(" " 0 1 (fontified t)) . -655) (undo-tree-id24 . -1) 656 (648 . 656) (#("f" 0 1 (fontified t face font-lock-variable-name-face)) . -648) (undo-tree-id25 . -1) 649 (646 . 649) (644 . 646) (639 . 644) 633) nil (23701 10206 972915 752000) 0 nil]) ((633 . 634)) nil (23701 10206 972923 158000) 0 nil]) ((662 . 663) (652 . 662) (#("wate" 0 4 (fontified t)) . -652) (undo-tree-id26 . -4) 656 (655 . 656) (#("t" 0 1 (fontified t)) . -655) (undo-tree-id27 . -1) 656 (651 . 656) (645 . 651) (#("retu" 0 4 (fontified t)) . -645) (undo-tree-id28 . -4) 649 (647 . 649) (#("s" 0 1 (fontified t)) . -647) (undo-tree-id29 . -1) 648 (645 . 648) (641 . 645) (#("    " 0 4 (fontified nil)) . 640) (undo-tree-id30 . -4) (640 . 645) (#("    " 0 4 (fontified nil)) . 639) (undo-tree-id31 . -4) (638 . 644) (626 . 638) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -626) (undo-tree-id32 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -627) (undo-tree-id33 . -1) 628 (627 . 628) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -627) (undo-tree-id34 . -1) 628 (627 . 628) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -627) (undo-tree-id35 . -1) (#("r" 0 1 (fontified t face font-lock-variable-name-face)) . -628) (undo-tree-id36 . -1) 629 (627 . 629) (619 . 627) (614 . 619) 583) nil (23701 10206 972970 909000) 0 nil]) ((614 . 615) (613 . 615) (#("{" 0 1 (fontified nil)) . -613) (610 . 614) (#("-" 0 1 (fontified t)) . -610) (undo-tree-id37 . -1) 611 (609 . 611) (#(")" 0 1 (fontified nil)) . 609) (605 . 609) (604 . 606) (#("(" 0 1 (fontified nil face font-lock-variable-name-face)) . -604) (604 . 605) (589 . 604) (#("countWat" 0 8 (fontified t face font-lock-variable-name-face)) . -589) (undo-tree-id38 . -8) 597 (589 . 597)) nil (23701 10206 973000 497000) 0 nil]) ((#("*" 0 1 (fontified t)) . 581)) nil (23701 10206 973006 906000) 0 nil]) ((579 . 580)) nil (23701 10206 973010 131000) 0 nil]) ((583 . 589) (581 . 583) (579 . 581)) nil (23701 10206 973016 881000) 0 nil]) ((#("c" 0 1 (fontified t face font-lock-comment-face)) . -579) (undo-tree-id39 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -580) (undo-tree-id40 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -581) (undo-tree-id41 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -582) (undo-tree-id42 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -583) (undo-tree-id43 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -584) (undo-tree-id44 . -1) 585 (579 . 585)) nil (23701 10206 973038 967000) 0 nil]) ((586 . 587) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id45 . -1) 587 (586 . 587)) nil (23701 10206 973048 343000) 0 nil]) ((587 . 594) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -587) (undo-tree-id46 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -588) (undo-tree-id47 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -589) (undo-tree-id48 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -590) (undo-tree-id49 . -1) 591 (580 . 591)) nil (23701 10206 973063 582000) 0 nil]) ((562 . 563) (#("E" 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10206 973069 611000) 0 nil]) ((561 . 562) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 561)) nil (23701 10206 973075 664000) 0 nil]) ((809 . 819) (#("x" 0 1 (fontified t face font-lock-comment-face)) . -809) (undo-tree-id50 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -810) (undo-tree-id51 . -1) 811 (802 . 811) (781 . 802) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -781) (undo-tree-id52 . -1) 782 (778 . 782) (776 . 778) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -776) (undo-tree-id53 . -1) 777 (764 . 777) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -764) (undo-tree-id54 . -1) 765 (756 . 765) (751 . 756) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -751) (undo-tree-id55 . -1) 752 (750 . 752) (729 . 750) (726 . 729) (721 . 726) 665) nil (23701 10206 973103 200000) 0 nil]) ((592 . 608) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -592) (undo-tree-id56 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -593) (undo-tree-id57 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -594) (undo-tree-id58 . -1) 595 (590 . 595) (585 . 590) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -585) (undo-tree-id59 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id60 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -587) (undo-tree-id61 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -588) (undo-tree-id62 . -1) 589 (586 . 589) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id63 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -587) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -588) (undo-tree-id65 . -1) 589 (581 . 589) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -581) (undo-tree-id66 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -582) (undo-tree-id67 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -583) (undo-tree-id68 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -584) (undo-tree-id69 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -585) (undo-tree-id70 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id71 . -1) 587 (581 . 587)) nil (23701 10206 973169 472000) 0 nil]) ((729 . 733) (696 . 700) (635 . 639) (609 . 613) (582 . 586) 713) nil (23701 10206 973186 695000) 0 nil]) ((#("" 0 1 (fontified t face font-lock-comment-face)) . -581) (undo-tree-id72 . -1) (#("V" 0 1 (fontified t face font-lock-comment-face)) . -582) (undo-tree-id73 . -1) (#("j" 0 1 (fontified t face font-lock-comment-face)) . -583) (undo-tree-id74 . -1) 584 (582 . 584) (581 . 582) (580 . 581) (579 . 580) 579) nil (23701 10206 973201 331000) 0 nil]) ((714 . 734) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -714) (undo-tree-id75 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -715) (undo-tree-id76 . -1) 716 (711 . 716) (709 . 711) (705 . 709) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -705) (undo-tree-id77 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -706) (undo-tree-id78 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -707) (undo-tree-id79 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -708) (undo-tree-id80 . -1) 709 (706 . 709) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -706) (undo-tree-id81 . -1) 707 (706 . 707) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -706) (undo-tree-id82 . -1) 707 (703 . 707) (682 . 703) (681 . 682) (680 . 681) 679) nil (23701 10206 973238 581000) 0 nil]) ((676 . 680) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -676) (undo-tree-id83 . -1) 677 (660 . 677) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -660) (undo-tree-id84 . -1) 661 (644 . 661) (638 . 644) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -638) (undo-tree-id85 . -1) 639 (625 . 639) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -625) (undo-tree-id86 . -1) 626 (625 . 626) (624 . 625) (623 . 624) 623) nil (23701 10206 973266 814000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -624) (undo-tree-id87 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -625) (undo-tree-id88 . -1) 626 (625 . 626) (624 . 625) (623 . 624) 623) nil (23701 10206 973283 414000) 0 nil]) ((618 . 622) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -618) (undo-tree-id89 . -1) 619 (603 . 619) (601 . 603) (600 . 601) (596 . 600) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -596) (undo-tree-id90 . -1) 597 (580 . 597) (579 . 580) (578 . 579) 574) nil (23701 10206 973298 0) 0 nil]) ((608 . 611) (#("," 0 1 (fontified t face font-lock-comment-face)) . -608) (undo-tree-id91 . -1) 609 (608 . 609)) nil (23701 10206 973306 732000) 0 nil]) ((562 . 563) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10206 973310 588000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 569) (undo-tree-id92 . 1)) nil (23701 10206 973316 118000) 0 nil]) ((568 . 569)) nil (23701 10206 973318 989000) 0 nil]) ((566 . 567) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 566)) nil (23701 10206 973322 650000) 0 nil]) ((573 . 574) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 573)) nil (23701 10206 973329 309000) 0 nil]) ((573 . 574) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 573)) nil (23701 10206 973333 83000) 0 nil]) ((566 . 567) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 566)) nil (23701 10206 973336 475000) 0 nil]) ((568 . 569) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 568)) nil (23701 10206 973339 448000) 0 nil]) ((562 . 563) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10206 973342 667000) 0 nil]) ((561 . 562) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 561)) nil (23701 10206 973346 201000) 0 nil]) ((561 . 562) (#("w" 0 1 (fontified t face font-lock-comment-face)) . 561)) nil (23701 10206 973350 129000) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-comment-face)) . -564) (undo-tree-id93 . -1) 565 (563 . 565)) nil (23701 10206 973356 582000) 0 nil]) ((569 . 570) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -569) (undo-tree-id94 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -570) (undo-tree-id95 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -571) (undo-tree-id96 . -1) 572 (569 . 572)) nil (23701 10206 973371 26000) 0 nil]) ((575 . 576)) nil (23701 10206 973375 852000) 0 nil]) ((562 . 563) (#("W" 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10206 973378 713000) 0 nil]) ((562 . 563)) nil (23701 10206 973381 449000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10206 973383 735000) 0 nil]) ((561 . 562) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 561) (undo-tree-id97 . -1)) nil (23701 10206 973389 126000) 0 nil]) ((567 . 568) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 567)) nil (23701 10206 973392 512000) 0 nil]) ((565 . 566) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 565)) nil (23701 10206 973395 858000) 0 nil]) ((571 . 572) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 571)) nil (23701 10206 973398 865000) 0 nil]) ((613 . 614) (611 . 613) (#("?" 0 1 (fontified t face font-lock-comment-face)) . -611) (undo-tree-id98 . -1) 612 (610 . 612)) nil (23701 10206 973407 453000) 0 nil]) ((608 . 610)) nil (23701 10206 973411 61000) 0 nil]) ((#(")" 0 1 (fontified t face font-lock-comment-face)) . 593) (undo-tree-id99 . 1)) nil (23701 10206 973415 416000) 0 nil]) ((592 . 594) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -592) (583 . 593) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -583) (undo-tree-id100 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -584) (undo-tree-id101 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -585) (undo-tree-id102 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id103 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -587) (undo-tree-id104 . -1) 588 (577 . 588)) nil (23701 10206 973441 687000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 576)) nil (23701 10206 973447 554000) 0 nil]) ((556 . 557) (552 . 556) 551) nil (23701 10206 973451 173000) 0 nil]) ((586 . 588) (#("]" 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id105 . -1) 587 (584 . 587) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -584) (undo-tree-id106 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -585) (undo-tree-id107 . -1) (#("3" 0 1 (fontified t face font-lock-comment-face)) . -586) (undo-tree-id108 . -1) 587 (578 . 587) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -578) (undo-tree-id109 . -1) 579 (575 . 579) (#("]" 0 1 (fontified t face font-lock-comment-face)) . -575) (undo-tree-id110 . 1) (undo-tree-id111 . -1) 576) nil (23701 10206 973477 937000) 0 nil]) ((574 . 575) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -574) (undo-tree-id112 . -1) 575 (574 . 575)) nil (23701 10206 973488 990000) 0 nil]) ((573 . 575) (#("[" 0 1 (fontified nil face font-lock-comment-face)) . -573) (573 . 574) (571 . 573) (570 . 571) 565) nil (23701 10206 973496 50000) 0 nil]) ((571 . 573) (#("8" 0 1 (fontified t face font-lock-comment-face)) . -571) (undo-tree-id113 . -1) 572 (571 . 572) (570 . 571) 569) nil (23701 10206 973504 276000) 0 nil]) ((557 . 558) (556 . 557) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -556) (undo-tree-id114 . -1) 557 (556 . 557)) nil (23701 10206 973513 233000) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-comment-face)) . -562) (undo-tree-id115 . -1) 563 (560 . 563) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -560) (undo-tree-id116 . -1) 561 (560 . 561)) nil (23701 10206 973524 246000) 0 nil]) ((564 . 566)) nil (23701 10206 973528 357000) 0 nil]) ((562 . 563)) nil (23701 10206 973530 811000) 0 nil]) ((#("#" 0 1 (fontified t face font-lock-comment-face)) . 562)) nil (23701 10206 973533 131000) 0 nil]) ((553 . 556) (555 . 557) (558 . 559) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -558) (undo-tree-id117 . -1) 559 (556 . 559) (555 . 556) (554 . 555)) nil (23701 10206 973542 698000) 0 nil]) ((552 . 554) (551 . 552) (549 . 551) (#("*" 0 1 (fontified t)) . -549) (undo-tree-id118 . -1) (#("/" 0 1 (fontified t)) . -550) (undo-tree-id119 . -1) (#("
" 0 1 (fontified t)) . -551) (undo-tree-id120 . -1) 552 (551 . 552) (550 . 551) (#("?" 0 1 (fontified t)) . -550) (undo-tree-id121 . -1) 551 (549 . 551) (#("8" 0 1 (fontified t)) . -549) (undo-tree-id122 . -1) (#("/" 0 1 (fontified t)) . -550) (undo-tree-id123 . -1) 551 (549 . 551) (548 . 549) (547 . 548) 429) nil (23701 10206 973572 846000) 0 nil]) ((173 . 175) (nil rear-nonsticky nil 172 . 173) (nil fontified nil 4 . 173) (4 . 173) (1 . 4)) nil (23701 10206 973582 956000) 0 nil]) (2) nil (23701 10206 973585 967000) 0 nil]) ((255 . 257)) nil (23701 10206 973588 372000) 0 nil]) (370) nil (23701 10206 973590 643000) 0 nil]) ((nil rear-nonsticky nil 370 . 371) (nil fontified nil 255 . 371) (255 . 371) (253 . 255) (252 . 253) 250) nil (23701 10206 973596 464000) 0 nil]) ((#("
" 0 1 (fontified t face font-lock-comment-face)) . -251) (undo-tree-id124 . -1) (#("
" 0 1 (fontified t)) . -252) (undo-tree-id125 . -1) 253 (251 . 253)) nil (23701 10206 973609 80000) 0 nil] [nil nil ((nil rear-nonsticky nil 499 . 500) (nil fontified nil 252 . 500) (252 . 500) 251) ((#("We're going to take a hose and spray water all over the top of our tower, so water comes down across the top. The water drains off to the sides of the tower (but not out the bottom), so the result is that water pools anywhere there is a depression:" 0 247 (fontified nil face font-lock-comment-face) 247 248 (fontified nil rear-nonsticky nil face font-lock-comment-face)) . 252) (undo-tree-id1 . -247) (undo-tree-id2 . -247) (undo-tree-id3 . 1) (undo-tree-id4 . -2) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (nil rear-nonsticky t 499 . 500)) (23701 8968 627506 594000) 0 nil]) ((nil rear-nonsticky nil 251 . 252) (nil fontified nil 4 . 252) (4 . 252) (1 . 4) (#("
" 0 1 (fontified t)) . -1) (undo-tree-id0 . -1) 2 (1 . 2) (t . -1) 1) nil (23701 8968 627752 825000) 0 nil]) nil nil (23701 8968 627540 427000) 0 nil] #1# 11570 152 nil)