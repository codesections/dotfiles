"a8e50a7cd36f2c7a529a9979d710a2912d47678a"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((152 . 153) 151) nil (23700 10234 18204 987000) 0 nil]) ((151 . 152) (#(")" 0 1 (fontified nil)) . 151) (150 . 151) (149 . 151) (#("(" 0 1 (fontified nil)) . -149) (144 . 150) (143 . 144) (142 . 143) (#(")" 0 1 (fontified nil)) . 142) (141 . 142) (#(" " 0 1 (fontified nil)) . -141) (141 . 142) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -141) (141 . 142) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 141) (137 . 141) (136 . 138) (#("'" 0 1 (fontified nil)) . -136) (136 . 137) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -136) (undo-tree-id909 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 137) (136 . 138) (#("\"" 0 1 (fontified nil)) . -136) (136 . 137) (135 . 137) (#("(" 0 1 (fontified nil)) . -135) (130 . 136) (129 . 130) (128 . 129) 126) nil (23700 10234 18262 106000) 0 nil]) ((62 . 66) (61 . 63) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -61) (61 . 62) (#("P" 0 1 (fontified t face font-lock-string-face)) . -61) (undo-tree-id910 . -1) 62 (61 . 62) (60 . 61) (#("name" 0 4 (fontified t face font-lock-string-face)) . 60)) nil (23700 10234 18293 990000) 0 nil]) ((#(" " 0 1 (fontified t)) . 25) (undo-tree-id911 . 1) (undo-tree-id912 . 1) (undo-tree-id913 . 1)) nil (23700 10234 18310 31000) 0 nil]) ((#(" " 0 1 (fontified t)) . 25) (undo-tree-id914 . -1) (undo-tree-id915 . 1) (undo-tree-id916 . 1) (undo-tree-id917 . 1)) nil (23700 10234 18325 625000) 0 nil] [nil ([nil nil ((#(" " 0 1 (fontified t)) . 41) (undo-tree-id531 . 1) (undo-tree-id533 . 1) (undo-tree-id535 . 1) (undo-tree-id536 . 1) (undo-tree-id538 . 1) (undo-tree-id540 . 1) (undo-tree-id542 . 1) (undo-tree-id544 . 1)) ((41 . 42)) (23700 10203 527034 464000) 0 nil]) ((#(" " 0 1 (fontified t)) . 41) (undo-tree-id547 . 1) (undo-tree-id549 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id554 . 1)) ((41 . 42)) (23700 10203 622779 834000) 0 nil]) ((#(" " 0 1 (fontified t)) . 70) (undo-tree-id556 . 1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . 1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (undo-tree-id569 . 1) (undo-tree-id570 . 1)) nil (23700 10203 972677 939000) 0 nil]) ((#(" " 0 1 (fontified t)) . 70) (undo-tree-id571 . 1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . 1) (undo-tree-id575 . 1) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . -1)) nil (23700 10203 527091 508000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -45) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (undo-tree-id591 . 1) (undo-tree-id592 . 1) (41 . 45)) nil (23700 10203 527103 350000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -84) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (80 . 84) 81) nil (23700 10203 527108 981000) 0 nil]) ((#(" " 0 1 (fontified t)) . 118) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . 1)) nil (23700 10203 527134 197000) 0 nil]) ((#(" " 0 1 (fontified t)) . 118) (undo-tree-id600 . 1)) nil (23700 10203 527136 722000) 0 nil]) ((124 . 125)) nil (23700 10203 527138 160000) 0 nil]) ((122 . 123) (#("}" 0 1 (fontified nil)) . 122) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (undo-tree-id619 . 1) (undo-tree-id620 . 1) (undo-tree-id621 . 1) (undo-tree-id622 . 1) (undo-tree-id623 . 1) (undo-tree-id624 . 1) (undo-tree-id625 . 1) (undo-tree-id626 . 1) (undo-tree-id627 . 1) (undo-tree-id628 . 1) (undo-tree-id629 . 1) (undo-tree-id630 . 1) (undo-tree-id631 . 1) (undo-tree-id632 . 1) (undo-tree-id633 . 1) (undo-tree-id634 . 1) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (undo-tree-id637 . 1) (undo-tree-id638 . 1) (undo-tree-id639 . 1) (undo-tree-id640 . 1) (undo-tree-id641 . 1) (undo-tree-id642 . 1) (undo-tree-id643 . 1) (undo-tree-id644 . 1) (undo-tree-id645 . 1) (undo-tree-id646 . 1) (undo-tree-id647 . 1) (undo-tree-id648 . 1) (undo-tree-id649 . 1) (undo-tree-id650 . 1) (undo-tree-id651 . 1) (undo-tree-id652 . 1) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . 1) (undo-tree-id656 . 1) (undo-tree-id657 . 1) (undo-tree-id658 . 1) (undo-tree-id659 . 1) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . 1) (undo-tree-id663 . 1) (undo-tree-id664 . 1) (undo-tree-id665 . 1) (undo-tree-id666 . 1) (undo-tree-id667 . 1) (undo-tree-id668 . 1) (undo-tree-id669 . 1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (121 . 122) (#(" " 0 1 (fontified nil)) . -121) (121 . 122) (#("}" 0 1 (fontified nil)) . -121) (121 . 122) (116 . 121) (#(" " 0 1 (fontified t)) . -116) (undo-tree-id672 . 1) (undo-tree-id673 . -1) (undo-tree-id674 . 1) (undo-tree-id675 . -1) (undo-tree-id676 . 1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . 1) 117 (116 . 117) (115 . 116) (#(")" 0 1 (fontified nil)) . 115) (undo-tree-id680 . 1) (undo-tree-id681 . 1) (undo-tree-id682 . 1) (undo-tree-id683 . 1) (undo-tree-id684 . 1) (undo-tree-id685 . 1) (undo-tree-id686 . 1) (undo-tree-id687 . 1) (undo-tree-id688 . 1) (undo-tree-id689 . 1) (undo-tree-id690 . 1) (undo-tree-id691 . 1) (undo-tree-id692 . 1) (undo-tree-id693 . 1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (undo-tree-id696 . 1) (undo-tree-id697 . 1) (undo-tree-id698 . 1) (undo-tree-id699 . 1) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . 1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 1) (undo-tree-id713 . 1) (undo-tree-id714 . 1) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . 1) (undo-tree-id718 . 1) (undo-tree-id719 . 1) (undo-tree-id720 . 1) (undo-tree-id721 . 1) (undo-tree-id722 . 1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (114 . 115) (#(" " 0 1 (fontified nil)) . -114) (undo-tree-id726 . 1) (114 . 115) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -114) (undo-tree-id727 . 1) (114 . 115) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 114) (undo-tree-id728 . 1) (undo-tree-id729 . 1) (undo-tree-id730 . 1) (undo-tree-id731 . 1) (undo-tree-id732 . 1) (undo-tree-id733 . 1) (undo-tree-id734 . 1) (undo-tree-id735 . 1) (undo-tree-id736 . 1) (undo-tree-id737 . 1) (undo-tree-id738 . 1) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . 1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . 1) (undo-tree-id751 . 1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . 1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . 1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . 1) (undo-tree-id762 . 1) (undo-tree-id763 . 1) (undo-tree-id764 . 1) (undo-tree-id765 . 1) (undo-tree-id766 . 1) (undo-tree-id767 . 1) (undo-tree-id768 . 1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (113 . 114) (#(" " 0 1 (fontified nil)) . -113) (undo-tree-id774 . -1) (113 . 114) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -113) (undo-tree-id775 . -1) (102 . 114) (#("s" 0 1 (fontified t face font-lock-string-face)) . -102) (undo-tree-id776 . 1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -103) (undo-tree-id790 . 1) (undo-tree-id791 . 1) (undo-tree-id792 . 1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -104) (undo-tree-id798 . 1) (undo-tree-id799 . -1) (undo-tree-id800 . 1) (undo-tree-id801 . -1) (undo-tree-id802 . 1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . 1) (undo-tree-id806 . -1) 105 (94 . 105) (93 . 95) (#("'" 0 1 (fontified nil)) . -93) (93 . 94) (80 . 81) (#("    " 0 4 (fontified nil)) . 80) (undo-tree-id807 . -4) (95 . 97) (#("(" 0 1 (fontified nil)) . -95) (84 . 96) (#(" " 0 1 (fontified t)) . -84) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (#(" " 0 1 (fontified t)) . -85) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (#(" " 0 1 (fontified t)) . -87) (undo-tree-id814 . -1) (#("c" 0 1 (fontified t)) . -88) (undo-tree-id815 . -1) 89 (84 . 89) (79 . 84) (78 . 80) (#("{" 0 1 (fontified nil)) . -78) (72 . 79) (#("}" 0 1 (fontified nil)) . 72) (71 . 72) (#(" " 0 1 (fontified nil)) . -71) (71 . 72) (#("}" 0 1 (fontified nil)) . -71) (71 . 72) (66 . 71) (65 . 66) (#(")" 0 1 (fontified nil)) . 65) (64 . 65) (#("`" 0 1 (fontified nil face font-lock-string-face)) . 64) (55 . 64) (54 . 56) (#("`" 0 1 (fontified nil)) . -54) (54 . 55) (41 . 42) (#("    " 0 4 (fontified nil)) . 41) (56 . 58) (#("(" 0 1 (fontified nil)) . -56) (50 . 57) (#("e" 0 1 (fontified t)) . -50) (undo-tree-id816 . -1) (#("l" 0 1 (fontified t)) . -51) (undo-tree-id817 . -1) 52 (45 . 52) (40 . 45) (39 . 41) (#("{" 0 1 (fontified nil)) . -39) (39 . 40) (#("P" 0 1 (fontified t)) . -39) (undo-tree-id818 . -1) 40 (38 . 40) (#(")" 0 1 (fontified nil)) . 38) (33 . 38) (25 . 29) (28 . 30) (#("(" 0 1 (fontified nil)) . -28) (25 . 29) (24 . 25) (23 . 25) (#("{" 0 1 (fontified nil)) . -23) (23 . 24) (#("P" 0 1 (fontified t)) . -23) (undo-tree-id819 . -1) 24 (20 . 24) (#("-" 0 1 (fontified t)) . -20) (undo-tree-id820 . -1) 21 (15 . 21) (1 . 15)) nil (23700 10203 622530 56000) 0 nil]) ((#("	console.log(`Hi, $name`)
    } else {
    console.log('Hi there!');
 }
}" 0 1 (fontified t) 1 12 (fontified t) 12 13 (fontified t) 13 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t) 25 26 (fontified t) 26 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 36 (fontified t face font-lock-keyword-face) 36 37 (fontified t) 37 39 (fontified t) 39 43 (fontified t) 43 54 (fontified t) 54 55 (fontified t) 55 65 (fontified t face font-lock-string-face) 65 66 (fontified t face font-lock-string-face) 66 69 (fontified t) 69 70 (fontified t) 70 73 (fontified t)) . 1) (undo-tree-id821 . 73) (undo-tree-id822 . -1) (undo-tree-id823 . 73) (undo-tree-id824 . 73) (undo-tree-id825 . 73) (undo-tree-id826 . 73) (undo-tree-id827 . 73) (undo-tree-id828 . 73) (undo-tree-id829 . 73) (undo-tree-id830 . 73) (undo-tree-id831 . 73) (undo-tree-id832 . 73) (undo-tree-id833 . -25) (undo-tree-id834 . 72) (undo-tree-id835 . 73) (undo-tree-id836 . -30) (undo-tree-id837 . -31) 2) nil (23700 10203 622583 169000) 0 nil]) ((#("    if (name) {
" 0 4 (fontified t) 4 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 12 (fontified t) 12 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t)) . 1) (undo-tree-id838 . 16) (undo-tree-id839 . -4) (undo-tree-id840 . 16) (undo-tree-id841 . 16) (undo-tree-id842 . 16) (undo-tree-id843 . 16) (undo-tree-id844 . 16) (undo-tree-id845 . 16) (undo-tree-id846 . 16) (undo-tree-id847 . 16) (undo-tree-id848 . -15) (undo-tree-id849 . 12) (undo-tree-id850 . 16) 5) nil (23700 10203 622599 703000) 0 nil]) ((#("const hello = (name) {
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-variable-name-face) 11 14 (fontified t) 14 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t)) . 1) (undo-tree-id851 . 1) (undo-tree-id852 . -20) (undo-tree-id853 . 3) (undo-tree-id854 . 2) (undo-tree-id855 . -19) (undo-tree-id856 . -20) (undo-tree-id857 . -19) (undo-tree-id858 . -20) (undo-tree-id859 . -19) (undo-tree-id860 . -20) (undo-tree-id861 . -19) (undo-tree-id862 . -20) (undo-tree-id863 . -19) (undo-tree-id864 . -20) (undo-tree-id865 . -14) (undo-tree-id866 . -15) (undo-tree-id867 . 1) (undo-tree-id868 . 3) (undo-tree-id869 . 1) (undo-tree-id870 . 1) (undo-tree-id871 . 3) (undo-tree-id872 . 1) (undo-tree-id873 . -19) (undo-tree-id874 . -20) (undo-tree-id875 . -19) (undo-tree-id876 . -20) (undo-tree-id877 . -19) (undo-tree-id878 . -20) (undo-tree-id879 . -19) (undo-tree-id880 . -20) (undo-tree-id881 . -19) (undo-tree-id882 . -20) (undo-tree-id883 . -19) (undo-tree-id884 . -20) (undo-tree-id885 . -14) (undo-tree-id886 . -15) (undo-tree-id887 . -21) (undo-tree-id888 . -22) (undo-tree-id889 . -19) (undo-tree-id890 . -20) (undo-tree-id891 . -19) (undo-tree-id892 . -20) (undo-tree-id893 . -19) (undo-tree-id894 . -20) (undo-tree-id895 . -19) (undo-tree-id896 . -20) (undo-tree-id897 . -19) (undo-tree-id898 . -20) (undo-tree-id899 . -19) (undo-tree-id900 . -20) (undo-tree-id901 . -14) (undo-tree-id902 . -15) (undo-tree-id903 . 9) (undo-tree-id904 . -15) (undo-tree-id905 . 8) (undo-tree-id906 . -19) (undo-tree-id907 . 4) (undo-tree-id908 . -20) 21) nil (23700 10203 622664 393000) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . -24) (undo-tree-id507 . -4) 28 (23 . 28) 21) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 23) (undo-tree-id529 . -5) (24 . 28)) (23700 10113 718800 727000) 0 nil]) ((71 . 72) (#(" " 0 1 (fontified nil)) . 71) (#("
" 0 1 (fontified t)) . -71) 69) nil (23700 10113 719163 216000) 0 nil]) ((65 . 70)) nil (23700 10113 718814 605000) 0 nil]) ((107 . 108)) nil (23700 10113 718817 693000) 0 nil]) ((105 . 106) (106 . 107) (#("0" 0 1 (fontified t)) . -106) (undo-tree-id508 . -1) 107 (106 . 107)) nil (23700 10113 718825 102000) 0 nil]) ((#("}" 0 1 (fontified t)) . 67)) nil (23700 10113 718828 502000) 0 nil]) ((#(";" 0 1 (fontified t)) . -66) (undo-tree-id509 . -1) 67) nil (23700 10113 718833 591000) 0 nil]) ((#("}" 0 1 (fontified nil)) . 108) (107 . 108) (#(" " 0 1 (fontified nil)) . -107) (107 . 108) (#("}" 0 1 (fontified nil)) . -107) (107 . 108) (106 . 107) (105 . 106) (#(")" 0 1 (fontified nil)) . 105) (104 . 105) (#(" " 0 1 (fontified nil)) . -104) (104 . 105) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -104) (104 . 105) (#("'" 0 1 (fontified nil face font-lock-string-face)) . 104) (103 . 104) (#(" " 0 1 (fontified nil)) . -103) (103 . 104) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -103) (103 . 104) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -103) (undo-tree-id510 . -1) 104 (103 . 104) (#(" " 0 1 (fontified nil)) . -103) (103 . 104) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -103) (102 . 104) (#("~" 0 1 (fontified t face font-lock-string-face)) . -102) (undo-tree-id511 . -1) 103 (96 . 103) (#("," 0 1 (fontified t face font-lock-string-face)) . -96) (undo-tree-id512 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -97) (undo-tree-id513 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -98) (undo-tree-id514 . -1) 99 (94 . 99) (93 . 95) (#("'" 0 1 (fontified nil)) . -93) (93 . 94) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -93) (undo-tree-id515 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 94) (93 . 95) (#("\"" 0 1 (fontified nil)) . -93) (93 . 94) (77 . 81) (88 . 90) (#("(" 0 1 (fontified nil)) . -88) (80 . 89) (#("c" 0 1 (fontified t)) . -80) (undo-tree-id516 . -1) 81 (77 . 81) (76 . 77) (75 . 77) (#("{" 0 1 (fontified nil)) . -75) (69 . 76) (#("}" 0 1 (fontified nil)) . 69) (68 . 69) (#(" " 0 1 (fontified nil)) . -68) (68 . 69) (#("}" 0 1 (fontified nil)) . -68) (68 . 69) (67 . 68) (66 . 67) (#("}" 0 1 (fontified nil)) . 66) (65 . 66) (#(" " 0 1 (fontified nil)) . -65) (65 . 66) (#("}" 0 1 (fontified nil)) . -65) (65 . 66) (#(")" 0 1 (fontified nil)) . 65) (64 . 65) (#(" " 0 1 (fontified nil)) . -64) (64 . 65) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -64) (64 . 65) (#("`" 0 1 (fontified nil face font-lock-string-face)) . 64) (63 . 64) (#(" " 0 1 (fontified nil)) . -63) (63 . 64) (#("`" 0 1 (fontified nil)) . -63) (63 . 64) (#(" " 0 1 (fontified nil)) . -63) (63 . 64) (#("`" 0 1 (fontified nil face font-lock-string-face)) . -63) (59 . 64) (#("h" 0 1 (fontified t face font-lock-string-face)) . -59) (undo-tree-id517 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -60) (undo-tree-id518 . -1) 61 (54 . 61) (53 . 55) (#("`" 0 1 (fontified nil)) . -53) (53 . 54) (40 . 41) (#("    " 0 4 (fontified nil)) . 40) (55 . 57) (#("(" 0 1 (fontified nil)) . -55) (47 . 56) (44 . 47) (#("p" 0 1 (fontified t)) . -44) (undo-tree-id519 . -1) (#("r" 0 1 (fontified t)) . -45) (undo-tree-id520 . -1) (#("i" 0 1 (fontified t)) . -46) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (#("n" 0 1 (fontified t)) . -47) (undo-tree-id523 . -1) 48 (44 . 48) (39 . 44) (38 . 40) (#("{" 0 1 (fontified nil)) . -38) (37 . 39) (#(" " 0 1 (fontified t)) . -37) (undo-tree-id524 . -1) 38 (37 . 38) (#(")" 0 1 (fontified nil)) . 37) (36 . 37) (#(" " 0 1 (fontified nil)) . -36) (36 . 37) (#(")" 0 1 (fontified nil)) . -36) (33 . 37) (#("m" 0 1 (fontified t)) . -33) (undo-tree-id525 . -1) 34 (32 . 34) (26 . 28) (29 . 31) (#("(" 0 1 (fontified nil)) . -29) (28 . 30) (#(" " 0 1 (fontified t)) . -28) (undo-tree-id526 . -1) 29 (24 . 29) (23 . 24) (22 . 24) (#("{" 0 1 (fontified nil)) . -22) (21 . 23) (#(")" 0 1 (fontified nil)) . 21) (16 . 21) (15 . 17) (#("(" 0 1 (fontified nil)) . -15) (15 . 16) (1 . 15) (#("
" 0 1 (fontified t)) . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) 2) nil (23700 10113 718939 667000) 0 nil]) ((1 . 2)) nil (23700 10113 718973 22000) 0 nil] [nil nil ((1 . 2) (#("I" 0 1 (fontified t)) . -1) (undo-tree-id482 . -1) (undo-tree-id483 . 1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) 2 (1 . 2) (#("i" 0 1 (fontified t)) . -1) (undo-tree-id488 . -1) (undo-tree-id489 . 1) 2 (1 . 2)) ((#("i" 0 1 (fontified nil)) . 1) (undo-tree-id490 . -1) (undo-tree-id491 . 1) (1 . 2) (#("I" 0 1 (fontified nil)) . 1) (undo-tree-id492 . -1) (undo-tree-id493 . 1) (1 . 2) (#("U" 0 1 (fontified t)) . 1) (undo-tree-id494 . 1) (undo-tree-id495 . 1) (undo-tree-id496 . 1) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1)) (23700 9945 471814 820000) 0 nil]) (1) nil (23700 9945 472360 202000) 0 nil]) ((#("const hello = name => {
  if (name) {
    console.log(`Hi, ${name}`);
  } else {
    console.log('Hi there!');
  }
};

hello('bob');
hello();
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 11 (fontified t face font-lock-variable-name-face) 11 24 (fontified t) 24 26 (fontified t) 26 28 (fontified t face font-lock-keyword-face) 28 38 (fontified t) 38 42 (fontified t) 42 54 (fontified t) 54 67 (fontified t face font-lock-string-face) 67 70 (fontified t) 70 72 (fontified t) 72 74 (fontified t) 74 78 (fontified t face font-lock-keyword-face) 78 80 (fontified t) 80 81 (fontified t) 81 85 (fontified t) 85 97 (fontified t) 97 108 (fontified t face font-lock-string-face) 108 111 (fontified t) 111 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 117 (fontified t) 117 118 (fontified t) 118 119 (fontified t) 119 125 (fontified t) 125 130 (fontified t face font-lock-string-face) 130 133 (fontified t) 133 141 (fontified t) 141 142 (fontified t)) . 1) (undo-tree-id465 . -142) (undo-tree-id466 . -2) (undo-tree-id467 . -142) (undo-tree-id468 . 29) (undo-tree-id469 . 44) (undo-tree-id470 . 29) (undo-tree-id471 . 29) (undo-tree-id472 . 140) (undo-tree-id473 . 116) (undo-tree-id474 . 140) (undo-tree-id475 . 140) (undo-tree-id476 . -2) (undo-tree-id477 . -142) (undo-tree-id478 . -42) (undo-tree-id479 . -49) (undo-tree-id480 . -85) (undo-tree-id481 . -92) (t 23700 9785 901487 446000)) ((1 . 143)) (23700 9921 911017 239000) 0 nil]) ((#(")" 0 1 (fontified t)) . 19) (undo-tree-id415 . 1)) nil (23700 9920 124664 625000) 0 nil]) ((#("(" 0 1 (fontified t)) . 15) (undo-tree-id416 . -1) (undo-tree-id417 . 1)) nil (23700 9785 886438 173000) 0 nil]) ((144 . 145) 143) nil (23700 9785 886446 790000) 0 nil]) ((136 . 144) (135 . 136) (134 . 135) (#("l" 0 1 (fontified t)) . -134) (undo-tree-id418 . -1) (undo-tree-id419 . 1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (#("
" 0 1 (fontified t)) . -135) (undo-tree-id422 . -1) (undo-tree-id423 . 1) (undo-tree-id424 . 1) 136 (135 . 136) (132 . 135) (#(";" 0 1 (fontified t face font-lock-string-face)) . -132) (undo-tree-id425 . -1) 133 (128 . 133) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -128) (undo-tree-id426 . -1) 129 (122 . 129) (121 . 122) (120 . 121) 119) nil (23700 9785 886502 334000) 0 nil]) ((119 . 120)) nil (23700 9785 886514 373000) 0 nil]) ((#(" " 0 1 (fontified t)) . 116) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1)) nil (23700 9785 886544 763000) 0 nil]) ((#(" " 0 1 (fontified t)) . 116) (undo-tree-id434 . 1) (undo-tree-id435 . 1) (undo-tree-id436 . 1)) nil (23700 9785 886558 175000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -88) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (84 . 88)) nil (23700 9785 886577 317000) 0 nil]) (85) nil (23700 9785 886583 119000) 0 nil]) ((74 . 75) (73 . 74)) nil (23700 9785 886588 126000) 0 nil]) ((#("    " 0 4 (fontified t)) . -73) (undo-tree-id442 . -3) (undo-tree-id443 . -1) (undo-tree-id444 . 1) 76) nil (23700 9785 886601 284000) 0 nil]) ((41 . 45)) nil (23700 9785 886606 429000) 0 nil]) ((#("	" 0 1 (fontified t)) . 41) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . 1)) nil (23700 9785 886623 584000) 0 nil]) ((#(" " 0 1 (fontified t)) . 29) (undo-tree-id449 . -1)) nil (23700 9785 886631 226000) 0 nil]) ((#(" " 0 1 (fontified t)) . 29)) nil (23700 9785 886635 480000) 0 nil] [nil nil ((#("    " 0 4 (fontified t)) . -110) (undo-tree-id0 . -4) (undo-tree-id1 . -4) (undo-tree-id2 . 4) (undo-tree-id3 . -1) (undo-tree-id4 . -4) (#("	" 0 1 (fontified nil)) . -84) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (80 . 84) (#("    " 0 4 (fontified t)) . -71) (undo-tree-id8 . -1) (#("	" 0 1 (fontified nil)) . -43) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (39 . 43) (#("    " 0 4 (fontified t)) . -27) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -1) (undo-tree-id15 . -4) (undo-tree-id16 . -4) 31) ((27 . 31) (#("    " 0 4 (fontified nil)) . 39) (undo-tree-id413 . -4) (43 . 44) (71 . 75) (#("    " 0 4 (fontified nil)) . 80) (undo-tree-id414 . -4) (84 . 85) (110 . 114)) (23700 9719 935789 765000) 0 nil]) ((82 . 84)) nil (23700 9719 938337 677000) 0 nil]) ((110 . 114)) nil (23700 9719 935820 976000) 0 nil]) ((112 . 113) (#("{" 0 1 (fontified t)) . -112) (undo-tree-id17 . -1) (undo-tree-id18 . 1) 113 (112 . 113) (111 . 112) (#("    " 0 4 (fontified nil)) . -110) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (114 . 115) (#("{" 0 1 (fontified t)) . -114) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) 115 (114 . 115) (109 . 114) (105 . 109) (#("~" 0 1 (fontified t face font-lock-string-face)) . -105) (undo-tree-id25 . -1) (undo-tree-id26 . 1) 106 (99 . 106) (#(" " 0 1 (fontified t face font-lock-string-face)) . -99) (undo-tree-id27 . -1) (undo-tree-id28 . 1) 100 (98 . 100) (96 . 98) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -96) (undo-tree-id29 . -1) (undo-tree-id30 . 1) 97 (91 . 97) (#(" " 0 1 (fontified t)) . -91) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (#("l" 0 1 (fontified t)) . -92) (undo-tree-id33 . -1) (undo-tree-id34 . 1) 93 (84 . 93) (83 . 84) (#(" " 0 1 (fontified nil)) . 82) (undo-tree-id35 . -1) (83 . 84) (77 . 83) (#("	" 0 1 (fontified nil)) . -76) (76 . 77) (#("	" 0 1 (fontified nil)) . 76) (undo-tree-id36 . -1) (72 . 76) (73 . 74) (71 . 73) (63 . 71) (#("N" 0 1 (fontified t face font-lock-string-face)) . -63) (undo-tree-id37 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -64) (undo-tree-id38 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -65) (undo-tree-id39 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -66) (undo-tree-id40 . -1) 67 (61 . 67) (50 . 61) (#("." 0 1 (fontified t)) . -50) (undo-tree-id41 . -1) (#("e" 0 1 (fontified t)) . -51) (undo-tree-id42 . -1) 52 (44 . 52) (42 . 44) (41 . 42) (39 . 41) (#(" " 0 1 (fontified t)) . -39) (undo-tree-id43 . -1) 40 (31 . 40) (#("c" 0 1 (fontified t)) . -31) (undo-tree-id44 . -1) (#("o" 0 1 (fontified t)) . -32) (undo-tree-id45 . -1) (#("n" 0 1 (fontified t)) . -33) (undo-tree-id46 . -1) (#("s" 0 1 (fontified t)) . -34) (undo-tree-id47 . -1) (#("o" 0 1 (fontified t)) . -35) (undo-tree-id48 . -1) (#("l" 0 1 (fontified t)) . -36) (undo-tree-id49 . -1) (#("e" 0 1 (fontified t)) . -37) (undo-tree-id50 . -1) (#("." 0 1 (fontified t)) . -38) (undo-tree-id51 . -1) (#("l" 0 1 (fontified t)) . -39) (undo-tree-id52 . -1) (#("o" 0 1 (fontified t)) . -40) (undo-tree-id53 . -1) (#("g" 0 1 (fontified t)) . -41) (undo-tree-id54 . -1) (#("(" 0 1 (fontified t)) . -42) (undo-tree-id55 . -1) (#("`" 0 1 (fontified t face font-lock-string-face)) . -43) (undo-tree-id56 . -1) (#("H" 0 1 (fontified t face font-lock-string-face)) . -44) (undo-tree-id57 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -45) (undo-tree-id58 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -46) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -47) (undo-tree-id60 . -1) 48 (43 . 48) (#("'" 0 1 (fontified t face font-lock-string-face)) . -43) (undo-tree-id61 . -1) (#("H" 0 1 (fontified t face font-lock-string-face)) . -44) (undo-tree-id62 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -45) (undo-tree-id63 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -46) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -47) (undo-tree-id65 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -48) (undo-tree-id66 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -49) (undo-tree-id67 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -50) (undo-tree-id68 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -51) (undo-tree-id69 . -1) 52 (44 . 52) (43 . 44) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -43) (undo-tree-id70 . -1) 44 (31 . 44) (26 . 31) (25 . 26) (#("c" 0 1 (fontified t)) . -25) (undo-tree-id71 . -1) 26 (20 . 26) (16 . 20) (#("h" 0 1 (fontified t)) . -16) (undo-tree-id72 . -1) (#("e" 0 1 (fontified t)) . -17) (undo-tree-id73 . -1) (#("l" 0 1 (fontified t)) . -18) (undo-tree-id74 . -1) (#("l" 0 1 (fontified t)) . -19) (undo-tree-id75 . -1) (#("o" 0 1 (fontified t)) . -20) (undo-tree-id76 . -1) 21 (7 . 21) (1 . 7)) nil (23700 9719 936113 475000) 0 nil]) ((#("async function f2() {
  const y = await 20;
  console.log(y); // 20
}
f2();
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 14 (fontified t face font-lock-keyword-face) 14 20 (fontified t) 20 21 (fontified t js--pstate (#1=(nil 0 function 7 ("f2") 70) (nil -2305843009213693952 toplevel nil nil nil))) 21 22 (fontified t) 22 24 (fontified t) 24 29 (fontified t face font-lock-keyword-face) 29 30 (fontified t) 30 31 (fontified t face font-lock-variable-name-face) 31 34 (fontified t) 34 39 (fontified t face font-lock-keyword-face) 39 44 (fontified t) 44 62 (fontified t) 62 65 (fontified t face font-lock-comment-delimiter-face) 65 68 (fontified t face font-lock-comment-face) 68 69 (fontified t js--pend #1#) 69 70 (fontified t) 70 74 (fontified t) 74 75 (rear-nonsticky t fontified t) 75 76 (fontified t)) . 1) (undo-tree-id77 . 47) (undo-tree-id78 . -74) (undo-tree-id79 . -74) (undo-tree-id80 . 2) (undo-tree-id81 . 2) (undo-tree-id82 . 2) (undo-tree-id83 . 2) (undo-tree-id84 . 2) (undo-tree-id85 . 2) (undo-tree-id86 . 2) (undo-tree-id87 . 2) (undo-tree-id88 . 2) (undo-tree-id89 . 2) (undo-tree-id90 . 2) (undo-tree-id91 . 2) (undo-tree-id92 . 2) (undo-tree-id93 . 2) (undo-tree-id94 . -74) (undo-tree-id95 . -74) (undo-tree-id96 . 2) (undo-tree-id97 . 2) (undo-tree-id98 . 2) (undo-tree-id99 . 2) (undo-tree-id100 . 2) (undo-tree-id101 . 2) (undo-tree-id102 . 2) (undo-tree-id103 . 2) (undo-tree-id104 . 2) (undo-tree-id105 . 2) (undo-tree-id106 . 2) (undo-tree-id107 . 2) (undo-tree-id108 . 2) (undo-tree-id109 . 2) (undo-tree-id110 . 2) (undo-tree-id111 . 2) (undo-tree-id112 . 2) (undo-tree-id113 . 2) (undo-tree-id114 . 2) (undo-tree-id115 . 2) (undo-tree-id116 . 2) (undo-tree-id117 . 2) (undo-tree-id118 . 2) (undo-tree-id119 . 2) (undo-tree-id120 . 2) (undo-tree-id121 . 2) (undo-tree-id122 . 2) (undo-tree-id123 . 2) (undo-tree-id124 . 2) (undo-tree-id125 . 2) (undo-tree-id126 . 8) (undo-tree-id127 . 2) (undo-tree-id128 . 28) (undo-tree-id129 . 8) (undo-tree-id130 . 47) (undo-tree-id131 . 28) (undo-tree-id132 . 47) (undo-tree-id133 . 47) (undo-tree-id134 . 46) (undo-tree-id135 . 47) (undo-tree-id136 . 45) (undo-tree-id137 . 46) (undo-tree-id138 . 44) (undo-tree-id139 . 45) (undo-tree-id140 . 43) (undo-tree-id141 . 44) (undo-tree-id142 . 42) (undo-tree-id143 . 43) (undo-tree-id144 . 41) (undo-tree-id145 . 42) (undo-tree-id146 . 40) (undo-tree-id147 . 41) (undo-tree-id148 . 39) (undo-tree-id149 . 40) (undo-tree-id150 . 38) (undo-tree-id151 . 39) (undo-tree-id152 . 37) (undo-tree-id153 . 38) (undo-tree-id154 . 36) (undo-tree-id155 . 37) (undo-tree-id156 . 35) (undo-tree-id157 . 36) (undo-tree-id158 . 36) (undo-tree-id159 . 35) (undo-tree-id160 . 36) (undo-tree-id161 . 36) (undo-tree-id162 . 36) (undo-tree-id163 . 36) (undo-tree-id164 . 36) (undo-tree-id165 . 36) (undo-tree-id166 . 36) (undo-tree-id167 . 36) (undo-tree-id168 . -40) (undo-tree-id169 . 36) (undo-tree-id170 . 36) (undo-tree-id171 . -40) (undo-tree-id172 . 36) (undo-tree-id173 . 36) (undo-tree-id174 . 36) (undo-tree-id175 . 36) (undo-tree-id176 . 36) (undo-tree-id177 . 36) (undo-tree-id178 . 36) (undo-tree-id179 . 36) (undo-tree-id180 . 36) (undo-tree-id181 . 36) (undo-tree-id182 . 36) (undo-tree-id183 . 36) (undo-tree-id184 . 36) (undo-tree-id185 . 36) (undo-tree-id186 . 36) (undo-tree-id187 . 36) (undo-tree-id188 . 36) (undo-tree-id189 . 36) (undo-tree-id190 . -40) (undo-tree-id191 . 36) (undo-tree-id192 . 36) (undo-tree-id193 . -40) (undo-tree-id194 . 36) (undo-tree-id195 . 36) (undo-tree-id196 . -40) (undo-tree-id197 . -4) (undo-tree-id198 . 36) (undo-tree-id199 . 36) (undo-tree-id200 . 16) (undo-tree-id201 . 36) (undo-tree-id202 . 8) (undo-tree-id203 . 16) (undo-tree-id204 . 2) (undo-tree-id205 . 8) (undo-tree-id206 . 2) (undo-tree-id207 . 2) (undo-tree-id208 . 8) (undo-tree-id209 . 2) (undo-tree-id210 . 16) (undo-tree-id211 . 8) (undo-tree-id212 . 36) (undo-tree-id213 . 16) (undo-tree-id214 . 60) (undo-tree-id215 . 36) (undo-tree-id216 . 60) (undo-tree-id217 . 60) (undo-tree-id218 . 61) (undo-tree-id219 . 60) (undo-tree-id220 . 62) (undo-tree-id221 . 61) (undo-tree-id222 . 63) (undo-tree-id223 . 62) (undo-tree-id224 . 64) (undo-tree-id225 . 63) (undo-tree-id226 . 65) (undo-tree-id227 . 64) (undo-tree-id228 . 66) (undo-tree-id229 . 65) (undo-tree-id230 . 67) (undo-tree-id231 . 66) (undo-tree-id232 . 68) (undo-tree-id233 . 67) (undo-tree-id234 . 69) (undo-tree-id235 . 68) (undo-tree-id236 . 70) (undo-tree-id237 . 69) (undo-tree-id238 . 71) (undo-tree-id239 . 70) (undo-tree-id240 . 72) (undo-tree-id241 . 71) (undo-tree-id242 . 73) (undo-tree-id243 . 72) (undo-tree-id244 . 74) (undo-tree-id245 . 73) (undo-tree-id246 . 75) (undo-tree-id247 . 74) (undo-tree-id248 . 76) (undo-tree-id249 . 75) (undo-tree-id250 . 76) (undo-tree-id251 . 76) (undo-tree-id252 . 76) (undo-tree-id253 . 76) (undo-tree-id254 . 76) (undo-tree-id255 . 76) (undo-tree-id256 . 76) (undo-tree-id257 . 76) (undo-tree-id258 . 75) (undo-tree-id259 . 76) (undo-tree-id260 . 75) (undo-tree-id261 . 75) (undo-tree-id262 . 53) (undo-tree-id263 . 75) (undo-tree-id264 . 47) (undo-tree-id265 . 53) (undo-tree-id266 . 47) (undo-tree-id267 . 47) (undo-tree-id268 . 47) (undo-tree-id269 . 47) (undo-tree-id270 . 47) (undo-tree-id271 . 47) (undo-tree-id272 . 47) (undo-tree-id273 . 47) (undo-tree-id274 . 47) (undo-tree-id275 . 47) (undo-tree-id276 . 28) (undo-tree-id277 . 47) (undo-tree-id278 . 47) (undo-tree-id279 . 28) (undo-tree-id280 . 47) (undo-tree-id281 . 47) (undo-tree-id282 . 46) (undo-tree-id283 . 47) (undo-tree-id284 . 70) (undo-tree-id285 . 46) (undo-tree-id286 . 46) (undo-tree-id287 . 70) (undo-tree-id288 . 47) (undo-tree-id289 . 46) (undo-tree-id290 . 47) (undo-tree-id291 . 47) (undo-tree-id292 . 47) (undo-tree-id293 . 47) (undo-tree-id294 . 73) (undo-tree-id295 . 47) (undo-tree-id296 . 47) (undo-tree-id297 . 73) (undo-tree-id298 . 47) (undo-tree-id299 . 47) (undo-tree-id300 . 47) (undo-tree-id301 . 47) (undo-tree-id302 . 46) (undo-tree-id303 . 47) (undo-tree-id304 . 45) (undo-tree-id305 . 46) (undo-tree-id306 . 46) (undo-tree-id307 . 45) (undo-tree-id308 . 47) (undo-tree-id309 . 46) (undo-tree-id310 . 47) (undo-tree-id311 . 47) (undo-tree-id312 . 47) (undo-tree-id313 . 47) (undo-tree-id314 . 47) (undo-tree-id315 . 47) (undo-tree-id316 . 47) (undo-tree-id317 . 52) (undo-tree-id318 . 47) (undo-tree-id319 . 51) (undo-tree-id320 . 47) (undo-tree-id321 . 50) (undo-tree-id322 . 47) (undo-tree-id323 . 49) (undo-tree-id324 . 47) (undo-tree-id325 . 48) (undo-tree-id326 . 48) (undo-tree-id327 . 48) (undo-tree-id328 . -46) (undo-tree-id329 . -53) (undo-tree-id330 . 26) (undo-tree-id331 . 48) (undo-tree-id332 . 48) (undo-tree-id333 . 26) (undo-tree-id334 . 26) (undo-tree-id335 . 48) (undo-tree-id336 . 8) (undo-tree-id337 . 26) (undo-tree-id338 . 2) (undo-tree-id339 . 8) (undo-tree-id340 . 2) (undo-tree-id341 . 2) (undo-tree-id342 . 8) (undo-tree-id343 . 2) (undo-tree-id344 . 26) (undo-tree-id345 . 8) (undo-tree-id346 . 48) (undo-tree-id347 . 26) (undo-tree-id348 . 70) (undo-tree-id349 . 48) (undo-tree-id350 . 70) (undo-tree-id351 . 70) (undo-tree-id352 . -74) (undo-tree-id353 . -4) (undo-tree-id354 . 70) (undo-tree-id355 . 70) (undo-tree-id356 . 48) (undo-tree-id357 . 48) (undo-tree-id358 . 70) (undo-tree-id359 . 70) (undo-tree-id360 . 70) (undo-tree-id361 . 70) (undo-tree-id362 . 48) (undo-tree-id363 . 70) (undo-tree-id364 . 70) (undo-tree-id365 . 48) (undo-tree-id366 . 70) (undo-tree-id367 . 70) (undo-tree-id368 . 48) (undo-tree-id369 . 70) (undo-tree-id370 . 26) (undo-tree-id371 . 48) (undo-tree-id372 . 8) (undo-tree-id373 . 26) (undo-tree-id374 . 2) (undo-tree-id375 . 8) (undo-tree-id376 . -76) (undo-tree-id377 . 2) (undo-tree-id378 . 2) (undo-tree-id379 . -4) (undo-tree-id380 . -74) (undo-tree-id381 . 7) (undo-tree-id382 . 2) (undo-tree-id383 . 28) (undo-tree-id384 . 7) (undo-tree-id385 . 50) (undo-tree-id386 . 28) (undo-tree-id387 . 72) (undo-tree-id388 . 50) 5) nil (23700 9719 937181 983000) 0 nil]) ((25 . 30) (#("let" 0 3 (fontified t face font-lock-keyword-face)) . 25) (undo-tree-id389 . -1) (undo-tree-id390 . 3) (undo-tree-id391 . 2) (undo-tree-id392 . 1) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . 1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 2) (undo-tree-id400 . 1) (undo-tree-id401 . 2) (undo-tree-id402 . 2) (undo-tree-id403 . 1) (undo-tree-id404 . 2) (undo-tree-id405 . 1) (undo-tree-id406 . 1) (undo-tree-id407 . 2) (undo-tree-id408 . 1) 26) nil (23700 9719 937313 34000) 0 nil]) ((25 . 28) (#("var" 0 3 (fontified t face font-lock-keyword-face)) . 25) (undo-tree-id409 . -3) (undo-tree-id410 . 1) (undo-tree-id411 . 1) (undo-tree-id412 . 3) (t 23700 7515 37310 801000)) nil (23700 9719 937334 329000) 0 nil]) ((74 . 75) 73) nil (23700 7515 29490 469000) 0 nil]) ((nil rear-nonsticky nil 73 . 74) (nil fontified nil 1 . 74) (1 . 74) (t . -1)) nil (23700 7515 29496 646000) 0 nil]) nil nil (23700 7515 29498 739000) 0 nil] #2# 11716 54 nil)