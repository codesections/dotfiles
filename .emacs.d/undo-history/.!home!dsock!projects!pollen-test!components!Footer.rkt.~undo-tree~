"8a88fda14af3731d2adf5f2901dfd905239770dd"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((1877 . 1879) (t 23728 58938 670374 328000)) nil (23728 58954 542117 868000) 0 nil]) ((1860 . 1877)) nil (23728 58938 589225 452000) 0 nil] [nil nil ((#("       " 0 7 (fontified t)) . -1862) (undo-tree-id384 . -7) (undo-tree-id385 . -7) 1869 (1861 . 1869) 1851) ((#("
       " 0 1 (fontified t) 1 8 (fontified nil)) . 1861) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (1862 . 1869)) (23728 58925 894692 499000) 0 nil]) ((2444 . 2446)) nil (23728 58925 894855 358000) 0 nil]) ((2411 . 2413)) nil (23728 58925 894697 966000) 0 nil]) ((2319 . 2321)) nil (23728 58925 894699 271000) 0 nil]) ((2300 . 2302)) nil (23728 58925 894700 385000) 0 nil]) ((2220 . 2222)) nil (23728 58925 894701 395000) 0 nil]) ((2170 . 2172)) nil (23728 58925 894702 441000) 0 nil]) ((2138 . 2140)) nil (23728 58925 894704 640000) 0 nil]) ((#(" " 0 1 (fontified t)) . 2432) (undo-tree-id386 . -1) (undo-tree-id387 . 1) (undo-tree-id388 . 1) (#(" " 0 1 (fontified t)) . 2400) (undo-tree-id389 . -1) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (#(" " 0 1 (fontified t)) . 2311) (undo-tree-id392 . -1) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (#(" " 0 1 (fontified t)) . 2294) (undo-tree-id395 . -1) (undo-tree-id396 . 1) (undo-tree-id397 . 1) (#(" " 0 1 (fontified t)) . 2217) (undo-tree-id398 . -1) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (#(" " 0 1 (fontified t)) . 2170) (undo-tree-id401 . -1) (undo-tree-id402 . 1) (undo-tree-id403 . 1) (#(" " 0 1 (fontified t)) . 2138) (undo-tree-id404 . 1) (undo-tree-id405 . -1) (undo-tree-id406 . 1) (undo-tree-id407 . 1) 2438) nil (23728 58925 894725 174000) 0 nil]) ((2012 . 2013)) nil (23728 58925 894728 627000) 0 nil]) ((2045 . 2046)) nil (23728 58925 894729 660000) 0 nil]) ((1926 . 1927)) nil (23728 58925 894730 647000) 0 nil] [nil nil ((1927 . 1936) (#("F" 0 1 (fontified t)) . 1927) (undo-tree-id374 . 1) (undo-tree-id375 . 1) (undo-tree-id376 . 1)) ((1927 . 1928) (#("
        " 0 9 (fontified t)) . 1927) (undo-tree-id380 . -9) (undo-tree-id381 . -9) (undo-tree-id382 . 9) (undo-tree-id383 . 9)) (23728 58879 181018 946000) 0 nil]) ((1879 . 1888) (#(" " 0 1 (fontified t)) . 1879) (undo-tree-id377 . 1)) nil (23728 58879 181141 205000) 0 nil]) ((1879 . 1880) (#("       " 0 7 (fontified nil)) . 1879) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (#("
" 0 1 (fontified t)) . -1879) 1878) nil (23728 58879 181031 126000) 0 nil] [nil nil ((1878 . 1879)) ((#("
" 0 1 (fontified t)) . 1878) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . 1)) (23728 58875 199442 700000) 0 nil]) ((#("        " 0 8 (fontified t)) . 2414)) nil (23728 58875 199897 924000) 0 nil]) ((#("        " 0 8 (fontified t)) . 2228) (undo-tree-id322 . 8) (undo-tree-id323 . 8) (undo-tree-id324 . 8)) nil (23728 58875 199483 884000) 0 nil]) ((#("        " 0 8 (fontified t)) . 2147) (undo-tree-id325 . 8) (undo-tree-id326 . 8) (undo-tree-id327 . 8) (undo-tree-id328 . 8) (undo-tree-id329 . 8)) nil (23728 58875 199503 356000) 0 nil]) ((#("        " 0 8 (fontified t)) . 2022)) nil (23728 58875 199508 774000) 0 nil]) ((#("        " 0 5 (fontified t) 5 8 (fontified t)) . 2467) (undo-tree-id330 . 8) (undo-tree-id331 . 8) (undo-tree-id332 . 8)) nil (23728 58875 199521 232000) 0 nil]) ((#("        " 0 5 (fontified t) 5 8 (fontified t)) . 2336) (undo-tree-id333 . 8) (undo-tree-id334 . 8) (undo-tree-id335 . 8)) nil (23728 58875 199533 390000) 0 nil]) ((#("       " 0 5 (fontified t) 5 7 (fontified t)) . 2318) (undo-tree-id336 . 7) (undo-tree-id337 . 7) (undo-tree-id338 . 7) (undo-tree-id339 . 7) (undo-tree-id340 . 7)) nil (23728 58875 199551 577000) 0 nil]) ((#("        " 0 8 (fontified t)) . 2184) (undo-tree-id341 . 8) (undo-tree-id342 . 8) (undo-tree-id343 . 8)) nil (23728 58875 199564 320000) 0 nil]) ((#("        " 0 8 (fontified t)) . 2051)) nil (23728 58875 199568 848000) 0 nil]) ((#("       " 0 7 (fontified t)) . 1925) (undo-tree-id344 . 7) (undo-tree-id345 . 7) (undo-tree-id346 . 7) (undo-tree-id347 . 7) (undo-tree-id348 . 7) (undo-tree-id349 . 7) (undo-tree-id350 . 7)) nil (23728 58875 199590 4000) 0 nil]) ((#("       " 0 7 (fontified t)) . 1887) (undo-tree-id351 . 7) (undo-tree-id352 . 7) (undo-tree-id353 . 1) (undo-tree-id354 . 2) (undo-tree-id355 . 1) (undo-tree-id356 . 3) (undo-tree-id357 . 2) (undo-tree-id358 . 4) (undo-tree-id359 . 3) (undo-tree-id360 . 5) (undo-tree-id361 . 4) (undo-tree-id362 . 6) (undo-tree-id363 . 5) (undo-tree-id364 . 7) (undo-tree-id365 . 6)) nil (23728 58875 199633 924000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1932) (undo-tree-id366 . -1) (undo-tree-id367 . 1) (undo-tree-id368 . 1) (#(" " 0 1 (fontified t)) . 1887) (undo-tree-id369 . -1) 1933) nil (23728 58875 199651 757000) 0 nil]) ((1861 . 1869) (#(" " 0 1 (fontified t)) . 1861)) nil (23728 58875 199658 753000) 0 nil]) ((1861 . 1862) (#("              " 0 14 (fontified nil)) . 1861) (#("
" 0 1 (fontified t)) . -1861) (undo-tree-id370 . -1) 1851 (t 23728 58803 154346 104000)) nil (23728 58875 199668 633000) 0 nil]) ((1843 . 1851) (#(" " 0 1 (fontified t)) . 1843)) nil (23728 58803 136610 304000) 0 nil]) ((2507 . 2522) (#("       " 0 7 (fontified nil)) . -2507) (2466 . 2493) (#("                   " 0 19 (fontified t)) . -2466) (2368 . 2383) (#("       " 0 7 (fontified t)) . -2368) (2343 . 2357) (#("      " 0 6 (fontified t)) . -2343) (2604 . 2605) (#(")" 0 1 (fontified t)) . -2342) (2257 . 2284) (#("                   " 0 19 (fontified nil)) . -2257) (2201 . 2216) (#("       " 0 7 (fontified t)) . -2201) (2160 . 2187) (#("                   " 0 19 (fontified t)) . -2160) (2060 . 2075) (#("       " 0 7 (fontified t)) . -2060) (2019 . 2046) (#("                   " 0 19 (fontified t)) . -2019) (1926 . 1941) (#("       " 0 7 (fontified t)) . -1926) (1880 . 1895) (#("       " 0 7 (fontified t)) . -1880) (1855 . 1869) (#("      " 0 5 (fontified t) 5 6 (rear-nonsticky t fontified t)) . -1855) (2278 . 2279) (#(")" 0 1 (fontified t)) . -1854) (1854 . 1855) (#(")" 0 1 (fontified t)) . -1844) (1839 . 1844) (#("o" 0 1 (fontified t)) . -1839) (undo-tree-id320 . -1) (undo-tree-id321 . -1) 1840 (1837 . 1840) (1836 . 1838) (#("(" 0 1 (fontified nil)) . -1836) (1835 . 1837) (t 23728 58676 614961 466000)) nil (23728 58803 136635 230000) 0 nil] [nil ([nil ([nil ([nil ([nil nil ((2575 . 2586) (#("         " 0 9 (fontified nil)) . -2575) (2557 . 2559) (2433 . 2439) (#("       " 0 7 (fontified nil)) . -2433) (2401 . 2419) (#("                   " 0 19 (fontified t)) . -2401) (2312 . 2318) (#("       " 0 7 (fontified t)) . -2312) (2296 . 2301) (#("      " 0 6 (fontified t)) . -2296) (2599 . 2600) (#(")" 0 1 (fontified t)) . -2559) 1836) ((2559 . 2560) (#(")" 0 1 (fontified nil)) . 2599) (2296 . 2302) (#("     " 0 5 (fontified t)) . 2296) (undo-tree-id240 . -5) (2312 . 2319) (#("      " 0 6 (fontified t)) . 2312) (undo-tree-id241 . -6) (2401 . 2420) (#("                  " 0 18 (fontified t)) . 2401) (2433 . 2440) (#("      " 0 6 (fontified t)) . 2433) (undo-tree-id242 . -6) (#("  " 0 2 (fontified t)) . 2557) (undo-tree-id243 . -2) (2575 . 2584) (#("           " 0 11 (fontified t)) . 2575)) (23728 58770 430620 581000) 0 nil]) ((2216 . 2236) (#("                   " 0 19 (fontified nil)) . -2216) (2167 . 2175) (#("       " 0 7 (fontified t)) . -2167) (2133 . 2153) (#("                   " 0 19 (fontified t)) . -2133) (2040 . 2048) (#("       " 0 7 (fontified t)) . -2040) (2006 . 2026) (#("                   " 0 19 (fontified t)) . -2006) (1920 . 1928) (#("       " 0 7 (fontified t)) . -1920) (1881 . 1889) (#("       " 0 7 (fontified t)) . -1881) (1863 . 1870) (#("      " 0 5 (fontified t) 5 6 (rear-nonsticky t fontified t)) . -1863) (2286 . 2287) (#(")" 0 1 (fontified t)) . -1862) (1845 . 1852) (#("     " 0 5 (fontified nil)) . -1845) (1860 . 1861) (#(")" 0 1 (fontified t)) . -1844) (1837 . 1844) (1836 . 1838) (#("(" 0 1 (fontified nil)) . -1836) (1836 . 1837) (#("f" 0 1 (fontified t)) . -1836) (undo-tree-id221 . -1) (undo-tree-id222 . -1) 1837 (1835 . 1837)) ((#("`f" 0 1 (fontified nil) 1 2 (fontified nil)) . 1835) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . 1) (undo-tree-id249 . -1) (1836 . 1837) (#("(" 0 1 (fontified nil)) . 1836) (undo-tree-id250 . 1) (1836 . 1837) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 1836) (undo-tree-id251 . 2) (undo-tree-id252 . 1) (undo-tree-id253 . 2) (undo-tree-id254 . 2) (undo-tree-id255 . -1) (undo-tree-id256 . 2) (undo-tree-id257 . 2) (undo-tree-id258 . 2) (undo-tree-id259 . -1) (undo-tree-id260 . 1) (#("footer " 0 7 (fontified nil)) . 1837) (undo-tree-id261 . 7) (undo-tree-id262 . 7) (1844 . 1845) (#(")" 0 1 (fontified nil)) . 1860) (1845 . 1850) (#("       " 0 7 (fontified nil)) . 1845) (undo-tree-id263 . -7) (undo-tree-id264 . -7) (undo-tree-id265 . -7) (1862 . 1863) (#(")" 0 1 (fontified nil)) . 2286) (undo-tree-id266 . -1) (undo-tree-id267 . 1) (undo-tree-id268 . -1) (1863 . 1869) (#("       " 0 7 (fontified t)) . 1863) (undo-tree-id269 . -7) (1881 . 1888) (#("        " 0 8 (fontified t)) . 1881) (undo-tree-id270 . -8) (1920 . 1927) (#("        " 0 8 (fontified t)) . 1920) (undo-tree-id271 . -8) (2006 . 2025) (#("                    " 0 20 (fontified t)) . 2006) (2040 . 2047) (#("        " 0 8 (fontified t)) . 2040) (undo-tree-id272 . -8) (2133 . 2152) (#("                    " 0 20 (fontified t)) . 2133) (2167 . 2174) (#("        " 0 8 (fontified t)) . 2167) (undo-tree-id273 . -8) (2216 . 2235) (#("                    " 0 20 (fontified t)) . 2216)) (23728 58770 432244 859000) 0 nil]) ((#("'" 0 1 (fontified t)) . -1835) (undo-tree-id223 . -1) (undo-tree-id224 . -1) 1836 (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1836) (undo-tree-id225 . 2) (undo-tree-id226 . -1) (undo-tree-id227 . -1) 1837 (#("f" 0 1 (fontified t)) . -1837) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (#("o" 0 1 (fontified t)) . -1838) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (#("o" 0 1 (fontified t)) . -1839) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("t" 0 1 (fontified t)) . -1840) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("e" 0 1 (fontified t)) . -1841) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (#("r" 0 1 (fontified t)) . -1842) (undo-tree-id238 . -1) (undo-tree-id239 . -1) 1843 (1837 . 1843)) ((#("footer" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 1837) (1837 . 1843) (1835 . 1838)) (23728 58770 813776 887000) 0 nil]) ((1835 . 1836)) ((#("'" 0 1 (fontified t)) . 1835) (undo-tree-id274 . -1)) (23728 58771 584749 842000) 0 nil]) ((1835 . 1837) (#("(" 0 1 (fontified nil)) . -1835) (1835 . 1836) (1830 . 1835) (1830 . 1831) 1844 (t 23728 58676 614961 466000)) ((#("
" 0 1 (fontified nil)) . 1830) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . -1) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (#("     " 0 5 (fontified nil)) . 1830) (undo-tree-id294 . -5) (undo-tree-id295 . -5) (undo-tree-id296 . -5) (undo-tree-id297 . -5) (undo-tree-id298 . -5) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . -5) (undo-tree-id302 . -5) (undo-tree-id303 . -5) (undo-tree-id304 . -5) (undo-tree-id305 . -5) (#("(" 0 1 (fontified nil)) . 1835) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (1835 . 1836) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1835) (undo-tree-id309 . 2) (undo-tree-id310 . 1) (undo-tree-id311 . -1) (undo-tree-id312 . 2) (undo-tree-id313 . 1) (undo-tree-id314 . 2) (undo-tree-id315 . -1) (undo-tree-id316 . 1) (undo-tree-id317 . -1) (undo-tree-id318 . 1) (undo-tree-id319 . -2)) (23728 58772 67573 217000) 0 nil]) ((#("     " 0 5 (fontified nil)) . 2533) (undo-tree-id198 . -5) (undo-tree-id199 . -5) (undo-tree-id200 . -5) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -5) (#("
" 0 1 (fontified t)) . -2533) (undo-tree-id204 . -1) 2415) nil (23728 58772 450016 8000) 0 nil]) ((#("rr" 0 1 (fontified t) 1 2 (fontified t)) . 2540) (undo-tree-id205 . 2) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . -2) (undo-tree-id209 . 2) (undo-tree-id210 . 1)) nil (23728 58676 517465 860000) 0 nil]) ((2541 . 2542) (#(")" 0 1 (fontified t)) . 2541) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . -1)) nil (23728 58676 517481 662000) 0 nil]) ((2540 . 2541) (#(")" 0 1 (fontified t)) . 2540) (undo-tree-id214 . -1)) nil (23728 58676 517491 240000) 0 nil]) ((nil rear-nonsticky nil 1851 . 1852) (#("
" 0 1 (fontified nil)) . -2533) (1845 . 2534) 1834) nil (23728 58676 517499 128000) 0 nil]) ((1845 . 1851) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 1845) (1844 . 1845) (#(" " 0 1 (fontified nil)) . -1844) (1844 . 1845) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -1844) (1844 . 1845) (#("'" 0 1 (fontified t face font-lock-string-face)) . -1844) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 1845 (1836 . 1845) (1835 . 1837) (#("\"" 0 1 (fontified nil)) . -1835) (1835 . 1836) (#("'" 0 1 (fontified t)) . -1835) (undo-tree-id217 . -1) (undo-tree-id218 . -1) 1836 (1835 . 1836) (1830 . 1835) (#(" " 0 1 (fontified nil)) . 1829) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (1830 . 1831) (1825 . 1830) (1824 . 1826) (#("(" 0 1 (fontified nil)) . -1824) (1824 . 1825) (1819 . 1824)) nil (23728 58676 517542 830000) 0 nil] [nil nil ((1100 . 1101) (#("     " 0 5 (fontified nil)) . 1100) (undo-tree-id152 . 5) (undo-tree-id153 . 5) (undo-tree-id154 . 5) (undo-tree-id155 . 5) (undo-tree-id156 . 5) (undo-tree-id157 . -5) (undo-tree-id158 . 5) (undo-tree-id159 . 5) (undo-tree-id160 . 5) (undo-tree-id161 . 5) (#("
" 0 1 (fontified t)) . -1100) (undo-tree-id162 . 1) (undo-tree-id163 . 1) (undo-tree-id164 . 1) (undo-tree-id165 . -1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (undo-tree-id169 . 1) (undo-tree-id170 . 1) (undo-tree-id171 . 1) 1099) ((1100 . 1101) (1100 . 1105) (#(" " 0 1 (fontified t)) . 1100) (undo-tree-id197 . 1)) (23728 58615 354105 534000) 0 nil]) ((#("j" 0 1 (fontified t)) . -1100) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . 1) 1101 (1100 . 1101) (1696 . 1703) (#("      " 0 6 (fontified nil)) . -1696) (undo-tree-id175 . -6) (1663 . 1682) ("                  " . -1663) (1573 . 1580) (#("      " 0 6 (fontified t)) . -1573) (undo-tree-id176 . -6) (1556 . 1562) (#("     " 0 5 (fontified t)) . -1556) (undo-tree-id177 . -5) (1478 . 1497) (#("                  " 0 18 (fontified t)) . -1478) (1430 . 1437) (#("      " 0 6 (fontified t)) . -1430) (undo-tree-id178 . -6) (1397 . 1416) (#("                  " 0 18 (fontified t)) . -1397) (1305 . 1312) (#("      " 0 6 (fontified t)) . -1305) (undo-tree-id179 . -6) (1272 . 1291) (#("                  " 0 18 (fontified t)) . -1272) (1187 . 1194) (#("      " 0 6 (fontified t)) . -1187) (undo-tree-id180 . -6) (1149 . 1156) (#("      " 0 6 (fontified t)) . -1149) (undo-tree-id181 . -6) (1132 . 1138) (#("     " 0 5 (fontified t)) . -1132) (undo-tree-id182 . -5) (1101 . 1106) (#("    " 0 4 (fontified t)) . -1101) (undo-tree-id183 . -4) (1805 . 1806) (#(")" 0 1 (fontified t)) . -1100) (undo-tree-id184 . -1) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . -1) (1685 . 1691) (#("    " 0 4 (fontified nil)) . -1685) (1653 . 1671) ("                " . -1653) (1564 . 1570) (#("    " 0 4 (fontified t)) . -1564) (1548 . 1553) (#("   " 0 2 (fontified t) 2 3 (fontified t)) . -1548) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (1471 . 1489) (#("                " 0 16 (fontified t)) . -1471) (1424 . 1430) (#("    " 0 4 (fontified t)) . -1424) (1392 . 1410) (#("                " 0 8 (fontified t) 8 15 (fontified t) 15 16 (fontified t)) . -1392) (1301 . 1307) (#("    " 0 4 (fontified t)) . -1301) (1269 . 1287) (#("                " 0 10 (fontified t) 10 16 (fontified t)) . -1269) (1185 . 1191) (#("    " 0 3 (fontified t) 3 4 (fontified t)) . -1185) (1148 . 1154) (#("    " 0 4 (fontified t)) . -1148) (1132 . 1137) (#("   " 0 3 (fontified t)) . -1132) (1102 . 1106) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . -1102) (1780 . 1781) (#(")" 0 1 (fontified t)) . -1101) 1100 (#(")" 0 1 (fontified nil)) . 1100) (1099 . 1100) (1095 . 1099) (1094 . 1096) (#("(" 0 1 (fontified nil)) . -1094) (1094 . 1095) (1093 . 1095) (#("(" 0 1 (fontified nil)) . -1093) (1093 . 1094) (1088 . 1093)) nil (23728 58615 354399 45000) 0 nil]) ((1081 . 1087) (#("s" 0 1 (fontified t)) . -1081) (undo-tree-id191 . -1) (undo-tree-id192 . -1) 1082 (1081 . 1082) (#("a" 0 1 (fontified nil)) . -1081) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (#("r" 0 1 (fontified t)) . -1082) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 1083 (1068 . 1083) (1067 . 1069) (#("(" 0 1 (fontified nil)) . -1067) (1067 . 1068) (1062 . 1067) (1061 . 1063) (#("(" 0 1 (fontified nil)) . -1061) (1061 . 1062) (1059 . 1061) (1059 . 1060) (t 23728 58521 552415 511000)) nil (23728 58615 354170 797000) 0 nil]) ((596 . 597) (594 . 596) (#("e" 0 1 (fontified t face racket-selfeval-face)) . -594) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 595 (583 . 595)) nil (23728 58521 522918 822000) 0 nil]) ((#("F" 0 1 (fontified nil face racket-selfeval-face)) . 583) (575 . 584) (#("t" 0 1 (fontified nil)) . 575) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (575 . 576) (574 . 576) (#("(" 0 1 (fontified nil)) . 574) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (574 . 575) (#("((class \"FooterItem\"))" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t face font-lock-builtin-face) 7 8 (fontified t) 8 9 (fontified t face font-lock-string-face) 9 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t) 21 22 (fontified t)) . 574) (undo-tree-id123 . 22) (undo-tree-id124 . 22) (undo-tree-id125 . 22) (undo-tree-id126 . 22) (undo-tree-id127 . 22) (undo-tree-id128 . 22) (undo-tree-id129 . 22) (undo-tree-id130 . 14) (undo-tree-id131 . 22) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . 14) (undo-tree-id135 . 14) (undo-tree-id136 . 14) (undo-tree-id137 . 14) (undo-tree-id138 . -8) (undo-tree-id139 . 22) (undo-tree-id140 . 22) (undo-tree-id141 . 22) (undo-tree-id142 . -8) (undo-tree-id143 . -9) (undo-tree-id144 . 22) (undo-tree-id145 . -1) (undo-tree-id146 . 21) (undo-tree-id147 . -21) (undo-tree-id148 . 1) (undo-tree-id149 . -22)) ((574 . 596) (#("(" 0 1 (fontified nil)) . 574) (undo-tree-id52 . -1) (574 . 575) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 574) (undo-tree-id53 . 1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id57 . 1) (undo-tree-id59 . 1) (undo-tree-id61 . 1) (undo-tree-id63 . 1) (undo-tree-id65 . 1) (undo-tree-id67 . 1) (undo-tree-id69 . 1) (undo-tree-id71 . 1) (undo-tree-id73 . 1) (undo-tree-id75 . 1) (undo-tree-id77 . 1) (undo-tree-id79 . 1) (undo-tree-id81 . 1) (undo-tree-id83 . 1) (undo-tree-id85 . -1) (#("t" 0 1 (fontified nil)) . 575) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (575 . 576) (#("styled 'F" 0 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil face racket-selfeval-face)) . 575) (undo-tree-id90 . -7) (undo-tree-id91 . -7) (undo-tree-id93 . 8) (undo-tree-id95 . 6) (undo-tree-id97 . 4) (undo-tree-id99 . 2) (undo-tree-id101 . 2) (undo-tree-id103 . -8) (583 . 584)) (23728 58509 529085 810000) 0 nil]) ((#("              " 0 14 (fontified nil)) . 574) (undo-tree-id106 . 14) (undo-tree-id107 . -14) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . 14) (undo-tree-id112 . 14) (undo-tree-id113 . 14) (#("
" 0 1 (fontified t)) . 574) (undo-tree-id114 . 1) (undo-tree-id115 . 1) (undo-tree-id116 . 1) (undo-tree-id117 . 1)) ((574 . 575) (574 . 588)) (23728 58509 379170 95000) 0 nil]) ((#("li" 0 2 (fontified t)) . 574) (undo-tree-id104 . 1) (undo-tree-id105 . 2)) ((574 . 576)) (23728 58509 344203 970000) 0 nil]) ((#("," 0 1 (fontified t)) . 694)) nil (23728 58508 247483 184000) 0 nil]) ((#("," 0 1 (fontified t)) . 628)) nil (23728 58506 393040 465000) 0 nil]) ((#("`" 0 1 (fontified t)) . 573) (t 23728 58445 829483 488000)) nil (23728 58506 393045 224000) 0 nil]) ((#("`" 0 1 (fontified t)) . 1079) (undo-tree-id0 . 1)) nil (23728 58445 729818 369000) 0 nil]) ((#("," 0 1 (fontified t)) . 1509) (undo-tree-id1 . 1) (undo-tree-id2 . 1)) nil (23728 58445 729838 843000) 0 nil]) ((#("," 0 1 (fontified t)) . 1109)) nil (23728 58445 729846 107000) 0 nil]) ((#("," 0 1 (fontified t)) . 1081) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (t 23728 58420 149622 515000)) nil (23728 58445 729878 125000) 0 nil]) ((1081 . 1082)) nil (23728 58420 117156 846000) 0 nil]) ((#("(  (styled 'footer 'Footer))
" 0 1 (fontified t) 1 3 (fontified t) 3 11 (fontified t) 11 18 (fontified t face racket-selfeval-face) 18 19 (fontified t) 19 26 (fontified t face racket-selfeval-face) 26 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t)) . 1060) (undo-tree-id1607 . 3) (undo-tree-id1608 . 29) (undo-tree-id1609 . -1) (undo-tree-id1610 . 28) (undo-tree-id1611 . -27) (undo-tree-id1612 . 2) (undo-tree-id1613 . -28)) nil (23728 58420 117202 560000) 0 nil]) ((#("define StyledFooter
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 19 (fontified t face font-lock-variable-name-face) 19 20 (fontified t)) . 1061) (undo-tree-id1614 . -3) (undo-tree-id1615 . -3) 1064) nil (23728 58420 117217 965000) 0 nil]) ((1100 . 1106) (1084 . 1100) (1083 . 1085) (#("(" 0 1 (fontified nil)) . -1083) (1083 . 1084) (1080 . 1083) (1072 . 1080) (1069 . 1072) (#("y" 0 1 (fontified t face font-lock-variable-name-face)) . -1069) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) 1070 (1061 . 1070) (1060 . 1062) (#("(" 0 1 (fontified nil)) . -1060) (1060 . 1061)) nil (23728 58420 117241 250000) 0 nil]) ((1060 . 1061) 1075 (t 23728 58359 466624 292000)) nil (23728 58420 117250 925000) 0 nil]) ((1090 . 1104) (1082 . 1090) (1081 . 1083) (#("(" 0 1 (fontified nil)) . -1081) (1081 . 1082)) nil (23728 58359 447133 232000) 0 nil]) ((#("footer ((class \"Footer\"))" 0 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 14 (fontified t face font-lock-builtin-face) 14 15 (fontified t) 15 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t) 24 25 (fontified t)) . 1081) (undo-tree-id1563 . 4) (undo-tree-id1564 . 4) (undo-tree-id1565 . -21) (undo-tree-id1566 . -21) (undo-tree-id1567 . -21) (undo-tree-id1568 . 12) (undo-tree-id1569 . 12) (undo-tree-id1570 . 12) (undo-tree-id1571 . 13) (undo-tree-id1572 . 12) (undo-tree-id1573 . 14) (undo-tree-id1574 . 13) (undo-tree-id1575 . 15) (undo-tree-id1576 . 14) (undo-tree-id1577 . 16) (undo-tree-id1578 . 15) (undo-tree-id1579 . 17) (undo-tree-id1580 . 16) (undo-tree-id1581 . 18) (undo-tree-id1582 . 17) (undo-tree-id1583 . 19) (undo-tree-id1584 . 18) (undo-tree-id1585 . 20) (undo-tree-id1586 . 19) (undo-tree-id1587 . 21) (undo-tree-id1588 . 20) (undo-tree-id1589 . 22) (undo-tree-id1590 . 21) (undo-tree-id1591 . 23) (undo-tree-id1592 . 22) (undo-tree-id1593 . 24) (undo-tree-id1594 . 23) (undo-tree-id1595 . 25) (undo-tree-id1596 . 24) (undo-tree-id1597 . 25) (undo-tree-id1598 . -15) (undo-tree-id1599 . -16) (undo-tree-id1600 . 25) (undo-tree-id1601 . -15) (undo-tree-id1602 . -16)) nil (23728 58359 447259 720000) 0 nil]) ((#("
" 0 1 (fontified t)) . 298) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (t 23728 57748 34106 418000)) nil (23728 58359 447304 102000) 0 nil]) ((1512 . 1513)) nil (23728 57748 6084 56000) 0 nil]) ((1111 . 1112)) nil (23728 57748 6091 806000) 0 nil]) ((1080 . 1081)) nil (23728 57748 6095 851000) 0 nil]) ((#("'" 0 1 (fontified t face racket-selfeval-face)) . 1081) (undo-tree-id1561 . 1)) nil (23728 57748 6108 459000) 0 nil]) ((#("'" 0 1 (fontified t)) . 1089) (undo-tree-id1562 . 1) (t 23728 57720 577535 598000)) nil (23728 57748 6115 995000) 0 nil]) ((1099 . 1105) (1098 . 1100) (#("\"" 0 1 (fontified nil)) . -1098) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (1092 . 1099) (1091 . 1093) (#("(" 0 1 (fontified nil)) . -1091) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (1091 . 1092) (1090 . 1092) (#("(" 0 1 (fontified nil)) . -1090) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (1089 . 1091) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1089) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . 1) (undo-tree-id1479 . 2) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . 1) (undo-tree-id1487 . 1) (undo-tree-id1488 . 1) (undo-tree-id1489 . 1) (undo-tree-id1490 . 1) (undo-tree-id1491 . 1) (undo-tree-id1492 . 1) (undo-tree-id1493 . 1) (undo-tree-id1494 . 1) (undo-tree-id1495 . 1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . 1) (undo-tree-id1499 . 1) (undo-tree-id1500 . 1) (undo-tree-id1501 . 1) (undo-tree-id1502 . 1) (undo-tree-id1503 . 1) (undo-tree-id1504 . 1) (undo-tree-id1505 . 1) (undo-tree-id1506 . 1) (undo-tree-id1507 . 1) (undo-tree-id1508 . 1) (undo-tree-id1509 . 1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . 1) (undo-tree-id1513 . 1) (undo-tree-id1514 . -1) 1090 (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1090) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . 1) (undo-tree-id1519 . 2) (undo-tree-id1520 . 1) (undo-tree-id1521 . 1) (undo-tree-id1522 . 1) (undo-tree-id1523 . 1) (undo-tree-id1524 . 1) (undo-tree-id1525 . 1) (undo-tree-id1526 . 1) (undo-tree-id1527 . 1) (undo-tree-id1528 . -1) (undo-tree-id1529 . 1) (undo-tree-id1530 . 1) (undo-tree-id1531 . 1) (undo-tree-id1532 . 1) (undo-tree-id1533 . 1) (undo-tree-id1534 . 1) (undo-tree-id1535 . 1) (undo-tree-id1536 . 1) (undo-tree-id1537 . 1) (undo-tree-id1538 . 1) (undo-tree-id1539 . 1) (undo-tree-id1540 . 1) (undo-tree-id1541 . -1) 1091 (#("c" 0 1 (fontified t)) . -1091) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . 1) (#("l" 0 1 (fontified t)) . -1092) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . 1) (#("a" 0 1 (fontified t)) . -1093) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . 1) (#("s" 0 1 (fontified t)) . -1094) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . 1) (#("s" 0 1 (fontified t face font-lock-builtin-face)) . -1095) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . 1) 1096 (1091 . 1096) (1090 . 1092) (#("(" 0 1 (fontified nil)) . -1090) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (1090 . 1091) (1089 . 1091) (#("(" 0 1 (fontified nil)) . -1089) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (1089 . 1090) (1081 . 1089)) nil (23728 57720 551000 469000) 0 nil] [nil ([nil nil ((1082 . 1089) (#("f" 0 1 (fontified t)) . -1082) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . 1) (#("o" 0 1 (fontified t)) . -1083) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . 1) (#("o" 0 1 (fontified t)) . -1084) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . 1) 1085 (1082 . 1085)) ((#("foo" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 1082) (undo-tree-id1438 . 3) (undo-tree-id1439 . 2) (undo-tree-id1440 . 1) (1082 . 1085) (#("footer " 0 7 (fontified t)) . 1082) (undo-tree-id1441 . 7) (undo-tree-id1442 . 7) (undo-tree-id1443 . 5) (undo-tree-id1444 . 4) (undo-tree-id1445 . 3) (undo-tree-id1446 . 2) (undo-tree-id1447 . 1) (undo-tree-id1448 . 1) (undo-tree-id1449 . 1) (undo-tree-id1450 . 2) (undo-tree-id1451 . 1) (undo-tree-id1452 . 3) (undo-tree-id1453 . 2) (undo-tree-id1454 . 4) (undo-tree-id1455 . 3) (undo-tree-id1456 . 5) (undo-tree-id1457 . 4) (undo-tree-id1458 . 6) (undo-tree-id1459 . 5) (undo-tree-id1460 . 7) (undo-tree-id1461 . 6) (undo-tree-id1462 . 7) (undo-tree-id1463 . 7)) (23728 57700 262176 327000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 1081) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) 1082 (1081 . 1083) (#("(" 0 1 (fontified nil)) . -1081) (1081 . 1082) (#("l" 0 1 (fontified t)) . -1081) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) 1082 (1080 . 1082)) ((#("`l" 0 1 (fontified nil) 1 2 (fontified nil)) . 1080) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . 2) (1081 . 1082) (#("(" 0 1 (fontified nil)) . 1081) (1081 . 1082) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 1081) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (1081 . 1083)) (23728 57700 263072 878000) 0 nil]) ((#("style 'footer 'Footer" 0 6 (fontified t) 6 13 (fontified t face racket-selfeval-face) 13 14 (fontified t) 14 21 (fontified t face racket-selfeval-face)) . 1081) (undo-tree-id1433 . -21) (undo-tree-id1434 . -21) (undo-tree-id1435 . -21) (undo-tree-id1436 . -21) (undo-tree-id1437 . -21)) nil (23728 57701 65637 36000) 0 nil] [nil ([nil ([nil ([nil nil ((1102 . 1103) (#("r" 0 1 (fontified t face racket-selfeval-face)) . 1102) (undo-tree-id1382 . 1)) ((1102 . 1103) (#(")" 0 1 (fontified t)) . 1102) (undo-tree-id1391 . 1) (undo-tree-id1392 . 1) (undo-tree-id1393 . 1) (undo-tree-id1394 . 1) (undo-tree-id1395 . 1) (undo-tree-id1396 . 1) (undo-tree-id1397 . 1) (undo-tree-id1398 . 1) (undo-tree-id1399 . 1) (undo-tree-id1400 . 1) (undo-tree-id1401 . 1) (undo-tree-id1402 . 1) (undo-tree-id1403 . 1) (undo-tree-id1404 . 1) (undo-tree-id1405 . 1) (undo-tree-id1406 . 1) (undo-tree-id1407 . 1) (undo-tree-id1408 . 1) (undo-tree-id1409 . 1) (undo-tree-id1410 . 1) (undo-tree-id1411 . 1) (undo-tree-id1412 . 1) (undo-tree-id1413 . 1) (undo-tree-id1414 . 1) (undo-tree-id1415 . 1) (undo-tree-id1416 . -1) (t 23728 57656 351092 343000)) (23728 57656 253112 12000) 0 nil]) ((1102 . 1103)) ((#("r" 0 1 (fontified t face racket-selfeval-face)) . 1102) (undo-tree-id1417 . 1) (undo-tree-id1418 . 1)) (23728 57669 563653 851000) 0 nil]) ((#("r" 0 1 (fontified t)) . 1752) (undo-tree-id1385 . 1)) ((1752 . 1753)) (23728 57669 917124 49000) 0 nil]) ((1752 . 1753) (#(")" 0 1 (fontified t)) . 1752) (undo-tree-id1386 . 1) (undo-tree-id1388 . 1) (undo-tree-id1390 . -1)) ((1752 . 1753) (#("r" 0 1 (fontified t)) . 1752) (undo-tree-id1419 . 1)) (23728 57670 273803 638000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -1102) (1102 . 1103) (#(" " 0 1 (fontified nil)) . -1102) (1102 . 1103) (#(")" 0 1 (fontified nil face racket-selfeval-face)) . -1102) (1102 . 1103)) nil (23728 57671 61137 643000) 0 nil]) ((931 . 966) (#(" " 0 1 (fontified t)) . 931) (t 23728 57595 247970 387000)) nil (23728 57656 253178 445000) 0 nil]) ((944 . 946) (t 23728 57585 151338 533000)) nil (23728 57595 231361 552000) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 890) (undo-tree-id1377 . 1) (undo-tree-id1378 . 1) (undo-tree-id1379 . 1) (undo-tree-id1380 . 1)) nil (23728 57585 135243 921000) 0 nil]) ((920 . 922) (t 23728 57552 731450 49000)) nil (23728 57585 135248 209000) 0 nil]) ((890 . 891)) nil (23728 57552 651301 940000) 0 nil]) (929) nil (23728 57552 651306 875000) 0 nil]) ((929 . 930) (#("                                  " 0 34 (fontified nil)) . 929) (undo-tree-id1373 . 26) (undo-tree-id1374 . 26) (undo-tree-id1375 . 26) (undo-tree-id1376 . 26) (#("
" 0 1 (fontified t)) . -929) 890 (t 23728 57500 858294 327000)) nil (23728 57552 651321 651000) 0 nil]) ((#("
" 0 1 (fontified t)) . 98) (undo-tree-id1258 . 1) (undo-tree-id1259 . 1) (undo-tree-id1260 . 1) (undo-tree-id1261 . 1) (undo-tree-id1262 . 1) (undo-tree-id1263 . 1) (undo-tree-id1264 . 1) (undo-tree-id1265 . 1) (undo-tree-id1266 . 1) (undo-tree-id1267 . 1) (undo-tree-id1268 . 1) (undo-tree-id1269 . 1) (undo-tree-id1270 . 1) (undo-tree-id1271 . 1) (undo-tree-id1272 . 1)) nil (23728 57500 847909 419000) 0 nil]) ((#("(define (StyledFooter . children)
  (case (current-poly-target)
    [(html) `(footer ((style \"\"))
           ,@children)]
    [else `(\"\\n\\n\\n\\n\" (footer ,@children))]))
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 15 (fontified t face font-lock-function-name-face) 15 21 (fontified t face font-lock-function-name-face) 21 34 (fontified t) 34 37 (fontified t) 37 41 (fontified t face font-lock-keyword-face) 41 64 (fontified t) 64 93 (fontified t) 93 95 (fontified t face font-lock-string-face) 95 98 (fontified t) 98 127 (fontified t) 127 131 (fontified t face font-lock-keyword-face) 131 134 (fontified t) 134 144 (fontified t face font-lock-string-face) 144 169 (fontified t)) . 98) (undo-tree-id1273 . -167) (undo-tree-id1274 . -167) (undo-tree-id1275 . -33) (undo-tree-id1276 . 29) (undo-tree-id1277 . 29) (undo-tree-id1278 . -140) (undo-tree-id1279 . 117) (undo-tree-id1280 . 87) (undo-tree-id1281 . 117) (undo-tree-id1282 . 117) (undo-tree-id1283 . 117) (undo-tree-id1284 . 117) (undo-tree-id1285 . -33) (undo-tree-id1286 . -33) (undo-tree-id1287 . -169) (undo-tree-id1288 . -33) (undo-tree-id1289 . -167) (undo-tree-id1290 . 106) (undo-tree-id1291 . 72) (undo-tree-id1292 . -62) (undo-tree-id1293 . -63) (undo-tree-id1294 . -62) (undo-tree-id1295 . -63) (undo-tree-id1296 . -62) (undo-tree-id1297 . -63) (undo-tree-id1298 . -62) (undo-tree-id1299 . -63) (undo-tree-id1300 . -62) (undo-tree-id1301 . -63) (undo-tree-id1302 . -62) (undo-tree-id1303 . -63) (undo-tree-id1304 . -42) (undo-tree-id1305 . -43) (undo-tree-id1306 . 136) (undo-tree-id1307 . 106) (undo-tree-id1308 . -32) (undo-tree-id1309 . -33) (undo-tree-id1310 . -32) (undo-tree-id1311 . -33) (undo-tree-id1312 . -32) (undo-tree-id1313 . -33) (undo-tree-id1314 . -32) (undo-tree-id1315 . -33) (undo-tree-id1316 . -32) (undo-tree-id1317 . -33) (undo-tree-id1318 . -32) (undo-tree-id1319 . -33) (undo-tree-id1320 . -8) (undo-tree-id1321 . -9) (undo-tree-id1322 . 161) (undo-tree-id1323 . -9) (undo-tree-id1324 . 160) (undo-tree-id1325 . -32) (undo-tree-id1326 . 137) (undo-tree-id1327 . -33) (undo-tree-id1328 . -93) (undo-tree-id1329 . -94) 131) nil (23728 57500 847974 161000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -1268) (1268 . 1269) (#(" " 0 1 (fontified nil)) . -1268) (1268 . 1269) (#(")" 0 1 (fontified nil face racket-selfeval-face)) . -1268) (1268 . 1269)) nil (23728 57500 847986 212000) 0 nil]) ((1261 . 1268) (#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 1261) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) 1262 (1261 . 1263) (#("\"" 0 1 (fontified nil)) . -1261) (1261 . 1262) (#("F" 0 1 (fontified t)) . -1261) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (#("o" 0 1 (fontified t)) . -1262) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) 1263 (1247 . 1263) (#("StyledFooter" 0 12 (fontified t)) . 1247)) nil (23728 57500 847998 483000) 0 nil]) ((1099 . 1134) (#(" " 0 1 (fontified t)) . 1099)) nil (23728 57500 848002 157000) 0 nil]) ((1099 . 1100) (#("                                     " 0 37 (fontified nil)) . 1099) (#("
" 0 1 (fontified t)) . -1099) 1061) nil (23728 57500 848004 803000) 0 nil]) ((1193 . 1211) (#(" " 0 1 (fontified t)) . 1193)) nil (23728 57500 848007 74000) 0 nil]) ((1160 . 1178) (#(" " 0 1 (fontified t)) . 1160)) nil (23728 57500 848009 232000) 0 nil]) ((1042 . 1060) (#(" " 0 1 (fontified t)) . 1042)) nil (23728 57500 848011 160000) 0 nil]) ((1143 . 1144)) nil (23728 57500 848012 661000) 0 nil]) ((1142 . 1143) (#("r" 0 1 (fontified t)) . 1142)) nil (23728 57500 848014 455000) 0 nil]) ((1141 . 1142) (#("r" 0 1 (fontified t)) . 1141)) nil (23728 57500 848016 349000) 0 nil]) ((1142 . 1143) (1141 . 1142)) nil (23728 57500 848018 378000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1141)) nil (23728 57500 848020 151000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1141)) nil (23728 57500 848021 818000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1141)) nil (23728 57500 848023 262000) 0 nil]) ((1143 . 1144) (#(")" 0 1 (fontified t)) . 1143) (undo-tree-id1336 . 1) (undo-tree-id1337 . 1) (undo-tree-id1338 . 1) (undo-tree-id1339 . 1) (undo-tree-id1340 . 1) (undo-tree-id1341 . 1) (undo-tree-id1342 . 1) (undo-tree-id1343 . 1) (undo-tree-id1344 . 1) (undo-tree-id1345 . 1) (undo-tree-id1346 . 1) (undo-tree-id1347 . 1) (undo-tree-id1348 . 1) (undo-tree-id1349 . 1) (undo-tree-id1350 . 1) (undo-tree-id1351 . 1)) nil (23728 57500 848041 768000) 0 nil]) ((1142 . 1143) (#("x" 0 1 (fontified t)) . 1142) (undo-tree-id1352 . 1) (undo-tree-id1353 . 1) (undo-tree-id1354 . 1) (undo-tree-id1355 . 1) (undo-tree-id1356 . 1) (undo-tree-id1357 . 1)) nil (23728 57500 848050 340000) 0 nil]) ((1142 . 1143) (#("x" 0 1 (fontified t)) . 1142) (undo-tree-id1358 . 1) (undo-tree-id1359 . 1) (undo-tree-id1360 . 1) (undo-tree-id1361 . 1) (undo-tree-id1362 . 1) (undo-tree-id1363 . 1)) nil (23728 57500 848059 814000) 0 nil]) ((1142 . 1143) (#(")" 0 1 (fontified t)) . 1142) (undo-tree-id1364 . 1) (undo-tree-id1365 . 1) (undo-tree-id1366 . 1) (undo-tree-id1367 . -1) (undo-tree-id1368 . 1) (undo-tree-id1369 . 1)) nil (23728 57500 848068 109000) 0 nil]) ((1141 . 1142) (#(")" 0 1 (fontified t)) . 1141) (undo-tree-id1370 . 1) (undo-tree-id1371 . 1) (undo-tree-id1372 . -1)) nil (23728 57500 848073 244000) 0 nil]) ((1139 . 1140) (1132 . 1133)) nil (23728 57500 848075 468000) 0 nil] [nil nil ((1135 . 1137) (#("\"" 0 1 (fontified nil)) . -1135) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (1132 . 1136)) ((#("csw\"" 0 3 (fontified nil) 3 4 (fontified nil)) . 1132) (undo-tree-id1229 . -3) (undo-tree-id1230 . -3) (undo-tree-id1231 . 4) (undo-tree-id1232 . 3) (undo-tree-id1233 . 2) (undo-tree-id1234 . -3) (undo-tree-id1235 . -4) (undo-tree-id1236 . -3) (undo-tree-id1237 . -4) (undo-tree-id1238 . -3) (undo-tree-id1239 . -3) (undo-tree-id1240 . 1) (undo-tree-id1241 . -3) (undo-tree-id1242 . 1) (undo-tree-id1243 . -3) (undo-tree-id1244 . 1) (undo-tree-id1245 . -3) (1135 . 1136) (#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 1135) (undo-tree-id1246 . 1) (undo-tree-id1247 . -1) (undo-tree-id1248 . 1) (undo-tree-id1249 . 2) (undo-tree-id1250 . 2) (undo-tree-id1251 . 2) (undo-tree-id1252 . 2) (undo-tree-id1253 . -1) (undo-tree-id1254 . 1) (undo-tree-id1255 . -1) (undo-tree-id1256 . 1) (undo-tree-id1257 . -2)) (23728 57393 973432 450000) 0 nil]) ((1138 . 1139) (#(")" 0 1 (fontified t)) . -1131) (undo-tree-id1187 . 1) (undo-tree-id1188 . 1) (undo-tree-id1189 . 1) (undo-tree-id1190 . -1)) nil (23728 57393 973720 142000) 0 nil]) ((#(":" 0 1 (fontified t)) . 1131)) nil (23728 57393 973446 96000) 0 nil]) ((#(";" 0 1 (rear-nonsticky t fontified t face font-lock-comment-delimiter-face)) . 1140)) nil (23728 57393 973447 550000) 0 nil]) ((1082 . 1120) (#(" " 0 1 (fontified t)) . 1082)) nil (23728 57393 973449 109000) 0 nil]) ((1095 . 1096) (#(")" 0 1 (fontified t)) . -1084) (1083 . 1085) (#("(" 0 1 (fontified nil)) . -1083) (1083 . 1084)) nil (23728 57393 973451 672000) 0 nil]) ((1082 . 1083) (#("                                                 " 0 49 (fontified nil)) . 1082) (undo-tree-id1191 . 49) (#("
" 0 1 (fontified t)) . -1082) (undo-tree-id1192 . 1) 1081) nil (23728 57393 973456 131000) 0 nil]) ((1081 . 1082) (#("r" 0 1 (fontified t)) . 1081)) nil (23728 57393 973458 111000) 0 nil]) ((1081 . 1082) (#(")" 0 1 (fontified nil)) . -1081) (1081 . 1082) (#(" " 0 1 (fontified nil)) . -1081) (1081 . 1082) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -1081) (1081 . 1082)) nil (23728 57393 973461 532000) 0 nil]) ((1081 . 1131) (#(" " 0 1 (fontified t)) . 1081)) nil (23728 57393 973464 27000) 0 nil]) ((1080 . 1081) (1072 . 1073)) nil (23728 57393 973465 954000) 0 nil]) ((#(":" 0 1 (fontified t)) . 1071)) nil (23728 57393 973467 125000) 0 nil]) ((#("p" 0 1 (fontified t)) . 1061) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1)) nil (23728 57393 973471 129000) 0 nil]) ((nil rear-nonsticky nil 1100 . 1101) (nil fontified nil 1062 . 1101) (1062 . 1101) 1061) nil (23728 57393 973473 367000) 0 nil]) ((1061 . 1062)) nil (23728 57393 973474 713000) 0 nil]) ((#("margin-top: 1.15em; text-align: center;" 0 39 (fontified t face font-lock-string-face)) . 192)) nil (23728 57393 973475 757000) 0 nil]) ((1099 . 1101) (#("(" 0 1 (fontified nil)) . -1099) (1099 . 1100) (1098 . 1100) (#("(" 0 1 (fontified nil)) . -1098) (1090 . 1099) (#("f" 0 1 (fontified t face racket-selfeval-face)) . -1090) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (#("o" 0 1 (fontified t face racket-selfeval-face)) . -1091) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (#("o" 0 1 (fontified t face racket-selfeval-face)) . -1092) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (#("t" 0 1 (fontified t face racket-selfeval-face)) . -1093) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (#("e" 0 1 (fontified t face racket-selfeval-face)) . -1094) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (#("r" 0 1 (fontified t face racket-selfeval-face)) . -1095) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (#(" " 0 1 (fontified t)) . -1096) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (#("F" 0 1 (fontified t)) . -1097) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#("o" 0 1 (fontified t)) . -1098) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("o" 0 1 (fontified nil)) . -1099) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (#("t" 0 1 (fontified nil)) . -1100) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (#("e" 0 1 (fontified nil)) . -1101) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (#("r" 0 1 (fontified t)) . -1102) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#(" " 0 1 (fontified t)) . -1103) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) 1104 (1099 . 1104) (1083 . 1099) (#("S" 0 1 (fontified t)) . -1083) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) 1084 (1083 . 1084) (1082 . 1084) (#("(" 0 1 (fontified nil)) . -1082) (1082 . 1083)) nil (23728 57393 973527 271000) 0 nil]) ((#("(define ())
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t)) . 98) (undo-tree-id1226 . 3) (undo-tree-id1227 . -9) (undo-tree-id1228 . -9) 107) nil (23728 57393 973538 623000) 0 nil] [nil nil ((#("Styled" 0 6 (fontified t face font-lock-function-name-face)) . 119) (undo-tree-id1033 . 6)) ((119 . 125)) (23728 57269 506500 896000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-function-name-face)) . -107) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . 1) (#("t" 0 1 (fontified t face font-lock-function-name-face)) . -108) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . 1) 109 (107 . 109) (106 . 108) (#("(" 0 1 (fontified nil)) . -106) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (99 . 107) (98 . 100) (#("(" 0 1 (fontified nil)) . -98) (undo-tree-id1042 . -1) (98 . 99) (98 . 99) 130) nil (23728 57269 506797 635000) 0 nil]) ((1088 . 1098) (1082 . 1088)) nil (23728 57269 506524 178000) 0 nil]) ((501 . 502) (#(")" 0 1 (fontified t)) . -478) (469 . 478) (468 . 469) (467 . 469) (#("(" 0 1 (fontified nil)) . -467) (467 . 468)) nil (23728 57269 506528 139000) 0 nil]) ((#(". children" 0 10 (fontified t)) . 389)) nil (23728 57269 506530 695000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 399) (#("(" 0 1 (fontified t)) . 379) 381) nil (23728 57269 506533 443000) 0 nil]) ((456 . 466) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -456) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) 457 (456 . 457) (#("F" 0 1 (fontified t)) . -456) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (#("o" 0 1 (fontified t)) . -457) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (#("o" 0 1 (fontified t)) . -458) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (#("t" 0 1 (fontified t)) . -459) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (#("e" 0 1 (fontified t)) . -460) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) 461 (459 . 461) (452 . 459) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -452) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) 453 (449 . 453) (445 . 449) (444 . 446) (#("(" 0 1 (fontified nil)) . -444) (444 . 445) (#("`(ul ((style \"margin: 0;\")) ,@children)" 0 13 (fontified t) 13 25 (fontified t face font-lock-string-face) 25 39 (fontified t)) . 444)) nil (23728 57269 506555 542000) 0 nil]) ((351 . 352)) nil (23728 57269 506560 998000) 0 nil]) ((363 . 364) (362 . 364) (#("\"" 0 1 (fontified nil)) . -362) (360 . 363) (359 . 360) (#(":" 0 1 (fontified t)) . -359) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) 360 (353 . 360) (352 . 354) (#("(" 0 1 (fontified nil)) . -352) (352 . 353) (351 . 353) (#("(" 0 1 (fontified nil)) . -351) (351 . 352) (334 . 351) (333 . 335) (#("(" 0 1 (fontified nil)) . -333) (333 . 334) (330 . 333) (328 . 330) (325 . 328) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -325) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -326) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) 327 (321 . 327) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -321) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) 322 (312 . 322) (308 . 312) (307 . 309) (#("(" 0 1 (fontified nil)) . -307) (307 . 308)) nil (23728 57269 506583 427000) 0 nil]) ((306 . 307)) nil (23728 57269 506589 683000) 0 nil]) ((#("  " 0 2 (fontified nil)) . 990) (undo-tree-id1065 . 2) (undo-tree-id1066 . 2) (undo-tree-id1067 . 2) (undo-tree-id1068 . 2) (undo-tree-id1069 . 2) (undo-tree-id1070 . 2) (undo-tree-id1071 . 2) (undo-tree-id1072 . 2) (undo-tree-id1073 . 2) (undo-tree-id1074 . 2) (undo-tree-id1075 . 2) (undo-tree-id1076 . 2) (undo-tree-id1077 . 2) (undo-tree-id1078 . 2) (undo-tree-id1079 . 2) (undo-tree-id1080 . 2) (undo-tree-id1081 . 2) (undo-tree-id1082 . 2) (undo-tree-id1083 . 2) (undo-tree-id1084 . 2) (undo-tree-id1085 . 2) (undo-tree-id1086 . 2) (undo-tree-id1087 . 2) (undo-tree-id1088 . 2) (undo-tree-id1089 . 2) (undo-tree-id1090 . 2) (undo-tree-id1091 . 2) (undo-tree-id1092 . 2) (undo-tree-id1093 . 2) (undo-tree-id1094 . 1) (undo-tree-id1095 . 1) (undo-tree-id1096 . -1) (undo-tree-id1097 . 2) (undo-tree-id1098 . 1) (undo-tree-id1099 . -1) (undo-tree-id1100 . 2) (undo-tree-id1101 . 2) (undo-tree-id1102 . 2) (undo-tree-id1103 . 2) (undo-tree-id1104 . 2) (undo-tree-id1105 . 2) (undo-tree-id1106 . 2) (undo-tree-id1107 . 2) (#("
" 0 1 (fontified t)) . -990) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . 1) (undo-tree-id1122 . 1) (undo-tree-id1123 . 1) (undo-tree-id1124 . 1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) 958) nil (23728 57269 506648 875000) 0 nil]) ((#("
" 0 1 (fontified t)) . 991) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1)) nil (23728 57269 506669 967000) 0 nil]) ((#("  ;`(li ,(when (equal? (current-poly-target) 'html)
  ;      '((style \"display: inline-block\")))
  ;    ,(when (and link-text)
  ;       (Links #:type link-type link-text ))
  ;    ,(when text text))
" 0 2 (fontified t) 2 3 (fontified t face font-lock-comment-delimiter-face) 3 10 (fontified t face font-lock-comment-face) 10 14 (fontified t face font-lock-comment-face) 14 16 (fontified t face font-lock-comment-face) 16 22 (fontified t face font-lock-comment-face) 22 45 (fontified t face font-lock-comment-face) 45 50 (fontified t face font-lock-comment-face) 50 51 (fontified t face font-lock-comment-face) 51 52 (fontified t face font-lock-comment-face) 52 54 (fontified t) 54 55 (fontified t face font-lock-comment-delimiter-face) 55 61 (fontified t face font-lock-comment-delimiter-face) 61 70 (fontified t face font-lock-comment-face) 70 93 (fontified t face font-lock-comment-face) 93 96 (fontified t face font-lock-comment-face) 96 97 (fontified t face font-lock-comment-face) 97 99 (fontified t) 99 100 (fontified t face font-lock-comment-delimiter-face) 100 104 (fontified t face font-lock-comment-delimiter-face) 104 106 (fontified t face font-lock-comment-face) 106 108 (fontified t face font-lock-comment-face) 108 110 (fontified t face font-lock-comment-face) 110 112 (fontified t face font-lock-comment-face) 112 115 (fontified t face font-lock-comment-face) 115 117 (fontified t face font-lock-comment-face) 117 126 (fontified t face font-lock-comment-face) 126 127 (fontified t face font-lock-comment-face) 127 129 (fontified t) 129 130 (fontified t face font-lock-comment-delimiter-face) 130 137 (fontified t face font-lock-comment-delimiter-face) 137 140 (fontified t face font-lock-comment-face) 140 143 (fontified t face font-lock-comment-face) 143 144 (fontified t face font-lock-comment-face) 144 150 (fontified t face font-lock-comment-face) 150 161 (fontified t face font-lock-comment-face) 161 170 (fontified t face font-lock-comment-face) 170 171 (fontified t face font-lock-comment-face) 171 173 (fontified t face font-lock-comment-face) 173 174 (fontified t face font-lock-comment-face) 174 176 (fontified t) 176 177 (fontified t face font-lock-comment-delimiter-face) 177 181 (fontified t face font-lock-comment-delimiter-face) 181 183 (fontified t face font-lock-comment-face) 183 187 (fontified t face font-lock-comment-face) 187 200 (fontified t face font-lock-comment-face)) . 992) (undo-tree-id1143 . -186) (undo-tree-id1144 . -12) (undo-tree-id1145 . -186) (undo-tree-id1146 . 61) (undo-tree-id1147 . 62) (undo-tree-id1148 . 61) (undo-tree-id1149 . 61) (undo-tree-id1150 . 61) (undo-tree-id1151 . 61) (undo-tree-id1152 . 61) (undo-tree-id1153 . 61) (undo-tree-id1154 . -143) (undo-tree-id1155 . -143) (undo-tree-id1156 . -143) (undo-tree-id1157 . 30) (undo-tree-id1158 . 30) (undo-tree-id1159 . 30) (undo-tree-id1160 . 30) (undo-tree-id1161 . -160) (undo-tree-id1162 . 46) (undo-tree-id1163 . 46) (undo-tree-id1164 . -154) (undo-tree-id1165 . 46) (undo-tree-id1166 . 46) (undo-tree-id1167 . 46) (undo-tree-id1168 . 46) (undo-tree-id1169 . -154) (undo-tree-id1170 . 39) (undo-tree-id1171 . 39) (undo-tree-id1172 . 39) (undo-tree-id1173 . 39) (undo-tree-id1174 . -161) (undo-tree-id1175 . 197) (undo-tree-id1176 . 197) (undo-tree-id1177 . -2) (undo-tree-id1178 . 25) (undo-tree-id1179 . -175) (undo-tree-id1180 . -175) (undo-tree-id1181 . -186) (undo-tree-id1182 . -186) (undo-tree-id1183 . -12) (undo-tree-id1184 . -186) 1178 (t 23728 57017 753210 51000)) nil (23728 57269 506713 545000) 0 nil]) ((#(" " 0 1 (fontified t)) . -971) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . 1) 972 (969 . 972)) nil (23728 57017 720442 574000) 0 nil]) ((893 . 905) (#(" " 0 1 (fontified nil)) . 892) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (893 . 894)) nil (23728 57017 720464 227000) 0 nil]) ((893 . 894)) nil (23728 57017 720471 494000) 0 nil]) ((888 . 889) (#("'" 0 1 (fontified t)) . 888) (undo-tree-id1030 . 1) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1)) nil (23728 57017 720485 265000) 0 nil]) ((888 . 889)) nil (23728 57017 720491 508000) 0 nil]) ((889 . 892) (t 23728 56966 360033 842000)) nil (23728 57017 720496 512000) 0 nil]) ((#("           " 0 11 (fontified nil)) . 968) (undo-tree-id1019 . 11) (#("
" 0 1 (fontified t)) . -968) (undo-tree-id1020 . 1) 952) nil (23728 56966 333144 16000) 0 nil]) ((940 . 952) (#(" " 0 1 (fontified t)) . 940)) nil (23728 56966 333159 73000) 0 nil]) ((940 . 941) (#("
" 0 1 (fontified t)) . -940) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) 889) nil (23728 56966 333173 967000) 0 nil]) ((#("           " 0 11 (fontified nil)) . 889) (#("
" 0 1 (fontified t)) . -889) 888) nil (23728 56966 333181 531000) 0 nil]) ((nil rear-nonsticky nil 968 . 969) (nil fontified nil 953 . 969) (953 . 969)) nil (23728 56966 333188 865000) 0 nil]) ((#("           " 0 11 (fontified t)) . -953) (undo-tree-id1023 . -11) (undo-tree-id1024 . -11) 964 (952 . 964) 905) nil (23728 56966 333200 938000) 0 nil] [nil nil ((nil rear-nonsticky nil 921 . 922) (nil fontified nil 906 . 922) (906 . 922) 905) ((#("(when text text)" 0 1 (fontified nil) 1 5 (fontified nil face font-lock-keyword-face) 5 15 (fontified nil) 15 16 (rear-nonsticky nil fontified nil)) . 906) (undo-tree-id1008 . -15) (undo-tree-id1009 . -15) (undo-tree-id1010 . -15) (undo-tree-id1011 . 1) (undo-tree-id1012 . -1) (undo-tree-id1013 . 16) (undo-tree-id1014 . -1) (undo-tree-id1015 . 15) (undo-tree-id1016 . -15) (undo-tree-id1017 . 1) (undo-tree-id1018 . -16) (nil rear-nonsticky t 921 . 922)) (23728 56958 579161 144000) 0 nil] [nil nil ((#("(when text text)" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 15 (fontified t) 15 16 (fontified t)) . 859) (undo-tree-id976 . 16) (undo-tree-id977 . 16) (undo-tree-id978 . -1) (undo-tree-id979 . 15) (undo-tree-id980 . -15) (undo-tree-id981 . 1) (undo-tree-id982 . -16) (undo-tree-id983 . -15) (undo-tree-id984 . -16) (undo-tree-id985 . -1) (undo-tree-id986 . -15) (undo-tree-id987 . -16) (undo-tree-id988 . -1) (undo-tree-id989 . -16) (undo-tree-id990 . -16) (undo-tree-id991 . -16) (undo-tree-id992 . -15) (undo-tree-id993 . -16) (undo-tree-id994 . -1)) ((859 . 875)) (23728 56956 245901 526000) 0 nil]) ((889 . 901)) nil (23728 56958 579262 123000) 0 nil]) ((#("," 0 1 (fontified t)) . 889) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . 1) (undo-tree-id1001 . -1)) nil (23728 56956 245944 294000) 0 nil]) ((941 . 953)) nil (23728 56956 245951 285000) 0 nil]) ((#("void" 0 1 (fontified t face font-lock-builtin-face) 1 4 (fontified t face font-lock-builtin-face)) . 941) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . 4) (undo-tree-id1005 . -4) (undo-tree-id1006 . -4) (undo-tree-id1007 . -4)) nil (23728 56956 245972 823000) 0 nil]) ((nil rear-nonsticky nil 940 . 941) (nil fontified nil 889 . 941) (889 . 941) 888 (t 23728 56773 983925 513000)) nil (23728 56956 245982 639000) 0 nil] [nil nil ((nil rear-nonsticky nil 941 . 942) (nil fontified nil 890 . 942) (890 . 942) 889 (t 23728 56773 983925 513000)) ((#(",(when link-text (Links #:type link-type link-text))" 0 2 (fontified nil) 2 6 (fontified nil face font-lock-keyword-face) 6 24 (fontified nil) 24 30 (fontified nil face racket-keyword-argument-face) 30 51 (fontified nil) 51 52 (fontified nil rear-nonsticky nil)) . 890) (undo-tree-id938 . -51) (undo-tree-id939 . -51) (undo-tree-id940 . -51) (undo-tree-id941 . 1) (undo-tree-id942 . -50) (undo-tree-id943 . -51) (undo-tree-id944 . -17) (undo-tree-id945 . -18) (undo-tree-id946 . -1) (undo-tree-id947 . -2) (undo-tree-id948 . -50) (undo-tree-id949 . -51) (undo-tree-id950 . -50) (undo-tree-id951 . -51) (undo-tree-id952 . -50) (undo-tree-id953 . -51) (undo-tree-id954 . -50) (undo-tree-id955 . -51) (undo-tree-id956 . -50) (undo-tree-id957 . -51) (undo-tree-id958 . -50) (undo-tree-id959 . -51) (undo-tree-id960 . -17) (undo-tree-id961 . -18) (undo-tree-id962 . 1) (undo-tree-id963 . 1) (undo-tree-id964 . -50) (undo-tree-id965 . -51) (undo-tree-id966 . -17) (undo-tree-id967 . -18) (undo-tree-id968 . -1) (undo-tree-id969 . -2) (undo-tree-id970 . 51) (undo-tree-id971 . -2) (undo-tree-id972 . 50) (undo-tree-id973 . -51) (undo-tree-id974 . 1) (undo-tree-id975 . -52) (nil rear-nonsticky t 941 . 942)) (23728 56943 984364 964000) 0 nil] [nil nil ((#(",(when link-text (Links #:type link-type link-text))" 0 1 (fontified t) 1 2 (fontified t) 2 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 17 (fontified t) 17 24 (fontified t) 24 30 (fontified t face racket-keyword-argument-face) 30 31 (fontified t) 31 41 (fontified t) 41 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t)) . 791) (undo-tree-id934 . 51) (undo-tree-id935 . 51) (undo-tree-id936 . 52) (undo-tree-id937 . 51) (t 23728 56773 983925 513000)) ((791 . 843)) (23728 56940 147483 518000) 0 nil]) ((1150 . 1160) (#("_" 0 1 (fontified t)) . -1150) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . 1) (#("i" 0 1 (fontified t)) . -1151) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . 1) 1152 (1143 . 1152) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 1143) (undo-tree-id918 . -1) (undo-tree-id919 . 1) (undo-tree-id920 . 1) (undo-tree-id921 . -1) (1142 . 1143) (1141 . 1143) (#("\"" 0 1 (fontified nil)) . -1141) (1141 . 1142) (1140 . 1141) (1127 . 1140) (#("string-ap" 0 9 (fontified t)) . -1127) (undo-tree-id922 . -9) (undo-tree-id923 . -9) 1136 (1127 . 1136) (1126 . 1128) (#("(" 0 1 (fontified nil)) . -1126) (1126 . 1127) (1123 . 1126) (1121 . 1123) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -1121) (undo-tree-id924 . -1) (undo-tree-id925 . -1) 1122 (1118 . 1122) (#("s" 0 1 (fontified t face font-lock-variable-name-face)) . -1118) (undo-tree-id926 . -1) (undo-tree-id927 . -1) 1119 (1118 . 1119) (1104 . 1118) (1103 . 1105) (#("(" 0 1 (fontified nil)) . -1103) (1103 . 1104) (1102 . 1103) 1102) nil (23728 56943 984732 333000) 0 nil]) ((1821 . 1826) (#("s" 0 1 (fontified t)) . -1821) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (#("t" 0 1 (fontified t)) . -1822) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (#("y" 0 1 (fontified t)) . -1823) (undo-tree-id932 . -1) (undo-tree-id933 . -1) 1824 (1822 . 1824) (1814 . 1822) (1804 . 1814)) nil (23728 56773 970880 631000) 0 nil]) ((1805 . 1806) (t 23728 56686 447493 411000) 1804) nil (23728 56773 970884 412000) 0 nil]) ((773 . 774) (762 . 763)) nil (23728 56686 431916 158000) 0 nil]) ((#("'" 0 1 (fontified t face racket-selfeval-face)) . 762) (undo-tree-id911 . 1) (t 23728 56631 917631 916000)) nil (23728 56686 431924 861000) 0 nil]) ((#("'" 0 1 (fontified t)) . 754) (undo-tree-id910 . 1) (t 23728 56589 24402 895000)) nil (23728 56631 890656 290000) 0 nil]) ((520 . 532) (519 . 521) (#("\"" 0 1 (fontified nil)) . -519) (516 . 520) (#(" " 0 1 (fontified t)) . -516) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (#(":" 0 1 (fontified t face font-lock-builtin-face)) . -517) (undo-tree-id869 . -1) (undo-tree-id870 . -1) 518 (509 . 518) (508 . 510) (#("(" 0 1 (fontified nil)) . -508) (508 . 509) (507 . 509) (#("(" 0 1 (fontified nil)) . -507) (506 . 508) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 506) (undo-tree-id871 . -1) (undo-tree-id872 . -1) 507 (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 507) (undo-tree-id873 . -1) (undo-tree-id874 . -1) 508 (#("d" 0 1 (fontified t)) . -508) (undo-tree-id875 . -1) (undo-tree-id876 . -1) 509 (508 . 509) (507 . 509) (#("(" 0 1 (fontified nil)) . -507) (507 . 508) (506 . 508) (#("(" 0 1 (fontified nil)) . -506) (504 . 507) (502 . 504) (#("e" 0 1 (fontified t face racket-selfeval-face)) . -502) (undo-tree-id877 . -1) (undo-tree-id878 . -1) 503 (488 . 503) (487 . 489) (#("(" 0 1 (fontified nil)) . -487) (487 . 488) (484 . 487) (474 . 484) (#("T" 0 1 (fontified t face font-lock-variable-name-face)) . -474) (undo-tree-id879 . -1) (undo-tree-id880 . -1) 475 (474 . 475) (#("_" 0 1 (fontified t face font-lock-variable-name-face)) . -474) (undo-tree-id881 . -1) (undo-tree-id882 . -1) 475 (461 . 475) (#("s" 0 1 (fontified t)) . -461) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (#("t" 0 1 (fontified t)) . -462) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (#("y" 0 1 (fontified t)) . -463) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (#("l" 0 1 (fontified t)) . -464) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (#("e" 0 1 (fontified t)) . -465) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (#(" " 0 1 (fontified t)) . -466) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (#("'" 0 1 (fontified t)) . -467) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (#("F" 0 1 (fontified t face racket-selfeval-face)) . -468) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (#("o" 0 1 (fontified t face racket-selfeval-face)) . -469) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (#("o" 0 1 (fontified t face racket-selfeval-face)) . -470) (undo-tree-id901 . -1) (undo-tree-id902 . -1) 471 (469 . 471) (461 . 469) (460 . 462) (#("(" 0 1 (fontified nil)) . -460) (460 . 461) (460 . 461) 493) nil (23728 56589 11907 988000) 0 nil]) ((693 . 696) (#("e" 0 1 (fontified t face racket-selfeval-face)) . -693) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . 1) 694 (686 . 694) (679 . 686) (678 . 680) (#("(" 0 1 (fontified nil)) . -678) (678 . 679) (677 . 679) (#("(" 0 1 (fontified nil)) . -677) (676 . 678) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 676) (undo-tree-id906 . -1) (undo-tree-id907 . -1) 677 (676 . 678) (#("(" 0 1 (fontified nil)) . -676) (676 . 677) (661 . 676)) nil (23728 56589 11930 395000) 0 nil]) ((745 . 759) (744 . 746) (#("(" 0 1 (fontified nil)) . -744) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (743 . 745) (728 . 743)) nil (23728 56589 11936 791000) 0 nil] [nil nil ((755 . 760) (#(")" 0 1 (fontified nil)) . 755) (undo-tree-id680 . 1) (754 . 755) (#(" " 0 1 (fontified nil)) . -754) (754 . 755) (#(")" 0 1 (fontified nil)) . -754) (754 . 755) (752 . 754) (750 . 752) (#("l" 0 1 (fontified t)) . -750) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (#("i" 0 1 (fontified t)) . -751) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (#("n" 0 1 (fontified t)) . -752) (undo-tree-id685 . -1) (undo-tree-id686 . -1) 753 (745 . 753) (744 . 746) (#("(" 0 1 (fontified nil)) . -744) (743 . 745) (728 . 743)) ((#("
              " 0 1 (fontified t) 1 15 (fontified nil)) . 728) (undo-tree-id689 . -15) (undo-tree-id690 . -15) (undo-tree-id691 . -15) (undo-tree-id692 . -15) (undo-tree-id693 . -15) (undo-tree-id694 . -15) (undo-tree-id695 . -15) (undo-tree-id696 . -15) (undo-tree-id697 . -15) (undo-tree-id698 . -15) (undo-tree-id699 . -15) (undo-tree-id700 . -15) (undo-tree-id701 . -15) (undo-tree-id702 . -15) (undo-tree-id703 . -15) (undo-tree-id704 . -15) (undo-tree-id705 . -15) (undo-tree-id706 . -15) (undo-tree-id707 . -15) (undo-tree-id708 . -15) (undo-tree-id709 . -15) (undo-tree-id710 . -15) (undo-tree-id711 . -15) (undo-tree-id712 . -15) (undo-tree-id713 . -15) (undo-tree-id714 . -15) (undo-tree-id715 . -15) (undo-tree-id716 . -15) (undo-tree-id717 . -15) (#(",(" 0 1 (fontified nil) 1 2 (fontified nil)) . 743) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . 1) (undo-tree-id745 . -1) (undo-tree-id746 . 1) (undo-tree-id747 . -1) (undo-tree-id748 . 1) (undo-tree-id749 . -1) (744 . 745) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 744) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . 1) (undo-tree-id769 . -1) (undo-tree-id770 . 1) (undo-tree-id771 . 1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . 1) (undo-tree-id775 . 1) (undo-tree-id776 . -1) (undo-tree-id777 . 2) (undo-tree-id778 . -1) (undo-tree-id779 . 1) (undo-tree-id780 . -1) (undo-tree-id781 . 1) (undo-tree-id782 . -1) (#("when lin" 0 4 (fontified nil face font-lock-keyword-face) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 745) (undo-tree-id783 . -8) (undo-tree-id784 . -8) (undo-tree-id785 . -5) (undo-tree-id786 . -5) (undo-tree-id787 . -5) (undo-tree-id788 . -5) (undo-tree-id789 . -5) (undo-tree-id790 . -5) (undo-tree-id791 . -5) (undo-tree-id792 . -5) (undo-tree-id793 . -5) (undo-tree-id794 . -5) (undo-tree-id795 . -5) (undo-tree-id796 . -5) (undo-tree-id797 . 8) (undo-tree-id798 . -5) (undo-tree-id799 . 3) (undo-tree-id800 . -5) (750 . 753) (#("te" 0 2 (fontified nil)) . 750) (undo-tree-id801 . -2) (undo-tree-id802 . -2) (undo-tree-id803 . -2) (undo-tree-id804 . -2) (undo-tree-id805 . -2) (undo-tree-id806 . -2) (undo-tree-id807 . -2) (undo-tree-id808 . -2) (undo-tree-id809 . -2) (undo-tree-id810 . -2) (undo-tree-id811 . -2) (undo-tree-id812 . -2) (undo-tree-id813 . -2) (undo-tree-id814 . -2) (undo-tree-id815 . -2) (undo-tree-id816 . -2) (#("xt" 0 2 (fontified nil)) . 752) (undo-tree-id817 . -2) (undo-tree-id818 . -2) (undo-tree-id819 . 1) (undo-tree-id820 . -2) (undo-tree-id821 . -2) (undo-tree-id822 . -2) (undo-tree-id823 . -2) (undo-tree-id824 . -2) (undo-tree-id825 . -2) (undo-tree-id826 . -2) (undo-tree-id827 . -2) (undo-tree-id828 . -2) (undo-tree-id829 . -2) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (#(")" 0 1 (fontified nil)) . 754) (undo-tree-id834 . 1) (754 . 755) (#(" " 0 1 (fontified nil)) . 754) (undo-tree-id835 . 1) (754 . 755) (#(")" 0 1 (fontified nil)) . 754) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . 1) (undo-tree-id843 . 1) (undo-tree-id844 . 1) (undo-tree-id845 . 1) (undo-tree-id846 . 1) (undo-tree-id847 . 1) (undo-tree-id848 . -1) (755 . 756) (#(" text" 0 5 (fontified t)) . 755) (undo-tree-id849 . 5) (undo-tree-id850 . 4) (undo-tree-id851 . 3) (undo-tree-id852 . 2) (undo-tree-id853 . 1) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 2) (undo-tree-id859 . 1) (undo-tree-id860 . 3) (undo-tree-id861 . 2) (undo-tree-id862 . 4) (undo-tree-id863 . 3) (undo-tree-id864 . 5) (undo-tree-id865 . 4) (undo-tree-id866 . 5)) (23728 56494 364016 192000) 0 nil]) ((662 . 676) (#(" " 0 1 (fontified nil)) . 661) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (662 . 663) (t 23728 56415 668108 60000)) nil (23728 56494 366220 778000) 0 nil]) ((936 . 939)) nil (23728 56415 635662 197000) 0 nil]) ((913 . 914) (#(" " 0 1 (fontified t)) . 913)) nil (23728 56415 635675 174000) 0 nil]) ((866 . 867) (#(" " 0 1 (fontified t)) . 866) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 1)) nil (23728 56415 635702 542000) 0 nil]) ((836 . 837) (#(" " 0 1 (fontified t)) . 836) (undo-tree-id674 . 1) (undo-tree-id675 . 1) (undo-tree-id676 . 1)) nil (23728 56415 635717 26000) 0 nil]) ((791 . 792) (#("/" 0 1 (fontified t face font-lock-builtin-face)) . 791) (undo-tree-id677 . 1) (undo-tree-id678 . 1) (791 . 792) (#(" " 0 1 (fontified t)) . 791) (undo-tree-id679 . 1)) nil (23728 56415 635735 647000) 0 nil]) ((739 . 740)) nil (23728 56415 635741 676000) 0 nil]) (786) nil (23728 56415 635745 484000) 0 nil] [nil ([nil ([nil ([nil ([nil nil (883) (nil . #1=(undo-tree-canary)) (23728 56397 374650 533000) 0 nil]) ((883 . 884) (#("       " 0 7 (fontified nil)) . 883) (#("
" 0 1 (fontified t)) . -883) (undo-tree-id635 . -1) (undo-tree-id636 . -1) 846) ((883 . 884) (883 . 890) (#(" " 0 1 (fontified t)) . 883) (undo-tree-id657 . 1) (undo-tree-id658 . 1) (undo-tree-id659 . 1)) (23728 56397 374865 703000) 0 nil]) ((846 . 847) (#("          " 0 10 (fontified nil)) . 846) (#("
" 0 1 (fontified t)) . -846) 823) ((846 . 847) (846 . 856) (#(" " 0 1 (fontified t)) . 846) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . 1)) (23728 56397 641469 794000) 0 nil]) ((823 . 824) (#("       " 0 7 (fontified nil)) . 823) (#("
" 0 1 (fontified t)) . -823) 787) ((823 . 824) (823 . 830) (#(" " 0 1 (fontified t)) . 823) (undo-tree-id665 . 1) (undo-tree-id666 . 1) (undo-tree-id667 . 1)) (23728 56397 906860 632000) 0 nil]) ((787 . 788) (#("         " 0 9 (fontified nil)) . 787) (#("
" 0 1 (fontified t)) . -787) 786) ((787 . 788) (787 . 796) (#(" " 0 1 (fontified t)) . 787) (undo-tree-id668 . 1) (undo-tree-id669 . 1) (undo-tree-id670 . 1)) (23728 56398 160668 286000) 0 nil]) ((696 . 712) (680 . 696) (679 . 681) (#("(" 0 1 (fontified nil)) . -679) (679 . 680) (#("*" 0 1 (fontified t face font-lock-builtin-face)) . -679) (undo-tree-id637 . -1) (undo-tree-id638 . -1) 680 (679 . 680) (678 . 679) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 678) (undo-tree-id639 . -1) (undo-tree-id640 . -1) 679 (678 . 680) (#("(" 0 1 (fontified nil)) . -678) (678 . 679) (664 . 678) (663 . 665) (#("(" 0 1 (fontified nil)) . -663) (663 . 664) (#("I" 0 1 (fontified t)) . -663) (undo-tree-id641 . -1) (undo-tree-id642 . -1) 664 (663 . 664) (#("w" 0 1 (fontified t)) . -663) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (#("h" 0 1 (fontified t)) . -664) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (#("e" 0 1 (fontified t)) . -665) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -666) (undo-tree-id649 . -1) (undo-tree-id650 . -1) 667 (662 . 667) (659 . 662) (658 . 660) (#("(" 0 1 (fontified nil)) . -658) (657 . 659)) nil (23728 56398 516068 674000) 0 nil]) ((#("'" 0 1 (fontified t)) . -657) (undo-tree-id651 . -1) (undo-tree-id652 . -1) 658 (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 658) (undo-tree-id653 . -1) (undo-tree-id654 . -1) 659 (658 . 660) (#("(" 0 1 (fontified nil)) . -658) (657 . 659) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 657) (undo-tree-id655 . -1) (undo-tree-id656 . -1) 658 (657 . 659) (#("(" 0 1 (fontified nil)) . -657) (657 . 658)) nil (23728 56397 374829 92000) 0 nil] [nil nil ((#("c" 0 1 (fontified t)) . -664) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (#("l" 0 1 (fontified t)) . -665) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (#("a" 0 1 (fontified t)) . -666) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (#("s" 0 1 (fontified t)) . -667) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . 1) (#("s" 0 1 (fontified t face font-lock-builtin-face)) . -668) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . 1) 669 (664 . 669) (663 . 665) (#("(" 0 1 (fontified nil)) . -663) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (663 . 664) (662 . 664) (#("(" 0 1 (fontified nil)) . -662) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (662 . 663) (#("C" 0 1 (fontified nil)) . -662) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . 1) (#("C" 0 1 (fontified t)) . -663) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . 1) 664 (659 . 664) (658 . 660) (#("(" 0 1 (fontified nil)) . -658) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (658 . 659) (#("l" 0 1 (fontified t)) . -658) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . 1) 659 (658 . 659) (657 . 658)) ((#("`" 0 1 (fontified nil)) . 657) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (#("l" 0 1 (fontified nil)) . 658) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . 1) (undo-tree-id441 . 1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (658 . 659) (#("(" 0 1 (fontified nil)) . 658) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . 1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (658 . 659) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 658) (undo-tree-id449 . 1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . 1) (undo-tree-id459 . 1) (undo-tree-id460 . 1) (undo-tree-id461 . 1) (undo-tree-id462 . 1) (undo-tree-id463 . 1) (undo-tree-id464 . 1) (undo-tree-id465 . 1) (undo-tree-id466 . 1) (undo-tree-id467 . 1) (undo-tree-id468 . 1) (undo-tree-id469 . 1) (undo-tree-id470 . 1) (undo-tree-id471 . 1) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . -2) (undo-tree-id478 . -1) (undo-tree-id479 . -2) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -2) (undo-tree-id490 . -1) (undo-tree-id491 . -2) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . -1) (undo-tree-id504 . 1) (undo-tree-id505 . -1) (undo-tree-id506 . 1) (undo-tree-id507 . -1) (#("li CC" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 659) (undo-tree-id508 . -5) (undo-tree-id509 . -5) (undo-tree-id510 . 2) (undo-tree-id511 . 1) (undo-tree-id512 . -3) (undo-tree-id513 . -3) (undo-tree-id514 . -3) (undo-tree-id515 . -3) (undo-tree-id516 . -3) (undo-tree-id517 . -3) (undo-tree-id518 . -3) (undo-tree-id519 . -3) (undo-tree-id520 . -3) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -3) (undo-tree-id524 . -3) (undo-tree-id525 . -3) (undo-tree-id526 . -3) (undo-tree-id527 . -3) (undo-tree-id528 . -3) (undo-tree-id529 . -3) (undo-tree-id530 . -3) (undo-tree-id531 . -3) (undo-tree-id532 . -3) (undo-tree-id533 . -3) (undo-tree-id534 . 2) (undo-tree-id535 . -3) (undo-tree-id536 . 2) (undo-tree-id537 . -3) (undo-tree-id538 . 2) (undo-tree-id539 . -3) (662 . 664) (#("(" 0 1 (fontified nil)) . 662) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . 1) (662 . 663) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 662) (undo-tree-id545 . 1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . 1) (undo-tree-id554 . 1) (undo-tree-id555 . 1) (undo-tree-id556 . 1) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . 1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (undo-tree-id569 . -2) (undo-tree-id570 . -1) (undo-tree-id571 . -2) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -2) (undo-tree-id578 . -1) (undo-tree-id579 . -2) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . -1) (undo-tree-id588 . 1) (undo-tree-id589 . -1) (undo-tree-id590 . 1) (undo-tree-id591 . -1) (#("(" 0 1 (fontified nil)) . 663) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . 1) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (663 . 664) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 663) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 2) (undo-tree-id615 . 2) (undo-tree-id616 . 2) (undo-tree-id617 . -2) (undo-tree-id618 . -1) (undo-tree-id619 . -2) (undo-tree-id620 . -1) (undo-tree-id621 . -2) (undo-tree-id622 . -1) (undo-tree-id623 . -2) (undo-tree-id624 . -1) (undo-tree-id625 . 2) (undo-tree-id626 . 2) (undo-tree-id627 . -1) (undo-tree-id628 . 1) (undo-tree-id629 . -1) (undo-tree-id630 . 1) (undo-tree-id631 . -2) (#("class" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil face font-lock-builtin-face)) . 664) (undo-tree-id632 . 2) (undo-tree-id633 . 1) (undo-tree-id634 . 5) (664 . 669)) (23728 56332 82646 239000) 0 nil]) ((#("(styled 'li 'FooterItem)" 0 8 (fontified t) 8 11 (fontified t face racket-selfeval-face) 11 12 (fontified t) 12 23 (fontified t face racket-selfeval-face) 23 24 (fontified t)) . 657) (undo-tree-id382 . 24) (undo-tree-id383 . 24) (undo-tree-id384 . -1) (undo-tree-id385 . 23) (undo-tree-id386 . -23) (undo-tree-id387 . 1) (undo-tree-id388 . -24) (undo-tree-id389 . -23) (undo-tree-id390 . -24) (undo-tree-id391 . -1) (undo-tree-id392 . -23) (undo-tree-id393 . -24) (undo-tree-id394 . -1) (undo-tree-id395 . -24) (undo-tree-id396 . -24) (undo-tree-id397 . -24) (undo-tree-id398 . -23) (undo-tree-id399 . -24) (undo-tree-id400 . -1)) nil (23728 56332 85832 68000) 0 nil] [nil ([nil nil ((#(")" 0 1 (fontified nil)) . -701) (701 . 702) (#(" " 0 1 (fontified nil)) . -701) (701 . 702) (#(")" 0 1 (fontified nil)) . -701) (701 . 702)) ((#(")" 0 1 (fontified nil)) . 701) (701 . 702) (#(" " 0 1 (fontified nil)) . 701) (701 . 702) (#(")" 0 1 (fontified nil)) . 701) (701 . 702)) (23728 56274 716990 210000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((701 . 702) (#("r" 0 1 (fontified t)) . 701) (undo-tree-id325 . 1)) ((701 . 702) (#(")" 0 1 (fontified t)) . 701) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . 1) (undo-tree-id339 . 1) (undo-tree-id340 . 1) (undo-tree-id341 . 1) (undo-tree-id342 . 1) (undo-tree-id343 . 1) (undo-tree-id344 . 1) (undo-tree-id345 . -1) (t 23728 56191 291763 392000)) (23728 56191 273138 969000) 0 nil]) ((701 . 702) (t 23728 56172 68446 763000)) ((#("r" 0 1 (fontified t)) . 701) (undo-tree-id346 . 1) (undo-tree-id347 . 1)) (23728 56235 541614 795000) 0 nil]) ((705 . 706)) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 705) (undo-tree-id348 . 1) (undo-tree-id349 . 1)) (23728 56235 860660 751000) 0 nil]) (849) (nil . #1#) (23728 56236 797385 616000) 0 nil]) ((849 . 850) (#("       " 0 7 (fontified nil)) . 849) (#("
" 0 1 (fontified t)) . -849) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 812) ((849 . 850) (849 . 856) (#(" " 0 1 (fontified t)) . 849) (undo-tree-id350 . 1)) (23728 56237 138813 642000) 0 nil]) ((812 . 813) (#("          " 0 10 (fontified nil)) . 812) (#("
" 0 1 (fontified t)) . -812) 789) ((812 . 813) (812 . 822) (#(" " 0 1 (fontified t)) . 812) (undo-tree-id351 . -1) (undo-tree-id352 . 1)) (23728 56237 609800 410000) 0 nil]) ((789 . 790) (#("       " 0 7 (fontified nil)) . 789) (#("
" 0 1 (fontified t)) . -789) 753) ((789 . 790) (789 . 796) (#(" " 0 1 (fontified t)) . 789) (undo-tree-id353 . 1)) (23728 56237 839751 813000) 0 nil]) ((753 . 754) (#("         " 0 9 (fontified nil)) . 753) (#("
" 0 1 (fontified t)) . -753) 713) ((753 . 754) (753 . 762) (#(" " 0 1 (fontified t)) . 753)) (23728 56274 717575 317000) 0 nil]) ((#(" " 0 1 (fontified t)) . 655) (undo-tree-id354 . 1)) ((655 . 656)) (23728 56288 749334 58000) 0 nil]) ((#(" " 0 1 (fontified t)) . 651)) nil (23728 56282 456956 675000) 0 nil]) ((656 . 658) (650 . 652)) nil (23728 56172 44341 317000) 0 nil]) ((679 . 680) (#(")" 0 1 (fontified t)) . -654) 650) nil (23728 56172 44347 297000) 0 nil] [nil ([nil nil ((650 . 651) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 650) (undo-tree-id298 . 1) (undo-tree-id299 . 1)) ((650 . 651) (#("'" 0 1 (fontified t face racket-selfeval-face)) . 650) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1)) (23728 56124 785258 636000) 0 nil]) ((650 . 651)) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 650) (undo-tree-id319 . 1) (undo-tree-id320 . 1) (undo-tree-id321 . 1)) (23728 56124 785482 222000) 0 nil]) ((692 . 696) (691 . 693) (#("(" 0 1 (fontified nil)) . -691) (691 . 692) (#("#" 0 1 (fontified t)) . -691) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 692 (690 . 692) (#(")" 0 1 (fontified nil)) . 691) (690 . 691) (686 . 690) (685 . 687) (#("(" 0 1 (fontified nil)) . -685) (685 . 686) (680 . 685)) nil (23728 56125 551590 577000) 0 nil]) ((668 . 679) (667 . 668) (660 . 667)) nil (23728 56124 785278 951000) 0 nil]) ((657 . 660) (656 . 658) (#("(" 0 1 (fontified nil)) . -656) (655 . 657) (#(")" 0 1 (fontified nil)) . 655) (654 . 655) (#(" " 0 1 (fontified nil)) . -654) (654 . 655) (#(")" 0 1 (fontified nil)) . -654) (654 . 655) (650 . 654) (#("h" 0 1 (fontified t)) . -650) (undo-tree-id302 . -1) (undo-tree-id303 . -1) 651 (650 . 651) (649 . 651) (#("(" 0 1 (fontified nil)) . -649) (649 . 650) (644 . 649) (#(")" 0 1 (fontified nil)) . 644) (643 . 644) (#(" " 0 1 (fontified nil)) . -643) (643 . 644) (#(")" 0 1 (fontified nil)) . -643) (643 . 644) (640 . 643) (#("t" 0 1 (fontified t)) . -640) (undo-tree-id304 . -1) (undo-tree-id305 . -1) 641 (624 . 641) (623 . 625) (#("(" 0 1 (fontified nil)) . -623) (618 . 624) (617 . 619) (#("(" 0 1 (fontified nil)) . -617) (617 . 618) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 617) (undo-tree-id306 . -1) (undo-tree-id307 . -1) 618 (617 . 619) (#("(" 0 1 (fontified nil)) . -617) (617 . 618) (614 . 617) 606) nil (23728 56124 785303 720000) 0 nil]) ((585 . 606) (#(" " 0 1 (fontified t)) . 585)) nil (23728 56124 785311 176000) 0 nil]) ((585 . 586) (#("              " 0 14 (fontified nil)) . 585) (#("
" 0 1 (fontified t)) . -585) 569) nil (23728 56124 785313 900000) 0 nil]) ((548 . 569) (#(" " 0 1 (fontified t)) . 548)) nil (23728 56124 785316 280000) 0 nil]) ((548 . 549) (#("              " 0 14 (fontified nil)) . 548) (#("
" 0 1 (fontified t)) . -548) (undo-tree-id308 . -1) (undo-tree-id309 . -1) 527) nil (23728 56124 785336 367000) 0 nil]) ((506 . 527) (#(" " 0 1 (fontified t)) . 506)) nil (23728 56124 785338 947000) 0 nil]) ((506 . 507) (#("              " 0 14 (fontified nil)) . 506) (#("
" 0 1 (fontified t)) . -506) 467) nil (23728 56124 785341 462000) 0 nil]) ((467 . 468) (#("  " 0 2 (fontified nil)) . 467) (#("
" 0 1 (fontified t)) . -467) 460 (t 23728 55944 888467 237000)) nil (23728 56124 785344 414000) 0 nil] [nil nil ((508 . 509) (#("              " 0 14 (fontified nil)) . 508) (undo-tree-id295 . 14) (undo-tree-id296 . 14) (#("
" 0 1 (fontified t)) . -508) 468 (t 23728 55944 888467 237000)) ((508 . 509) (508 . 522) (#(" " 0 1 (fontified t)) . 508) (undo-tree-id297 . 1)) (23728 56013 302276 513000) 0 nil] [nil nil ((603 . 610) (602 . 604) (#("(" 0 1 (fontified nil)) . -602) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (602 . 603) (599 . 602) (t 23728 55944 888467 237000) 599) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 599) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . 3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (#("(" 0 1 (fontified nil)) . 602) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (602 . 603) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 602) (undo-tree-id259 . 1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . 1) (undo-tree-id264 . 2) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . -1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (#("define " 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t)) . 603) (undo-tree-id284 . -6) (undo-tree-id285 . -6) (undo-tree-id286 . 7) (undo-tree-id287 . 6) (undo-tree-id288 . 5) (undo-tree-id289 . 4) (undo-tree-id290 . 3) (undo-tree-id291 . 2) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (undo-tree-id294 . 1)) (23728 56002 474596 575000) 0 nil]) ((#("#:text " 0 6 (fontified t face racket-keyword-argument-face) 6 7 (fontified t)) . 760) (undo-tree-id240 . 7) (undo-tree-id241 . 6) (undo-tree-id242 . 7) (undo-tree-id243 . 7) (t 23728 55916 525109 47000)) nil (23728 56013 302532 591000) 0 nil] [nil nil ((#("#:text link-text " 0 6 (fontified t face racket-keyword-argument-face) 6 7 (fontified t) 7 16 (fontified t) 16 17 (fontified t)) . 760) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 17) (undo-tree-id239 . 16) (t 23728 55916 525109 47000)) ((760 . 777)) (23728 55942 447361 455000) 0 nil]) ((1029 . 1030) (#("                " 0 16 (fontified nil)) . 1029) (#("
" 0 1 (fontified t)) . -1029) 1028) nil (23728 55942 447551 521000) 0 nil]) ((1298 . 1299) (#("                " 0 16 (fontified nil)) . 1298) (#("
" 0 1 (fontified t)) . -1298) 1297) nil (23728 55916 513208 22000) 0 nil] [nil nil ((1431 . 1448) (#(" " 0 1 (fontified t)) . 1431) (undo-tree-id229 . -1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1)) ((1431 . 1432) (#("
                " 0 17 (fontified t)) . 1431) (undo-tree-id233 . 17)) (23728 55893 539369 276000) 0 nil] [nil nil ((1448 . 1449) (#(" " 0 1 (fontified t face font-lock-string-face)) . 1448) (undo-tree-id225 . 1)) ((1448 . 1449) (#("
" 0 1 (fontified t face font-lock-string-face)) . 1448) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . 1)) (23728 55881 456318 293000) 0 nil]) ((1431 . 1432) (#("                " 0 16 (fontified nil)) . 1431) (#("
" 0 1 (fontified t)) . -1431) 1430) nil (23728 55893 539486 872000) 0 nil]) ((1431 . 1448) (#(" " 0 1 (fontified t)) . 1431)) nil (23728 55881 456328 510000) 0 nil]) ((1419 . 1420) (#("                 " 0 1 (fontified nil) 1 17 (fontified nil)) . 1419) (#("
" 0 1 (fontified t)) . -1420) 1419) nil (23728 55881 456331 314000) 0 nil]) ((#("#:link-url \"\"" 0 10 (fontified t face racket-keyword-argument-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face)) . 1420)) nil (23728 55881 456335 617000) 0 nil]) ((nil rear-nonsticky nil 1547 . 1548) (nil fontified nil 1496 . 1548) (1496 . 1548) 1495) nil (23728 55881 456338 251000) 0 nil]) ((1495 . 1497) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -1495) (1495 . 1496)) nil (23728 55881 456340 610000) 0 nil]) ((#("https://gitlab.com/codesections/codesections-website" 0 17 (fontified t face font-lock-string-face) 17 46 (fontified t face font-lock-string-face) 46 52 (fontified t face font-lock-string-face)) . 1432)) nil (23728 55881 456342 228000) 0 nil]) ((1298 . 1315) (#(" " 0 1 (fontified t)) . 1298)) nil (23728 55881 456344 96000) 0 nil]) ((1286 . 1287) (#("                 " 0 1 (fontified nil) 1 14 (fontified nil) 14 17 (fontified nil)) . 1286) (#("
" 0 1 (fontified t)) . -1287) 1286) nil (23728 55881 456346 819000) 0 nil]) ((#("#:link-url \"\"" 0 10 (fontified t face racket-keyword-argument-face) 10 11 (fontified t) 11 13 (fontified t face font-lock-string-face)) . 1287)) nil (23728 55881 456348 991000) 0 nil]) ((nil rear-nonsticky nil 1384 . 1385) (nil fontified nil 1349 . 1385) (1349 . 1385) 1348) nil (23728 55881 456351 477000) 0 nil]) ((1348 . 1350) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -1348) (1348 . 1349)) nil (23728 55881 456355 478000) 0 nil]) ((#("https://www.codesections.com/privacy" 0 36 (fontified t face font-lock-string-face)) . 1299)) nil (23728 55881 456357 369000) 0 nil]) ((1152 . 1153) (#("                 " 0 1 (fontified nil) 1 3 (fontified nil) 3 17 (fontified nil)) . 1152) (#("
" 0 1 (fontified t)) . -1153) 1152) nil (23728 55881 456359 853000) 0 nil]) ((#("#:link-url \"\"" 0 9 (fontified t face racket-keyword-argument-face) 9 10 (fontified t face racket-keyword-argument-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face)) . 1153)) nil (23728 55881 456361 598000) 0 nil]) ((nil rear-nonsticky nil 1281 . 1282) (nil fontified nil 1246 . 1282) (1246 . 1282) 1245) nil (23728 55881 456364 116000) 0 nil]) ((1245 . 1247) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -1245) (1245 . 1246)) nil (23728 55881 456366 520000) 0 nil]) ((#("https://www.codesections.com/rss.xml" 0 2 (fontified t face font-lock-string-face) 2 36 (fontified t face font-lock-string-face)) . 1165)) nil (23728 55881 456368 21000) 0 nil]) ((1029 . 1046) (#(" " 0 1 (fontified t)) . 1029)) nil (23728 55881 456369 860000) 0 nil] [nil nil ((1017 . 1023) (#(" " 0 1 (fontified t)) . 1017) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 1)) ((1017 . 1018) (#("
     " 0 6 (fontified t)) . 1017) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . 6)) (23728 55792 143306 694000) 0 nil]) ((1017 . 1018) (#("                " 0 16 (fontified nil)) . 1017) (undo-tree-id161 . 16) (undo-tree-id162 . 16) (undo-tree-id163 . 16) (#("
" 0 1 (fontified t)) . -1017) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) 1016) nil (23728 55792 144014 689000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1017) (undo-tree-id167 . 1)) nil (23728 55792 143349 924000) 0 nil]) ((#("#:link-url \"\"" 0 10 (fontified t face racket-keyword-argument-face) 10 11 (fontified t) 11 13 (fontified t face font-lock-string-face)) . 1018)) nil (23728 55792 143359 418000) 0 nil]) ((nil rear-nonsticky nil 1117 . 1118) (nil fontified nil 1082 . 1118) (1082 . 1118) 1081) nil (23728 55792 143366 468000) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-string-face)) . -1082) (undo-tree-id168 . -1) (undo-tree-id169 . -1) 1083 (1082 . 1083)) nil (23728 55792 143378 299000) 0 nil]) ((1081 . 1083) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -1081) (1081 . 1082)) nil (23728 55792 143385 578000) 0 nil]) ((#("https://www.codesections.com/license" 0 36 (fontified t face font-lock-string-face)) . 1030)) nil (23728 55792 143389 854000) 0 nil]) ((905 . 906) (#("                 " 0 1 (fontified nil) 1 13 (fontified nil) 13 14 (fontified nil) 14 16 (fontified nil) 16 17 (fontified nil)) . 905) (#("
" 0 1 (fontified t)) . -906) 905) nil (23728 55792 143396 551000) 0 nil]) ((#("#:link-url \"\"" 0 10 (fontified t face racket-keyword-argument-face) 10 11 (fontified t) 11 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face)) . 906)) nil (23728 55792 143401 580000) 0 nil]) ((nil rear-nonsticky nil 998 . 999) (nil fontified nil 957 . 999) (957 . 999) 956) nil (23728 55792 143407 960000) 0 nil]) ((956 . 958) (#("[" 0 1 (fontified nil face font-lock-string-face)) . -956) (956 . 957)) nil (23728 55792 143417 562000) 0 nil]) ((#("https://www.codesections.com/about#contact" 0 25 (fontified t face font-lock-string-face) 25 42 (fontified t face font-lock-string-face)) . 918)) nil (23728 55792 143422 168000) 0 nil]) ((767 . 776) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 767) (undo-tree-id170 . -1) (undo-tree-id171 . -1) 768 (#("s" 0 1 (fontified t)) . -768) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("t" 0 1 (fontified t)) . -769) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (#("r" 0 1 (fontified t)) . -770) (undo-tree-id176 . -1) (undo-tree-id177 . -1) 771 (#("i" 0 1 (fontified t)) . -771) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("n" 0 1 (fontified t)) . -772) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("g" 0 1 (fontified t face font-lock-builtin-face)) . -773) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("-" 0 1 (fontified t)) . -774) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("a" 0 1 (fontified t)) . -775) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("p" 0 1 (fontified t)) . -776) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("p" 0 1 (fontified t)) . -777) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("e" 0 1 (fontified t)) . -778) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (#("n" 0 1 (fontified t)) . -779) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (#("d" 0 1 (fontified t face font-lock-builtin-face)) . -780) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#(" " 0 1 (fontified t)) . -781) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (#("l" 0 1 (fontified t)) . -782) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (#("i" 0 1 (fontified t)) . -783) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#("n" 0 1 (fontified t)) . -784) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("k" 0 1 (fontified t face font-lock-builtin-face)) . -785) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (#("-" 0 1 (fontified t)) . -786) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#("t" 0 1 (fontified t)) . -787) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (#("e" 0 1 (fontified nil)) . -788) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("x" 0 1 (fontified nil)) . -789) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (#("t" 0 1 (fontified t)) . -790) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (#(" " 0 1 (fontified t)) . -791) (undo-tree-id218 . -1) (undo-tree-id219 . -1) 792 (791 . 792) (773 . 791) (768 . 773) (767 . 769) (#("(" 0 1 (fontified nil)) . -767) (767 . 768) (763 . 767) (760 . 763) (#("t" 0 1 (fontified t)) . -760) (undo-tree-id220 . -1) (undo-tree-id221 . -1) 761 (759 . 761)) nil (23728 55792 143627 362000) 0 nil] [nil ([nil nil ((#("
" 0 1 (fontified t)) . 460) (undo-tree-id65 . 1) (undo-tree-id66 . 1) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . 1) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . 1) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1)) ((460 . 461)) (23728 55609 154457 77000) 0 nil]) ((#("(define
  (FooterItem #:link-text [link-text #f]
              #:type [link-type #f]
              #:text [text #f]
              . props)

  `(li ,(when (equal? (current-poly-target) 'html)
         '((style \"display: inline-block\")))
       ,(when (and link-text)
          (Links #:type link-type ))
       ,(when text text)))
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 21 (fontified t) 21 22 (fontified t) 22 33 (fontified t face racket-keyword-argument-face) 33 45 (fontified t) 45 47 (fontified t face racket-selfeval-face) 47 49 (fontified t) 49 63 (fontified t) 63 68 (fontified t face racket-keyword-argument-face) 68 69 (fontified t face racket-keyword-argument-face) 69 81 (fontified t) 81 83 (fontified t face racket-selfeval-face) 83 85 (fontified t) 85 99 (fontified t) 99 105 (fontified t face racket-keyword-argument-face) 105 112 (fontified t) 112 114 (fontified t face racket-selfeval-face) 114 149 (fontified t) 149 153 (fontified t face font-lock-keyword-face) 153 155 (fontified t) 155 161 (fontified t face font-lock-builtin-face) 161 184 (fontified t) 184 189 (fontified t face racket-selfeval-face) 189 209 (fontified t) 209 232 (fontified t face font-lock-string-face) 232 236 (fontified t) 236 245 (fontified t) 245 247 (fontified t face font-lock-keyword-face) 247 249 (fontified t face font-lock-keyword-face) 249 251 (fontified t) 251 254 (fontified t face font-lock-keyword-face) 254 256 (fontified t) 256 266 (fontified t) 266 282 (fontified t) 282 283 (fontified t) 283 289 (fontified t face racket-keyword-argument-face) 289 303 (fontified t) 303 312 (fontified t) 312 316 (fontified t face font-lock-keyword-face) 316 330 (fontified t)) . 460) (undo-tree-id90 . -303) (undo-tree-id91 . -303) (undo-tree-id92 . -25) (undo-tree-id93 . -85) (undo-tree-id94 . 52) (undo-tree-id95 . 53) (undo-tree-id96 . 52) (undo-tree-id97 . 52) (undo-tree-id98 . 52) (undo-tree-id99 . 52) (undo-tree-id100 . 52) (undo-tree-id101 . 52) (undo-tree-id102 . -278) (undo-tree-id103 . -282) (undo-tree-id104 . -282) (undo-tree-id105 . -282) (undo-tree-id106 . 304) (undo-tree-id107 . 263) (undo-tree-id108 . -282) (undo-tree-id109 . -26) (undo-tree-id110 . -26) (undo-tree-id111 . -23) (undo-tree-id112 . -23) (undo-tree-id113 . -23) (undo-tree-id114 . -282) (undo-tree-id115 . -282) (undo-tree-id116 . 31) (undo-tree-id117 . 31) (undo-tree-id118 . 31) (undo-tree-id119 . 31) (undo-tree-id120 . -282) (undo-tree-id121 . -299) (undo-tree-id122 . -299) (undo-tree-id123 . -299) (undo-tree-id124 . 305) (undo-tree-id125 . 306) (undo-tree-id126 . -25) (undo-tree-id127 . 305) (undo-tree-id128 . 305) (undo-tree-id129 . 305) (undo-tree-id130 . 305) (undo-tree-id131 . -25) (undo-tree-id132 . -303) (undo-tree-id133 . -303) (undo-tree-id134 . -303) (undo-tree-id135 . 27) (undo-tree-id136 . 64) 763) ((460 . 790)) (23728 55609 155252 831000) 0 nil]) ((#("(define Link (curry Links #:list-of-links links))
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 12 (fontified t face font-lock-variable-name-face) 12 14 (fontified t) 14 19 (fontified t face font-lock-builtin-face) 19 26 (fontified t) 26 41 (fontified t face racket-keyword-argument-face) 41 47 (fontified t) 47 48 (fontified t rear-nonsticky t) 48 49 (fontified t) 49 50 (fontified t)) . 459) (undo-tree-id137 . -47) (undo-tree-id138 . -17) (undo-tree-id139 . -17) 476) nil (23728 55609 739025 839000) 0 nil]) ((508 . 509) 459) nil (23728 55609 154656 614000) 0 nil]) ((458 . 459)) nil (23728 55609 154661 739000) 0 nil]) ((506 . 507) (#(")" 0 1 (fontified t)) . -470) (470 . 471) (#(")" 0 1 (fontified t)) . -465) (465 . 466) (#(")" 0 1 (fontified t)) . -459) (458 . 460) (#("(" 0 1 (fontified nil)) . -458) (458 . 459)) nil (23728 55609 154675 167000) 0 nil]) (504) nil (23728 55609 154683 525000) 0 nil]) ((nil rear-nonsticky nil 504 . 505) (nil fontified nil 458 . 505) (458 . 505)) nil (23728 55609 154690 476000) 0 nil]) ((758 . 759)) nil (23728 55609 154695 388000) 0 nil]) ((741 . 742) (#("                 " 0 1 (fontified nil) 1 17 (fontified nil)) . 741) (undo-tree-id140 . 16) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -17) (undo-tree-id144 . -17) (undo-tree-id145 . -17) (undo-tree-id146 . -17) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (#("
" 0 1 (fontified t)) . -742) (undo-tree-id149 . 1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 741) nil (23728 55609 154758 851000) 0 nil]) ((#("#:text  link-url" 0 1 (fontified t face racket-keyword-argument-face) 1 6 (fontified t face racket-keyword-argument-face) 6 16 (fontified t)) . 742) (undo-tree-id154 . 10)) nil (23728 55609 154771 296000) 0 nil]) ((#("                #:link-text link-text
" 0 16 (fontified t) 16 27 (fontified t face racket-keyword-argument-face) 27 38 (fontified t)) . 759) (undo-tree-id155 . -22) (undo-tree-id156 . -22) 781) nil (23728 55609 154784 482000) 0 nil]) ((744 . 748) (#("-url" 0 1 (fontified t face racket-keyword-argument-face) 1 4 (fontified t face racket-keyword-argument-face)) . 744) (undo-tree-id157 . 4)) nil (23728 55609 154793 947000) 0 nil] [nil nil ((#(":-" 0 1 (fontified t face racket-keyword-argument-face) 1 2 (fontified t face racket-keyword-argument-face)) . 743) (undo-tree-id47 . 1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 2) (undo-tree-id54 . 2) (undo-tree-id55 . 1) (undo-tree-id56 . 2) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . 2) (undo-tree-id60 . 2) (undo-tree-id61 . 2) (undo-tree-id62 . 2) (undo-tree-id63 . 1) (undo-tree-id64 . 2) 744) ((743 . 745)) (23728 55501 242897 571000) 0 nil] [nil nil ((#("-" 0 1 (fontified t face racket-keyword-argument-face)) . 744) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1)) ((744 . 745)) (23728 55498 858052 601000) 0 nil]) ((#("link" 0 4 (fontified t face racket-keyword-argument-face)) . 744) (undo-tree-id10 . 4)) nil (23728 55501 242996 648000) 0 nil]) ((#("url " 0 4 (fontified t)) . 714) (undo-tree-id11 . 4) (undo-tree-id12 . 4) (undo-tree-id13 . 4) (undo-tree-id14 . 4) (undo-tree-id15 . 4) (undo-tree-id16 . 4) (undo-tree-id17 . 4) (undo-tree-id18 . 4) (undo-tree-id19 . 4) (undo-tree-id20 . 4) (undo-tree-id21 . 4)) nil (23728 55498 858071 686000) 0 nil]) ((#("-" 0 1 (fontified t)) . 714) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1)) nil (23728 55498 858084 583000) 0 nil]) ((#("link" 0 4 (fontified t)) . 714) (undo-tree-id33 . 4) (undo-tree-id34 . 3) (undo-tree-id35 . 4) (undo-tree-id36 . 4) (undo-tree-id37 . 3) (undo-tree-id38 . 4) (undo-tree-id39 . 4)) nil (23728 55498 858093 686000) 0 nil]) ((480 . 481) (#("               " 0 1 (fontified nil) 1 15 (fontified nil)) . 480) (undo-tree-id40 . 14) (#("
" 0 1 (fontified t)) . -481) (undo-tree-id41 . 1) 480) nil (23728 55498 858098 925000) 0 nil]) ((#("#:link-url  [link-url #f]" 0 10 (fontified t face racket-keyword-argument-face) 10 19 (fontified t) 19 22 (fontified t) 22 24 (fontified t face racket-selfeval-face) 24 25 (fontified t)) . 481)) nil (23728 55498 858100 989000) 0 nil]) ((#("link-" 0 5 (fontified t face racket-keyword-argument-face)) . 1366)) nil (23728 55498 858102 627000) 0 nil]) ((#("link-" 0 5 (fontified t face racket-keyword-argument-face)) . 868) (undo-tree-id42 . 5) (undo-tree-id43 . 5) (undo-tree-id44 . 5)) nil (23728 55498 858109 103000) 0 nil]) ((#("link-" 0 5 (fontified t face racket-keyword-argument-face)) . 564) (undo-tree-id45 . 5) (undo-tree-id46 . 4) (t 23728 55231 523669 162000)) nil (23728 55498 858113 300000) 0 nil]) ((794 . 795) (t 23728 55200 240497 451000)) nil (23728 55231 507869 965000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-string-face)) . 66) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (t 23728 55179 570605 750000)) nil (23728 55200 232435 523000) 0 nil]) ((66 . 71) (#("a" 0 1 (fontified t face font-lock-string-face)) . -66) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 67 (65 . 67) (62 . 65) (#("l" 0 1 (fontified t face font-lock-string-face)) . -62) (undo-tree-id24 . -1) (undo-tree-id25 . -1) 63 (62 . 63) (61 . 63) (#("\"" 0 1 (fontified nil)) . -61) (61 . 62) (#(":" 0 1 (fontified t face font-lock-builtin-face)) . -61) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 62 (61 . 62) (52 . 61) (52 . 53) 68) nil (23728 55179 557962 52000) 0 nil] [nil nil ((774 . 775)) ((#("s" 0 1 (fontified t)) . 774) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (undo-tree-id21 . -1)) (23728 55152 167256 357000) 0 nil]) ((#("
" 0 1 (fontified t)) . 439) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1)) nil (23728 55152 167561 695000) 0 nil]) ((#("(define (Link
         #:link-url  [link-url #f]
         #:link-text [link-text #f]
         #:link-type [link-type #f]
         . props)
  (case (current-poly-target)
    [(html) 
     `(a ((href ,link-url)
          ,(when link-type `(type ,link-type)))
         ,link-text)]
    [else `(,link-text \" [\" ,link-url \"]\")])
  )
" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 9 (fontified t) 9 13 (fontified t face font-lock-function-name-face) 13 23 (fontified t) 23 33 (fontified t face racket-keyword-argument-face) 33 45 (fontified t) 45 47 (fontified t face racket-selfeval-face) 47 58 (fontified t) 58 69 (fontified t face racket-keyword-argument-face) 69 81 (fontified t) 81 83 (fontified t face racket-selfeval-face) 83 94 (fontified t) 94 95 (fontified t face racket-keyword-argument-face) 95 105 (fontified t face racket-keyword-argument-face) 105 117 (fontified t) 117 119 (fontified t face racket-selfeval-face) 119 121 (fontified t) 121 138 (fontified t) 138 139 (fontified t) 139 142 (fontified t) 142 146 (fontified t face font-lock-keyword-face) 146 221 (fontified t) 221 225 (fontified t face font-lock-keyword-face) 225 284 (fontified t) 284 288 (fontified t face font-lock-keyword-face) 288 302 (fontified t) 302 306 (fontified t face font-lock-string-face) 306 317 (fontified t) 317 320 (fontified t face font-lock-string-face) 320 328 (fontified t)) . 439) (undo-tree-id3 . -327) (undo-tree-id4 . -327) (undo-tree-id5 . -327) (undo-tree-id6 . -10) (undo-tree-id7 . -327) (undo-tree-id8 . -10) (undo-tree-id9 . -327) (undo-tree-id10 . 328) (undo-tree-id11 . -1) (undo-tree-id12 . 327) (undo-tree-id13 . -326) (undo-tree-id14 . 2) (undo-tree-id15 . -327) 766) nil (23728 55152 167343 524000) 0 nil]) ((62 . 74) (#("../u" 0 4 (fontified t face font-lock-string-face)) . -62) (undo-tree-id16 . -4) (undo-tree-id17 . -4) 66 (62 . 66) (61 . 63) (#("\"" 0 1 (fontified nil)) . -61) (61 . 62) (51 . 61)) nil (23728 55152 167362 744000) 0 nil]) ((29 . 39) (#(" " 0 1 (fontified t)) . 29) (t 23726 1019 582969 322000)) nil (23728 55152 167371 496000) 0 nil]) nil nil (23728 55152 167375 0) 0 nil] #2# 31340 287 nil)