"ceca0e7bcafcaaecddbc2c8d7cbbc68be45ba533"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((836 . 872) (#(" " 0 1 (fontified t)) . 836)) nil (23729 859 445656 490000) 0 nil]) ((836 . 837) (#("                                                   " 0 51 (fontified nil)) . 836) (#("
" 0 1 (fontified t)) . -836) 812) nil (23729 859 445672 650000) 0 nil]) ((777 . 807) (#(" " 0 1 (fontified t)) . 777)) nil (23729 859 445680 810000) 0 nil]) ((743 . 767) (#(" " 0 1 (fontified t)) . 743)) nil (23729 859 445686 900000) 0 nil]) ((977 . 1010) (#(" " 0 1 (fontified t)) . 977)) nil (23729 859 445692 499000) 0 nil]) ((977 . 978) (#("                                     " 0 37 (fontified nil)) . 977) (#("
" 0 1 (fontified t)) . -977) 961) nil (23729 859 445700 141000) 0 nil]) ((934 . 961) (#(" " 0 1 (fontified t)) . 934)) nil (23729 859 445706 648000) 0 nil]) ((934 . 935) (#("                               " 0 31 (fontified nil)) . 934) (#("
" 0 1 (fontified t)) . -934) 905) nil (23729 859 445713 980000) 0 nil]) ((884 . 905) (#(" " 0 1 (fontified t)) . 884)) nil (23729 859 445719 845000) 0 nil]) ((962 . 1000) (#(" " 0 1 (fontified t)) . 962)) nil (23729 859 445725 143000) 0 nil]) ((962 . 963) (#("                                                             " 0 61 (fontified nil)) . 962) (#("
" 0 1 (fontified t)) . -962) 946) nil (23729 859 445732 945000) 0 nil]) ((914 . 946) (#(" " 0 1 (fontified t)) . 914)) nil (23729 859 445739 185000) 0 nil]) ((931 . 993) (#(" " 0 1 (fontified t)) . 931)) nil (23729 859 445744 421000) 0 nil]) ((931 . 932) (#("                                     " 0 37 (fontified nil)) . 931) (#("
" 0 1 (fontified t)) . -931) 914) nil (23729 859 445751 698000) 0 nil]) ((914 . 915) (#("                               " 0 31 (fontified nil)) . 914) (#("
" 0 1 (fontified t)) . -914) 911) nil (23729 859 445759 268000) 0 nil]) ((784 . 836) (#(" " 0 1 (fontified t)) . 784)) nil (23729 859 445766 557000) 0 nil]) ((784 . 785) (#("                                             " 0 45 (fontified nil)) . 784) (#("
" 0 1 (fontified t)) . -784) 760) nil (23729 859 445773 336000) 0 nil]) ((760 . 761) (#("                                             " 0 45 (fontified nil)) . 760) (#("
" 0 1 (fontified t)) . -760) 747) nil (23729 859 445780 891000) 0 nil]) ((1001 . 1039) (#(" " 0 1 (fontified t)) . 1001)) nil (23729 859 445786 581000) 0 nil]) ((1001 . 1002) (#("                                    " 0 36 (fontified nil)) . 1001) (#("
" 0 1 (fontified t)) . -1001) 985) nil (23729 859 445793 461000) 0 nil]) ((953 . 985) (#(" " 0 1 (fontified t)) . 953)) nil (23729 859 445800 2000) 0 nil]) ((953 . 954) (#("                              " 0 30 (fontified nil)) . 953) (#("
" 0 1 (fontified t)) . -953) 943) nil (23729 859 445806 785000) 0 nil]) ((754 . 755) (829 . 874) (#("                                   " 0 35 (fontified nil)) . -829) (760 . 805) (#("                                   " 0 35 (fontified t)) . -760) (874 . 875) (#(")" 0 1 (fontified t)) . -754)) nil (23729 859 445817 892000) 0 nil]) ((751 . 753) (750 . 752) (#("\"" 0 1 (fontified nil)) . -750) (750 . 751) (#("'" 0 1 (fontified t)) . -750) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 751 (745 . 751) (744 . 746) (#("(" 0 1 (fontified nil)) . -744) (744 . 745)) nil (23729 859 445850 349000) 0 nil]) ((808 . 844) (#(" " 0 1 (fontified t)) . 808)) nil (23729 859 445859 265000) 0 nil]) ((808 . 809) (#("                                " 0 32 (fontified nil)) . 808) (#("
" 0 1 (fontified t)) . -808) 785) nil (23729 859 445866 99000) 0 nil]) ((749 . 785) (#(" " 0 1 (fontified t)) . 749)) nil (23729 859 445872 175000) 0 nil]) ((749 . 750) (#("                                " 0 32 (fontified nil)) . 749) (#("
" 0 1 (fontified t)) . -749) 744) nil (23729 859 445878 928000) 0 nil]) ((885 . 886)) nil (23729 859 445884 164000) 0 nil]) ((962 . 998) (#("                          " 0 26 (fontified nil)) . -962) (915 . 945) (#("                    " 0 20 (fontified t)) . -915) (999 . 1000) (#(")" 0 1 (fontified t)) . -885)) nil (23729 859 445892 587000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 886) (885 . 886) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 885) (884 . 885) (882 . 884) (881 . 883) (#("\"" 0 1 (fontified nil)) . -881) (876 . 882) (875 . 877) (#("(" 0 1 (fontified nil)) . -875) (875 . 876) (t 23729 604 409987 11000)) nil (23729 859 445908 835000) 0 nil] [nil nil ((#("        " 0 8 (fontified t)) . -861) (undo-tree-id694 . -8) (undo-tree-id695 . -8) (undo-tree-id696 . -8) (undo-tree-id697 . -8) 869 (861 . 869) (861 . 862) 894 (t 23729 604 409987 11000)) ((#("
" 0 1 (fontified nil)) . 861) (undo-tree-id698 . 1) (undo-tree-id699 . 1) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . 1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 1) (undo-tree-id713 . 1) (#("        " 0 8 (fontified nil)) . 861) (undo-tree-id714 . -8) (undo-tree-id715 . -8) (undo-tree-id716 . -8) (undo-tree-id717 . -8) (861 . 869)) (23729 729 310836 855000) 0 nil]) ((#("k" 0 1 (fontified t)) . -931) (undo-tree-id682 . -1) (undo-tree-id683 . -1) 932 (931 . 932) (942 . 968) (#("               " 0 15 (fontified nil)) . -942) (976 . 977) (#(")" 0 1 (fontified t)) . -941) (905 . 925) (#("               " 0 15 (fontified nil)) . -905) (936 . 937) (#(")" 0 1 (fontified t)) . -926) (921 . 926) (920 . 922) (#("(" 0 1 (fontified nil)) . -920) (920 . 921) (#(" " 0 1 (fontified t)) . -920) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (#(" " 0 1 (fontified t)) . -921) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (#(" " 0 1 (fontified t)) . -922) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (#(" " 0 1 (fontified t)) . -923) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (#(" " 0 1 (fontified t)) . -924) (undo-tree-id692 . -1) (undo-tree-id693 . -1) 925 (905 . 925) (#(" " 0 1 (fontified nil)) . -905) (904 . 905)) nil (23729 729 311220 935000) 0 nil]) ((880 . 881) (#("               " 0 15 (fontified nil)) . 880) (#("
" 0 1 (fontified t)) . -880) 876) nil (23729 604 389994 815000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 930) (#("(" 0 1 (fontified t)) . 896)) nil (23729 604 390003 405000) 0 nil] [nil nil ((#(")" 0 1 (fontified nil)) . 918) (undo-tree-id601 . 1) (undo-tree-id602 . -1) (undo-tree-id603 . 1) (#("(" 0 1 (fontified t)) . 897) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (undo-tree-id619 . 1) (undo-tree-id620 . 1) (undo-tree-id621 . 1) (undo-tree-id622 . 1) (undo-tree-id623 . -1) (undo-tree-id624 . -1)) ((897 . 898) (918 . 919)) (23729 580 888954 104000) 0 nil]) ((#("append " 0 6 (fontified t face font-lock-builtin-face) 6 7 (fontified t)) . 897) (undo-tree-id625 . 7) (undo-tree-id626 . 7) (undo-tree-id627 . 7) (undo-tree-id628 . 7) (undo-tree-id629 . 7) (undo-tree-id630 . 7) (undo-tree-id631 . 7) (undo-tree-id632 . 7) (undo-tree-id633 . 7) (undo-tree-id634 . 7) (undo-tree-id635 . 7) (undo-tree-id636 . 7) (undo-tree-id637 . 7) (undo-tree-id638 . 7) (undo-tree-id639 . 7) (undo-tree-id640 . 7) (undo-tree-id641 . 7)) nil (23729 580 889285 5000) 0 nil]) ((#("-" 0 1 (fontified t)) . 897) (undo-tree-id642 . 1) (undo-tree-id643 . 1) (undo-tree-id644 . 1) (undo-tree-id645 . 1) (undo-tree-id646 . 1) (undo-tree-id647 . 1) (undo-tree-id648 . 1) (undo-tree-id649 . 1) (undo-tree-id650 . 1) (undo-tree-id651 . 1) (undo-tree-id652 . 1) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . 1) (undo-tree-id656 . 1) (undo-tree-id657 . 1) (undo-tree-id658 . 1)) nil (23729 580 889014 487000) 0 nil]) ((#("string" 0 6 (fontified t face font-lock-builtin-face)) . 897) (undo-tree-id659 . 1) (undo-tree-id660 . 2) (undo-tree-id661 . 1) (undo-tree-id662 . 3) (undo-tree-id663 . 2) (undo-tree-id664 . 4) (undo-tree-id665 . 3) (undo-tree-id666 . 5) (undo-tree-id667 . 4) (undo-tree-id668 . 6) (undo-tree-id669 . 5)) nil (23729 580 889033 380000) 0 nil]) ((934 . 935)) nil (23729 580 889037 824000) 0 nil]) ((#(" " 0 1 (fontified t)) . -934) (undo-tree-id670 . -1) (undo-tree-id671 . -1) 935) nil (23729 580 889043 925000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 719) (undo-tree-id672 . -1) (undo-tree-id673 . -1) 720 (#("t" 0 1 (fontified t)) . -720) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (#("r" 0 1 (fontified t)) . -721) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (#("u" 0 1 (fontified t)) . -722) (undo-tree-id678 . -1) (undo-tree-id679 . -1) 723 (#("e" 0 1 (fontified t face font-lock-builtin-face)) . -723) (undo-tree-id680 . -1) (undo-tree-id681 . -1) 724 (720 . 724) (719 . 721) (#("(" 0 1 (fontified nil)) . -719) (719 . 720)) nil (23729 580 889069 996000) 0 nil] [nil ([nil nil ((719 . 723) (#("hanging" 0 7 (fontified t)) . 719)) ((719 . 726) (#("else" 0 4 (fontified t face font-lock-keyword-face)) . 719) (undo-tree-id579 . -3) (undo-tree-id580 . -3) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . -3) (undo-tree-id584 . -3) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (undo-tree-id591 . -3) (undo-tree-id592 . 1) (undo-tree-id593 . 1) (undo-tree-id594 . -3) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (undo-tree-id597 . -3) (undo-tree-id598 . -3) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (t 23729 465 717353 878000)) (23729 465 703368 504000) 0 nil]) ((#("[else (cons
               (string-append (make-string n #\\space) (car list))
               (indent (cdr list)))]" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 7 (fontified t) 7 11 (fontified t face font-lock-builtin-face) 11 12 (fontified t) 12 27 (fontified t) 27 28 (fontified t) 28 41 (fontified t face font-lock-builtin-face) 41 42 (fontified t) 42 43 (fontified t) 43 54 (fontified t face font-lock-builtin-face) 54 57 (fontified t) 57 64 (fontified t face racket-selfeval-face) 64 66 (fontified t) 66 67 (fontified t) 67 70 (fontified t face font-lock-builtin-face) 70 71 (fontified t) 71 75 (fontified t face font-lock-builtin-face) 75 76 (fontified t) 76 78 (fontified t) 78 93 (fontified t) 93 101 (fontified t) 101 102 (fontified t) 102 105 (fontified t face font-lock-builtin-face) 105 106 (fontified t) 106 110 (fontified t face font-lock-builtin-face) 110 111 (fontified t) 111 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t)) . 869) (undo-tree-id471 . -6) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . -6) (undo-tree-id478 . 1) (undo-tree-id479 . 1) (undo-tree-id480 . -6) (undo-tree-id481 . 1) (undo-tree-id482 . 1) (undo-tree-id483 . 1) (undo-tree-id484 . 1) (undo-tree-id485 . 1) (undo-tree-id486 . 1) (undo-tree-id487 . -6) (undo-tree-id488 . 1) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . 1) (undo-tree-id492 . -6) (undo-tree-id493 . -6) (undo-tree-id494 . -6) (undo-tree-id495 . 107) (undo-tree-id496 . 107) (undo-tree-id497 . -7) (undo-tree-id498 . 107) (undo-tree-id499 . 107) (undo-tree-id500 . -7) (undo-tree-id502 . 105) (undo-tree-id504 . 106) (undo-tree-id506 . 107) (undo-tree-id508 . 108) (undo-tree-id510 . 109) (undo-tree-id512 . 110) (undo-tree-id514 . 111) (undo-tree-id516 . 112) (undo-tree-id518 . 113) (undo-tree-id520 . 114) (undo-tree-id522 . 114) (undo-tree-id524 . 113) (undo-tree-id526 . 1) (undo-tree-id528 . -112) (undo-tree-id530 . -111) (undo-tree-id532 . -110) (undo-tree-id534 . -101) (undo-tree-id536 . -93) (undo-tree-id538 . -76) (undo-tree-id540 . -75) (undo-tree-id542 . -66) (undo-tree-id544 . -64) (undo-tree-id546 . -42) (undo-tree-id548 . -27) (undo-tree-id550 . -6) (undo-tree-id552 . -114) (undo-tree-id554 . -114) (undo-tree-id556 . -113) (undo-tree-id558 . -112) (undo-tree-id560 . -111) (undo-tree-id562 . -102) (undo-tree-id564 . -94) (undo-tree-id566 . -77) (undo-tree-id568 . -76) (undo-tree-id570 . -67) (undo-tree-id572 . -65) (undo-tree-id574 . -43) (undo-tree-id576 . -28) (undo-tree-id578 . -7) (t 23729 391 121092 649000)) ((869 . 983)) (23729 483 699658 91000) 0 nil]) ((#("r" 0 1 (fontified t)) . 667) (undo-tree-id449 . 1) (undo-tree-id450 . 1)) nil (23729 484 670964 279000) 0 nil]) ((667 . 668) (#("]" 0 1 (fontified t)) . 667) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1) (undo-tree-id455 . 1) (undo-tree-id456 . -1)) nil (23729 391 15548 620000) 0 nil]) ((666 . 668) (#("[" 0 1 (fontified nil)) . -666) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (666 . 667)) nil (23729 391 15556 220000) 0 nil]) ((#("r" 0 1 (fontified t)) . 656) (undo-tree-id459 . 1) (undo-tree-id460 . 1)) nil (23729 391 15561 391000) 0 nil]) ((656 . 657) (#("[" 0 1 (fontified t)) . 656) (undo-tree-id461 . -1) (undo-tree-id462 . 1) (undo-tree-id463 . 1) (undo-tree-id464 . 1) (undo-tree-id465 . 1) (undo-tree-id466 . -1)) nil (23729 391 15571 379000) 0 nil]) ((#("x" 0 1 (fontified t)) . 651)) nil (23729 391 15573 876000) 0 nil]) ((651 . 652) (#("]" 0 1 (fontified t)) . 651) (undo-tree-id467 . 1)) nil (23729 391 15577 857000) 0 nil]) ((650 . 652) (#("[" 0 1 (fontified nil)) . -650) (650 . 651) (#("{}" 0 1 (fontified t) 1 2 (fontified t)) . 650) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 651 (650 . 652) (#("{" 0 1 (fontified nil)) . -650) (650 . 651)) nil (23729 391 15585 722000) 0 nil]) ((#("r" 0 1 (fontified t)) . 646)) nil (23729 391 15589 377000) 0 nil]) ((646 . 647) (#("[" 0 1 (fontified t)) . 646) (t 23729 309 304948 992000)) nil (23729 391 15592 452000) 0 nil] [nil nil ((1036 . 1065) (#("               " 0 15 (fontified nil)) . -1036) (undo-tree-id437 . -15) (956 . 985) (#("               " 0 15 (fontified t)) . -956) (undo-tree-id438 . -15) (922 . 944) (#("        " 0 8 (fontified t)) . -922) (850 . 899) (#("                                " 0 32 (fontified t)) . -850) (undo-tree-id439 . -32) (777 . 826) (#("                                " 0 32 (fontified t)) . -777) (undo-tree-id440 . -32) (723 . 745) (#("        " 0 8 (fontified t)) . -723) (679 . 695) (#("  " 0 2 (fontified t)) . -679) (undo-tree-id441 . -2) (983 . 984) (#(")" 0 1 (fontified t)) . -678) 646 (t 23729 309 304948 992000)) ((678 . 679) (#(")" 0 1 (fontified nil)) . 983) (undo-tree-id442 . 1) (undo-tree-id443 . -1) (679 . 681) (#("                " 0 16 (fontified t)) . 679) (undo-tree-id444 . -16) (723 . 731) (#("                      " 0 22 (fontified t)) . 723) (777 . 809) (#("                                                 " 0 49 (fontified t)) . 777) (undo-tree-id445 . -49) (850 . 882) (#("                                                 " 0 49 (fontified t)) . 850) (undo-tree-id446 . -49) (922 . 930) (#("                      " 0 22 (fontified t)) . 922) (956 . 971) (#("                             " 0 29 (fontified t)) . 956) (undo-tree-id447 . -29) (1036 . 1051) (#("                             " 0 29 (fontified t)) . 1036) (undo-tree-id448 . -29)) (23729 358 700690 205000) 0 nil]) ((649 . 651) (#(" " 0 1 (fontified t)) . -649) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . 1) (#("n" 0 1 (fontified t)) . -650) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . 1) 651 (648 . 651) (647 . 648)) nil (23729 358 701474 156000) 0 nil]) ((655 . 663) (653 . 655) (t 23729 150 482634 348000)) nil (23729 309 288840 292000) 0 nil]) ((932 . 948) (#(" " 0 1 (fontified t)) . 932) (undo-tree-id291 . 1)) nil (23729 150 458911 237000) 0 nil]) ((866 . 882) (#(" " 0 1 (fontified t)) . 866) (undo-tree-id292 . 1)) nil (23729 150 458927 233000) 0 nil]) ((927 . 935) (926 . 928) (#("(" 0 1 (fontified nil)) . -926) (919 . 927) (918 . 920) (#("(" 0 1 (fontified nil)) . -918) (918 . 919) (917 . 918) (#(")" 0 1 (fontified nil)) . 917) (916 . 917) (#(" " 0 1 (fontified nil)) . -916) (916 . 917) (#(")" 0 1 (fontified nil)) . -916) (916 . 917) (#(" " 0 1 (fontified t)) . -916) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 917 (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 917) (undo-tree-id295 . -1) (undo-tree-id296 . -1) 918 (917 . 919) (#("(" 0 1 (fontified nil)) . -917) (917 . 918) (#("i" 0 1 (fontified t)) . -917) (undo-tree-id297 . -1) (undo-tree-id298 . -1) 918 (916 . 918) (#(")" 0 1 (fontified nil)) . 916) (915 . 916) (907 . 915) (906 . 908) (#("(" 0 1 (fontified nil)) . -906) (905 . 907) (#(")" 0 1 (fontified nil)) . 905) (904 . 905) (897 . 904) (889 . 897) (883 . 889) (882 . 884) (#("(" 0 1 (fontified nil)) . -882) (868 . 883) (867 . 869) (#("(" 0 1 (fontified nil)) . -867) (866 . 868) (#("t" 0 1 (fontified t face font-lock-builtin-face)) . -866) (undo-tree-id299 . -1) (undo-tree-id300 . -1) 867 (862 . 867) (861 . 863) (#("(" 0 1 (fontified nil)) . -861) (861 . 862)) nil (23729 150 458992 735000) 0 nil]) ((nil rear-nonsticky nil 844 . 845) (nil fontified nil 713 . 845) (713 . 845) 712) nil (23729 150 459014 105000) 0 nil]) ((#("(cons (car list) (cons
                                (make-string n #\\space)
                                (indent (cdr list))))" 0 1 (fontified t) 1 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 7 (fontified t) 7 10 (fontified t face font-lock-builtin-face) 10 11 (fontified t) 11 15 (fontified t face font-lock-builtin-face) 15 17 (fontified t) 17 18 (fontified t) 18 22 (fontified t face font-lock-builtin-face) 22 23 (fontified t) 23 55 (fontified t) 55 56 (fontified t) 56 67 (fontified t face font-lock-builtin-face) 67 70 (fontified t) 70 77 (fontified t face racket-selfeval-face) 77 111 (fontified t) 111 119 (fontified t) 119 120 (fontified t) 120 123 (fontified t face font-lock-builtin-face) 123 124 (fontified t) 124 128 (fontified t face font-lock-builtin-face) 128 129 (fontified t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t)) . 729) (undo-tree-id301 . -22) (undo-tree-id302 . -22) (undo-tree-id303 . 122) (undo-tree-id304 . 21) (undo-tree-id305 . 21) (undo-tree-id306 . 21) (undo-tree-id307 . 21) (undo-tree-id308 . -10) (undo-tree-id309 . 21) (undo-tree-id310 . 21) (undo-tree-id311 . -22) (undo-tree-id312 . 21) (undo-tree-id313 . 21) (undo-tree-id314 . 21) (undo-tree-id315 . 21) (undo-tree-id316 . 21) (undo-tree-id317 . 21) (undo-tree-id318 . -22) (undo-tree-id319 . 21) (undo-tree-id320 . 21) (undo-tree-id321 . 21) (undo-tree-id322 . 21) (undo-tree-id323 . -22) (undo-tree-id324 . -22) (undo-tree-id325 . 21) (undo-tree-id326 . 21) (undo-tree-id327 . 21) (undo-tree-id328 . 21) (undo-tree-id329 . -22)) nil (23729 150 459095 907000) 0 nil]) ((#(" " 0 1 (fontified t)) . -713) (undo-tree-id330 . -1) (undo-tree-id331 . -1) 714 (713 . 714)) nil (23729 150 459111 448000) 0 nil]) ((705 . 713) (#("h" 0 1 (fontified t)) . -705) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (#("a" 0 1 (fontified t)) . -706) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (#("n" 0 1 (fontified t)) . -707) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (#("g" 0 1 (fontified t)) . -708) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("i" 0 1 (fontified t)) . -709) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("n" 0 1 (fontified t)) . -710) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (#("g" 0 1 (fontified t)) . -711) (undo-tree-id344 . -1) (undo-tree-id345 . -1) 712 (707 . 712) (#("i" 0 1 (fontified t)) . -707) (undo-tree-id346 . -1) (undo-tree-id347 . -1) 708 (705 . 708) (704 . 706) (#("[" 0 1 (fontified nil)) . -704) (704 . 705) (695 . 704) 694) nil (23729 150 459168 420000) 0 nil]) ((653 . 663) (652 . 654) (#("[" 0 1 (fontified nil)) . -652) (652 . 653) (651 . 652)) nil (23729 150 459186 265000) 0 nil]) ((775 . 808) (#(" " 0 1 (fontified t)) . 775) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . 1) (undo-tree-id352 . 1) (undo-tree-id353 . 1) (undo-tree-id354 . 1) (undo-tree-id355 . 1) (undo-tree-id356 . 1) (undo-tree-id357 . 1) (undo-tree-id358 . 1) (undo-tree-id359 . 1) (undo-tree-id360 . 1) (undo-tree-id361 . 1) (undo-tree-id362 . 1) (undo-tree-id363 . 1) (undo-tree-id364 . 1) (undo-tree-id365 . 1) (undo-tree-id366 . 1) (undo-tree-id367 . 1)) nil (23729 150 459238 699000) 0 nil]) ((719 . 752) (#(" " 0 1 (fontified t)) . 719) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1)) nil (23729 150 459262 521000) 0 nil]) ((740 . 742) (721 . 740) (720 . 722) (#("(" 0 1 (fontified nil)) . -720) (720 . 721) (#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 720) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . 1) (undo-tree-id378 . 1) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (undo-tree-id381 . 1) (undo-tree-id382 . 1) (undo-tree-id383 . -1) (undo-tree-id384 . 1) (undo-tree-id385 . 1) (undo-tree-id386 . 1) (undo-tree-id387 . 1) (undo-tree-id388 . 1) (undo-tree-id389 . 1) (undo-tree-id390 . -1) (undo-tree-id391 . 1) (undo-tree-id392 . 1) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) 721 (#("\\n    " 0 6 (fontified t face font-lock-string-face)) . 721) (undo-tree-id404 . -2) (undo-tree-id405 . -2) (undo-tree-id406 . 4) (undo-tree-id407 . 5) (undo-tree-id408 . 4) (undo-tree-id409 . 4) (undo-tree-id410 . 4) (undo-tree-id411 . 4) (undo-tree-id412 . -2) (undo-tree-id413 . 4) (undo-tree-id414 . 4) (undo-tree-id415 . 4) (undo-tree-id416 . 4) (undo-tree-id417 . 4) (undo-tree-id418 . 4) (undo-tree-id419 . -2) (undo-tree-id420 . 4) (undo-tree-id421 . 4) (undo-tree-id422 . 4) (undo-tree-id423 . 4) (undo-tree-id424 . -2) (undo-tree-id425 . -2) (undo-tree-id426 . 4) (undo-tree-id427 . 4) (undo-tree-id428 . 4) (undo-tree-id429 . 4) (undo-tree-id430 . -2) 720) nil (23729 150 459437 620000) 0 nil] [nil nil ((#("\"\\n    \" (indent (cdr list))" 0 1 (fontified t face font-lock-string-face) 1 7 (fontified t face font-lock-string-face) 7 8 (fontified t face font-lock-string-face) 8 9 (fontified t) 9 17 (fontified t) 17 18 (fontified t) 18 21 (fontified t face font-lock-builtin-face) 21 22 (fontified t) 22 26 (fontified t face font-lock-builtin-face) 26 27 (fontified t) 27 28 (fontified t)) . 720) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . 25) (undo-tree-id228 . 26) (undo-tree-id229 . 25) (undo-tree-id230 . 25) (undo-tree-id231 . 25) (undo-tree-id232 . 25) (undo-tree-id233 . -3) (undo-tree-id234 . 25) (undo-tree-id235 . 25) (undo-tree-id236 . 25) (undo-tree-id237 . 25) (undo-tree-id238 . 25) (undo-tree-id239 . 25) (undo-tree-id240 . -3) (undo-tree-id241 . 25) (undo-tree-id242 . 25) (undo-tree-id243 . 25) (undo-tree-id244 . 25) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . 25) (undo-tree-id248 . 25) (undo-tree-id249 . 25) (undo-tree-id250 . 25) (undo-tree-id251 . -3) (undo-tree-id252 . 28) (undo-tree-id253 . 28) (undo-tree-id254 . -1) (undo-tree-id255 . 27) (undo-tree-id256 . -7) (undo-tree-id257 . 21) (undo-tree-id258 . -8) (undo-tree-id259 . -27) (undo-tree-id260 . -28) (undo-tree-id261 . -26) (undo-tree-id262 . -27) (undo-tree-id263 . -17) (undo-tree-id264 . -18) (undo-tree-id265 . -9) (undo-tree-id266 . -10) (undo-tree-id267 . -1) (undo-tree-id268 . -27) (undo-tree-id269 . -28) (undo-tree-id270 . -26) (undo-tree-id271 . -27) (undo-tree-id272 . -17) (undo-tree-id273 . -18) (undo-tree-id274 . -9) (undo-tree-id275 . -10) (undo-tree-id276 . -28) (undo-tree-id277 . -7) (undo-tree-id278 . -8) (undo-tree-id279 . -7) (undo-tree-id280 . -8) (undo-tree-id281 . -28) (undo-tree-id282 . -28) (undo-tree-id283 . -27) (undo-tree-id284 . -28) (undo-tree-id285 . -26) (undo-tree-id286 . -27) (undo-tree-id287 . -17) (undo-tree-id288 . -18) (undo-tree-id289 . -9) (undo-tree-id290 . -10)) ((720 . 748)) (23728 65470 296576 164000) 0 nil]) ((647 . 650) (646 . 648) (#("[" 0 1 (fontified nil)) . -646) (646 . 647) (645 . 646) (t 23728 58331 526781 939000)) nil (23728 65470 296800 92000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((651 . 652)) ((#("@" 0 1 (fontified t)) . 651) (undo-tree-id67 . 1) (undo-tree-id68 . 1) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . -1)) (23728 58274 218168 492000) 0 nil]) ((#("@" 0 1 (fontified t)) . 651) (undo-tree-id10 . 1) (undo-tree-id12 . 1) (undo-tree-id14 . 1) (undo-tree-id16 . 1) (undo-tree-id18 . 1) (undo-tree-id20 . 1) (undo-tree-id22 . 1) (undo-tree-id24 . 1) (undo-tree-id26 . 1) (undo-tree-id28 . 1) (undo-tree-id30 . 1) (undo-tree-id32 . 1) (undo-tree-id34 . 1) (undo-tree-id36 . 1) (undo-tree-id38 . 1) (undo-tree-id40 . 1)) ((651 . 652) (t 23728 58276 667098 224000)) (23728 58274 218637 601000) 0 nil]) ((#("," 0 1 (fontified t)) . 651) (undo-tree-id41 . 1) (undo-tree-id43 . 1) (undo-tree-id45 . 1) (undo-tree-id47 . 1) (undo-tree-id49 . 1) (undo-tree-id51 . 1) (undo-tree-id53 . 1) (undo-tree-id55 . 1) (undo-tree-id57 . 1) (undo-tree-id59 . 1) (undo-tree-id61 . 1) (undo-tree-id63 . 1) (undo-tree-id65 . 1)) ((651 . 652)) (23728 58303 204144 623000) 0 nil] [nil nil ((651 . 652)) ((#("`" 0 1 (fontified t)) . 651) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . 1) (undo-tree-id9 . 1)) (23728 58262 679480 864000) 0 nil] [nil nil ((#("," 0 1 (fontified t)) . 651)) ((651 . 652)) (23728 58250 564011 938000) 0 nil]) ((#("`" 0 1 (fontified t)) . 643) (t 23728 58221 974089 969000)) ((643 . 644)) (23728 58303 524436 496000) 0 nil]) ((645 . 662) (644 . 646) (#("(" 0 1 (fontified nil)) . -644) (643 . 645) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 643) (undo-tree-id228 . -1) (undo-tree-id229 . -1) 644 (#("n" 0 1 (fontified t)) . -644) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 645 (#("e" 0 1 (fontified t)) . -645) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (#("w" 0 1 (fontified t face font-lock-builtin-face)) . -646) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (#("-" 0 1 (fontified t)) . -647) (undo-tree-id236 . -1) (undo-tree-id237 . -1) 648 (644 . 648) (643 . 645) (#("(" 0 1 (fontified nil)) . -643) (643 . 644) (640 . 643) 580) ((#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 640) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (#("(" 0 1 (fontified nil)) . 643) (643 . 644) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 643) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#("new-" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil face font-lock-builtin-face) 3 4 (fontified nil)) . 644) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (644 . 648) (643 . 645) (#("`(" 0 1 (fontified nil) 1 2 (fontified nil)) . 643) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . 2) (644 . 645) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 644) (undo-tree-id95 . -1) (undo-tree-id96 . 1) (undo-tree-id97 . -1) (undo-tree-id98 . 1) (undo-tree-id99 . 1) (undo-tree-id100 . -1) (undo-tree-id101 . 1) (undo-tree-id102 . 1) (undo-tree-id103 . 1) (undo-tree-id104 . 1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . 1) (undo-tree-id109 . 1) (undo-tree-id110 . -1) (undo-tree-id111 . 1) (undo-tree-id112 . 1) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (undo-tree-id115 . -1) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . 1) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (#("new-el ,@children" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 17 (fontified t)) . 645) (undo-tree-id125 . -7) (undo-tree-id126 . 10) (undo-tree-id127 . -7) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . -16) (undo-tree-id131 . 13) (undo-tree-id132 . 14) (undo-tree-id133 . 13) (undo-tree-id134 . 13) (undo-tree-id135 . -16) (undo-tree-id136 . -7) (undo-tree-id137 . -7) (undo-tree-id138 . 8) (undo-tree-id139 . 8) (undo-tree-id140 . -7) (undo-tree-id141 . 8) (undo-tree-id142 . 8) (undo-tree-id143 . 8) (undo-tree-id144 . 8) (undo-tree-id145 . -7) (undo-tree-id146 . 8) (undo-tree-id147 . 8) (undo-tree-id148 . 8) (undo-tree-id149 . 8) (undo-tree-id150 . 9) (undo-tree-id151 . 9) (undo-tree-id152 . 10) (undo-tree-id153 . 10) (undo-tree-id154 . 10)) (23728 58303 768636 793000) 0 nil]) ((640 . 643)) ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 640) (undo-tree-id155 . 3) (undo-tree-id156 . 3) (undo-tree-id157 . 3) (undo-tree-id158 . 3) (undo-tree-id159 . 3) (undo-tree-id160 . 3) (undo-tree-id161 . 3) (undo-tree-id162 . 3) (undo-tree-id163 . 3) (undo-tree-id164 . 3) (undo-tree-id165 . 3) (undo-tree-id166 . 3) (undo-tree-id167 . 3) (undo-tree-id168 . 3) (undo-tree-id169 . 3) (undo-tree-id170 . 3) (undo-tree-id171 . 3) (undo-tree-id172 . 3) (undo-tree-id173 . 3) (undo-tree-id174 . 3) (undo-tree-id175 . 3) (undo-tree-id176 . 3) (undo-tree-id177 . 3) (undo-tree-id178 . 3)) (23728 58304 68143 917000) 0 nil]) ((579 . 583) (#("  " 0 2 (fontified nil)) . -579) (undo-tree-id238 . 2) (637 . 638) (#(")" 0 1 (fontified t)) . -578) (576 . 578) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -576) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 577 (565 . 577) (564 . 566) (#("(" 0 1 (fontified nil)) . -564) (564 . 565) (#("I" 0 1 (fontified t)) . -564) (undo-tree-id241 . -1) (undo-tree-id242 . -1) 565 (564 . 565) (#("I" 0 1 (fontified t)) . -564) (undo-tree-id243 . -1) (undo-tree-id244 . -1) 565 (564 . 565)) ((#("I" 0 1 (fontified nil)) . 564) (564 . 565) (#("I" 0 1 (fontified nil)) . 564) (564 . 565) (#("(" 0 1 (fontified nil)) . 564) (564 . 565) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 564) (undo-tree-id179 . -1) (#("define new-t" 0 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil) 7 11 (fontified nil face font-lock-variable-name-face) 11 12 (fontified nil face font-lock-variable-name-face)) . 565) (576 . 577) (#("el" 0 2 (fontified nil face font-lock-variable-name-face)) . 576) (578 . 579) (#(")" 0 1 (fontified nil)) . 637) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (579 . 581) (#("    " 0 4 (fontified t)) . 579) (undo-tree-id192 . 3) (undo-tree-id193 . 3) (undo-tree-id194 . -4)) (23728 58304 420362 542000) 0 nil] [nil nil ((586 . 587) (563 . 572) (#("  " 0 2 (fontified nil)) . -563) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . 1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (undo-tree-id169 . -1) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (533 . 534) (#("(" 0 1 (fontified t)) . 564) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 579 (575 . 579) (#("-" 0 1 (fontified t face font-lock-variable-name-face)) . -575) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -576) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -577) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("g" 0 1 (fontified t face font-lock-variable-name-face)) . -578) (undo-tree-id182 . -1) (undo-tree-id183 . -1) 579 (565 . 579) (564 . 566) (#("(" 0 1 (fontified nil)) . -564) (564 . 565) (#("I" 0 1 (fontified t)) . -564) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 565 (564 . 565)) ((#("I" 0 1 (fontified nil)) . 564) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (564 . 565) (#("(" 0 1 (fontified nil)) . 564) (564 . 565) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 564) (undo-tree-id194 . 1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (#("define new-tag" 0 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil) 7 10 (fontified nil) 10 11 (fontified nil face font-lock-variable-name-face) 11 12 (fontified nil face font-lock-variable-name-face) 12 13 (fontified nil face font-lock-variable-name-face) 13 14 (fontified nil face font-lock-variable-name-face)) . 565) (undo-tree-id215 . -14) (undo-tree-id216 . -14) (575 . 579) (#("-el " 0 3 (fontified nil) 3 4 (fontified nil)) . 575) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . 4) (undo-tree-id220 . 3) (undo-tree-id221 . 2) (undo-tree-id222 . 1) (564 . 565) (#("(" 0 1 (fontified t)) . 533) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (563 . 565) (#("         " 0 9 (fontified nil)) . 563) (#("u" 0 1 (fontified t)) . 586) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1)) (23728 58185 20254 825000) 0 nil]) (563) (nil undo-tree-canary) (23728 58305 209245 713000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 564) (undo-tree-id186 . -1) (undo-tree-id187 . -1) 565 (#("d" 0 1 (fontified t)) . -565) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("e" 0 1 (fontified t)) . -566) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 567 (565 . 567) (564 . 566) (#("(" 0 1 (fontified nil)) . -564) (564 . 565) (562 . 564) (562 . 563) 579 (t 23728 57893 456318 410000)) ((#("
" 0 1 (fontified nil)) . 562) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . -1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (#("  " 0 2 (fontified nil)) . 562) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (#("(" 0 1 (fontified nil)) . 564) (564 . 565) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 564) (#("de" 0 1 (fontified nil) 1 2 (fontified nil)) . 565) (565 . 567) (564 . 566)) (23728 58305 617734 659000) 0 nil]) ((558 . 560) (556 . 558) (#("d" 0 1 (fontified t)) . -556) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("e" 0 1 (fontified t)) . -557) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("r" 0 1 (fontified t)) . -558) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (#("e" 0 1 (fontified t)) . -559) (undo-tree-id148 . -1) (undo-tree-id149 . -1) 560 (552 . 560) (#("s" 0 1 (fontified t)) . -552) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (#("h" 0 1 (fontified t)) . -553) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (#("i" 0 1 (fontified t)) . -554) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 555 (549 . 555) (t 23728 53766 436341 325000)) ((#(" . shi" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil)) . 549) (undo-tree-id221 . -3) (552 . 555) (#("childere" 0 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 552) (undo-tree-id222 . -4) (556 . 560) (#("dr" 0 2 (fontified nil)) . 556) (undo-tree-id223 . -2) (#("en" 0 2 (fontified t)) . 558) (undo-tree-id224 . -2)) (23728 58306 815453 986000) 0 nil]) ((#(" " 0 1 (fontified t)) . 23) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . 1) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (undo-tree-id123 . 1) (undo-tree-id124 . 1)) nil (23728 58307 695026 519000) 0 nil]) ((34 . 35) (#(")" 0 1 (fontified t)) . -23) (undo-tree-id125 . -1) (undo-tree-id126 . 1) (undo-tree-id127 . -1) (undo-tree-id128 . 1) (undo-tree-id129 . 1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . -1)) nil (23728 53766 421193 55000) 0 nil]) ((24 . 25) (#("         " 0 8 (fontified nil) 8 9 (fontified nil rear-nonsticky t)) . 24) (#("
" 0 1 (fontified t)) . -24) (undo-tree-id139 . -1) 23) nil (23728 53766 421207 488000) 0 nil]) ((nil rear-nonsticky nil 33 . 34) (#("
" 0 1 (fontified nil)) . -44) (24 . 45) 22) nil (23728 53766 421215 462000) 0 nil] [nil nil ((nil rear-nonsticky nil 22 . 23) (14 . 34) 22) ((#("         pollen/tag
" 0 8 (fontified nil) 8 9 (fontified nil rear-nonsticky nil) 9 19 (fontified nil) 19 20 (fontified nil)) . 14) (undo-tree-id112 . -20) (undo-tree-id113 . -19) (undo-tree-id114 . -9) (undo-tree-id115 . -9) (undo-tree-id116 . 11) (nil rear-nonsticky t 22 . 23)) (23728 53757 410490 611000) 0 nil] [nil nil ((nil rear-nonsticky nil 33 . 34) (#("
" 0 1 (fontified nil)) . -44) (24 . 45) 22) ((#("
         pollen/tag
" 0 1 (fontified t) 1 9 (fontified nil) 9 10 (fontified nil rear-nonsticky nil) 10 20 (fontified nil) 20 21 (fontified nil)) . 24) (undo-tree-id107 . -20) (undo-tree-id108 . -1) (undo-tree-id109 . -20) (undo-tree-id110 . 11) (undo-tree-id111 . 11) (44 . 45) (nil rear-nonsticky t 33 . 34)) (23728 53756 374212 53000) 0 nil]) ((15 . 23) (14 . 16) (#("(" 0 1 (fontified nil)) . -14) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (14 . 15) (13 . 14) (t 23728 53731 301539 654000) 1) nil (23728 53757 410755 74000) 0 nil]) ((#("(provide indent)
" 0 1 (fontified t) 1 8 (fontified t face font-lock-keyword-face) 8 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t)) . 776) (undo-tree-id95 . -17) (undo-tree-id96 . -17) (undo-tree-id97 . -14) (undo-tree-id98 . -14) (undo-tree-id99 . -17) (undo-tree-id100 . -17) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -17) (undo-tree-id104 . 3) 790) nil (23728 53731 287508 726000) 0 nil]) ((768 . 774) (758 . 768) (752 . 758) (742 . 752)) nil (23728 53731 287514 488000) 0 nil] [nil nil ((743 . 744) 742) ((#("
" 0 1 (fontified t)) . 743)) (23728 53722 664149 522000) 0 nil]) ((nil rear-nonsticky nil 588 . 589) (nil fontified nil 504 . 589) (504 . 589)) nil (23728 53722 664213 290000) 0 nil]) ((503 . 504) (502 . 503) (t 23727 56003 357208 864000) 480) nil (23728 53722 664157 874000) 0 nil] [nil nil ((nil rear-nonsticky nil 565 . 566) (nil fontified nil 481 . 566) (481 . 566) 480 (t 23727 56003 357208 864000)) ((#("(define (styled tag name)
  (default-tag-function tag #:class (symbol->string name)))" 0 1 (fontified nil) 1 7 (fontified nil face font-lock-keyword-face) 7 9 (fontified nil) 9 15 (fontified nil face font-lock-function-name-face) 15 16 (fontified nil) 16 19 (fontified nil face font-lock-builtin-face) 19 26 (fontified nil) 26 50 (fontified nil) 50 53 (fontified nil face font-lock-variable-name-face) 53 54 (fontified nil) 54 61 (fontified nil face racket-keyword-argument-face) 61 63 (fontified nil) 63 77 (fontified nil face font-lock-builtin-face) 77 84 (fontified nil) 84 85 (fontified nil rear-nonsticky nil)) . 481) (undo-tree-id72 . -84) (undo-tree-id73 . -84) (undo-tree-id74 . -84) (undo-tree-id75 . 1) (undo-tree-id76 . -83) (undo-tree-id77 . -84) (undo-tree-id78 . -82) (undo-tree-id79 . -83) (undo-tree-id80 . -62) (undo-tree-id81 . -63) (undo-tree-id82 . -28) (undo-tree-id83 . -29) (undo-tree-id84 . -24) (undo-tree-id85 . -25) (undo-tree-id86 . -8) (undo-tree-id87 . -9) (undo-tree-id88 . -1) (undo-tree-id89 . 85) (undo-tree-id90 . -1) (undo-tree-id91 . 84) (undo-tree-id92 . -84) (undo-tree-id93 . 1) (undo-tree-id94 . -85) (nil fontified t 500 . 507) (nil fontified t 497 . 500) (nil fontified t 496 . 497) (nil fontified t 490 . 496) (nil fontified t 488 . 490) (nil fontified t 482 . 488) (nil fontified t 481 . 482) (nil rear-nonsticky t 565 . 566)) (23728 53717 67877 144000) 0 nil] [nil nil ((nil rear-nonsticky nil 565 . 566) (nil fontified nil 481 . 566) (481 . 566) 480 (t 23727 56003 357208 864000)) ((#("(define (styled tag name)
  (default-tag-function tag #:class (symbol->string name)))" 0 1 (fontified nil) 1 7 (fontified nil face font-lock-keyword-face) 7 9 (fontified nil) 9 15 (fontified nil face font-lock-function-name-face) 15 16 (fontified nil) 16 19 (fontified nil face font-lock-builtin-face) 19 26 (fontified nil) 26 50 (fontified nil) 50 53 (fontified nil face font-lock-variable-name-face) 53 54 (fontified nil) 54 61 (fontified nil face racket-keyword-argument-face) 61 63 (fontified nil) 63 77 (fontified nil face font-lock-builtin-face) 77 84 (fontified nil) 84 85 (fontified nil rear-nonsticky nil)) . 481) (undo-tree-id61 . -84) (undo-tree-id62 . -24) (undo-tree-id63 . -24) (undo-tree-id64 . 61) (undo-tree-id65 . 1) (undo-tree-id66 . 77) (undo-tree-id67 . -9) (undo-tree-id68 . 76) (undo-tree-id69 . -24) (undo-tree-id70 . 61) (undo-tree-id71 . -25) (nil fontified t 500 . 507) (nil fontified t 497 . 500) (nil fontified t 496 . 497) (nil fontified t 490 . 496) (nil fontified t 488 . 490) (nil fontified t 482 . 488) (nil fontified t 481 . 482) (nil rear-nonsticky t 565 . 566)) (23728 53714 707119 668000) 0 nil]) ((658 . 672) (657 . 659) (#("(" 0 1 (fontified nil)) . -657) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (657 . 658) (656 . 657) 641) nil (23728 53717 68968 629000) 0 nil]) ((nil rear-nonsticky nil 502 . 503) (#("
" 0 1 (fontified nil)) . -639) (502 . 640) 501 (t 23727 48695 126013 394000)) nil (23727 56003 338542 158000) 0 nil]) ((254 . 256) (t 23727 46702 257427 693000)) nil (23727 48695 111835 953000) 0 nil]) ((#("  " 0 2 (fontified t face font-lock-string-face)) . 216) (undo-tree-id58 . 2) (t 23727 46674 401211 267000)) nil (23727 46702 241782 442000) 0 nil]) ((386 . 388) (385 . 387) (#("\"" 0 1 (fontified nil)) . -385) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (385 . 386) (372 . 385) 365) nil (23727 46674 385947 581000) 0 nil]) ((477 . 479)) nil (23727 46674 385961 961000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 477)) nil (23727 46674 385967 481000) 0 nil]) ((212 . 213) (t 23727 46568 982737 109000)) nil (23727 46674 385973 232000) 0 nil]) ((#("n" 0 1 (fontified t face font-lock-string-face)) . 255) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . 1) (undo-tree-id44 . 1) (undo-tree-id45 . 1) (undo-tree-id46 . 1)) nil (23727 46568 968745 137000) 0 nil]) ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 255) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (t 23727 46501 816875 86000)) nil (23727 46568 968777 133000) 0 nil]) ((255 . 257)) nil (23727 46501 805188 519000) 0 nil]) ((213 . 217) (#(" " 0 1 (fontified t face font-lock-string-face)) . -213) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 214 (t 23727 45731 410134 500000)) nil (23727 46501 805242 742000) 0 nil]) ((497 . 498) 14) nil (23727 45731 402864 112000) 0 nil]) ((#(" " 0 1 (fontified nil face font-lock-variable-name-face)) . 13) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . 1) (14 . 15) (4 . 14) (1 . 4) (1 . 2)) nil (23727 45731 402899 977000) 0 nil]) ((475 . 482) (469 . 475) (468 . 470) (#("(" 0 1 (fontified nil)) . -468) (468 . 469) (467 . 468) (466 . 467) 465) nil (23727 45731 402914 858000) 0 nil]) ((nil rear-nonsticky nil 465 . 466) (nil fontified nil 1 . 466) (1 . 466) (t . -1)) nil (23727 45731 402922 735000) 0 nil] [nil ([nil nil ((nil rear-nonsticky nil 465 . 466) (nil fontified nil 1 . 466) (1 . 466)) ((#("(define (style component css-list [css-string \"\"])
  (cond
    ((null? css-list) (string-append
                       \".\"
                       (symbol->string component)
                       \"{ \"
                       css-string \"}\"))
    (else (style
           component
           (cdr css-list)
           (string-append
            css-string
            (symbol->string (caar css-list))
            \": \"
            (cdar css-list)
            \"; \")))))" 0 1 (fontified nil) 1 7 (fontified nil face font-lock-keyword-face) 7 9 (fontified nil) 9 14 (fontified nil face font-lock-function-name-face) 14 46 (fontified nil) 46 48 (fontified nil face font-lock-string-face) 48 54 (fontified nil) 54 58 (fontified nil face font-lock-keyword-face) 58 65 (fontified nil) 65 70 (fontified nil face font-lock-builtin-face) 70 82 (fontified nil) 82 95 (fontified nil face font-lock-builtin-face) 95 119 (fontified nil) 119 122 (fontified nil face font-lock-string-face) 122 147 (fontified nil) 147 161 (fontified nil face font-lock-builtin-face) 161 196 (fontified nil) 196 200 (fontified nil face font-lock-string-face) 200 235 (fontified nil) 235 238 (fontified nil face font-lock-string-face) 238 246 (fontified nil) 246 250 (fontified nil face font-lock-keyword-face) 250 291 (fontified nil) 291 294 (fontified nil face font-lock-builtin-face) 294 317 (fontified nil) 317 330 (fontified nil face font-lock-builtin-face) 330 367 (fontified nil) 367 381 (fontified nil face font-lock-builtin-face) 381 383 (fontified nil) 383 387 (fontified nil face font-lock-builtin-face) 387 411 (fontified nil) 411 415 (fontified nil face font-lock-string-face) 415 429 (fontified nil) 429 433 (fontified nil face font-lock-builtin-face) 433 444 (fontified nil) 444 456 (fontified nil) 456 460 (fontified nil face font-lock-string-face) 460 464 (fontified nil) 464 465 (fontified nil rear-nonsticky nil)) . 1) (undo-tree-id0 . -464) (nil fontified t 434 . 445) (nil fontified t 430 . 434) (nil fontified t 416 . 430) (nil fontified t 412 . 416) (nil fontified t 388 . 412) (nil fontified t 384 . 388) (nil fontified t 382 . 384) (nil fontified t 368 . 382) (nil fontified t 331 . 368) (nil fontified t 318 . 331) (nil fontified t 295 . 318) (nil fontified t 292 . 295) (nil fontified t 251 . 292) (nil fontified t 247 . 251) (nil fontified t 239 . 247) (nil fontified t 236 . 239) (nil fontified t 201 . 236) (nil fontified t 197 . 201) (nil fontified t 162 . 197) (nil fontified t 148 . 162) (nil fontified t 123 . 148) (nil fontified t 120 . 123) (nil fontified t 96 . 120) (nil fontified t 83 . 96) (nil fontified t 71 . 83) (nil fontified t 66 . 71) (nil fontified t 59 . 66) (nil fontified t 55 . 59) (nil fontified t 49 . 55) (nil fontified t 47 . 49) (nil fontified t 15 . 47) (nil fontified t 10 . 15) (nil fontified t 8 . 10) (nil fontified t 2 . 8) (nil fontified t 1 . 2) (nil rear-nonsticky t 465 . 466)) (23727 45694 711894 784000) 0 nil]) ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -242) (1 . 243) (t . -1)) ((#("
(define (style component css-list [css-string \"\"])
  (cond
    ((null? css-list) (string-append
                       \".\"
                       (symbol->string component)
                       \"{ \"
                       css-string \"}\"))
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil) 2 8 (fontified nil face font-lock-keyword-face) 8 10 (fontified nil) 10 15 (fontified nil face font-lock-function-name-face) 15 47 (fontified nil) 47 49 (fontified nil face font-lock-string-face) 49 52 (fontified nil) 52 55 (fontified t) 55 59 (fontified t face font-lock-keyword-face) 59 66 (fontified t) 66 71 (fontified t face font-lock-builtin-face) 71 83 (fontified t) 83 96 (fontified t face font-lock-builtin-face) 96 120 (fontified t) 120 123 (fontified t face font-lock-string-face) 123 148 (fontified t) 148 162 (fontified t face font-lock-builtin-face) 162 197 (fontified t) 197 201 (fontified t face font-lock-string-face) 201 202 (fontified t) 202 236 (fontified nil) 236 239 (fontified nil face font-lock-string-face) 239 241 (fontified nil) 241 242 (fontified nil)) . 1) (undo-tree-id1 . 188) (undo-tree-id2 . 189) (undo-tree-id3 . -241) (undo-tree-id4 . -54) (undo-tree-id5 . -54) (undo-tree-id6 . -54) (undo-tree-id7 . -54) (undo-tree-id8 . -54) (undo-tree-id9 . -54) (undo-tree-id10 . 188) (undo-tree-id11 . 188) (undo-tree-id12 . 188) (undo-tree-id13 . 188) (undo-tree-id14 . -54) (undo-tree-id15 . -54) (undo-tree-id16 . 241) (undo-tree-id17 . 240) (undo-tree-id18 . 241) (undo-tree-id19 . 241) (undo-tree-id20 . 241) (undo-tree-id21 . 241) (undo-tree-id22 . -47) (undo-tree-id23 . -48) (undo-tree-id24 . 242) (undo-tree-id25 . 241) (undo-tree-id26 . -54) (undo-tree-id27 . -55) (242 . 243) (nil rear-nonsticky t 1 . 2)) (23727 45694 712456 701000) 0 nil]) nil nil (23727 45695 592236 102000) 0 nil] #1# 15072 115 nil)