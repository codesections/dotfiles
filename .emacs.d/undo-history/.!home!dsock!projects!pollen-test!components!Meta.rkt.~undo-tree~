"5c8889be965082d756efe48aed26b056ebb851e5"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#3=[nil nil ((331 . 334) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -331) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . 1) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -332) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . 1) 333 (331 . 333) (330 . 332) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -330) (330 . 331) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -330) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -331) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) 332 (315 . 332) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -315) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -316) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) 317 (312 . 317) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -312) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) 313 (307 . 313) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -307) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) 308 (307 . 308) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -307) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -308) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -309) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (#("t" 0 1 (fontified nil face font-lock-comment-face)) . -310) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (#("e" 0 1 (fontified nil face font-lock-comment-face)) . -311) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -312) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) 313 (305 . 313) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -305) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) 306 (298 . 306) (297 . 298) 297) nil (23729 47573 868707 166000) 0 nil]) ((1833 . 1855) (#(" " 0 1 (fontified t)) . 1833)) nil (23729 47573 868720 977000) 0 nil]) ((1778 . 1788) (#("e" 0 1 (fontified nil)) . -1778) (#("s" 0 1 (fontified nil)) . -1779) 1780 (1771 . 1780) (#("\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\"" 0 1 (fontified t face font-lock-string-face) 1 16 (fontified t face font-lock-string-face) 16 22 (fontified t face font-lock-string-face) 22 25 (fontified t face font-lock-string-face) 25 120 (fontified t face font-lock-string-face) 120 124 (fontified t face font-lock-string-face) 124 133 (fontified t face font-lock-string-face) 133 136 (fontified t face font-lock-string-face) 136 170 (fontified t face font-lock-string-face) 170 173 (fontified t face font-lock-string-face) 173 174 (fontified t face font-lock-string-face)) . 1771)) nil (23729 47573 868725 456000) 0 nil]) ((1677 . 1687) (#("e" 0 1 (fontified nil)) . -1677) (#("s" 0 1 (fontified nil)) . -1678) 1679 (1670 . 1679) (#("\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\"" 0 1 (fontified t face font-lock-string-face) 1 22 (fontified t face font-lock-string-face) 22 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 54 (fontified t face font-lock-string-face) 54 65 (fontified t face font-lock-string-face) 65 70 (fontified t face font-lock-string-face) 70 118 (fontified t face font-lock-string-face) 118 120 (fontified t face font-lock-string-face) 120 124 (fontified t face font-lock-string-face) 124 133 (fontified t face font-lock-string-face) 133 136 (fontified t face font-lock-string-face) 136 173 (fontified t face font-lock-string-face) 173 174 (fontified t face font-lock-string-face)) . 1670) (undo-tree-id1089 . 174) (undo-tree-id1090 . -1) (undo-tree-id1091 . 173) (undo-tree-id1092 . -173) (undo-tree-id1093 . 1) (undo-tree-id1094 . -174)) nil (23729 47573 868739 329000) 0 nil]) ((1584 . 1594) (#("e" 0 1 (fontified t)) . -1584) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (#("s" 0 1 (fontified t)) . -1585) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) 1586 (1578 . 1586) (1577 . 1578) (#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 1577) (undo-tree-id1099 . 1) (undo-tree-id1100 . 2) (undo-tree-id1101 . 1) (undo-tree-id1102 . 2) (undo-tree-id1103 . -1) (undo-tree-id1104 . 1) (undo-tree-id1105 . -1) (undo-tree-id1106 . 1) (undo-tree-id1107 . -2) (undo-tree-id1108 . -1) (undo-tree-id1109 . -2) (undo-tree-id1110 . -1) (undo-tree-id1111 . -2) (undo-tree-id1112 . -1) (undo-tree-id1113 . -2) (undo-tree-id1114 . -2) (undo-tree-id1115 . -2)) nil (23729 47573 868767 804000) 0 nil]) ((nil rear-nonsticky nil 293 . 294) (nil fontified nil 122 . 294) (122 . 294) 121) nil (23729 47573 868773 172000) 0 nil] [nil nil ((nil rear-nonsticky nil 294 . 295) (nil fontified nil 123 . 295) (123 . 295) 122) ((#("The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible." 0 21 (fontified nil) 21 24 (fontified nil face font-lock-keyword-face) 24 119 (fontified nil) 119 123 (fontified nil face font-lock-builtin-face) 123 132 (fontified nil) 132 135 (fontified nil face font-lock-keyword-face) 135 171 (fontified nil) 171 172 (fontified nil rear-nonsticky nil)) . 123) (undo-tree-id1053 . -171) (undo-tree-id1054 . -171) (undo-tree-id1055 . -171) (undo-tree-id1056 . 1) (nil rear-nonsticky t 294 . 295)) (23729 2929 892260 656000) 0 nil]) ((#("The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible." 0 2 (fontified t face font-lock-string-face) 2 21 (fontified t face font-lock-string-face) 21 24 (fontified t face font-lock-string-face) 24 63 (fontified t face font-lock-string-face) 63 100 (fontified t face font-lock-string-face) 100 119 (fontified t face font-lock-string-face) 119 123 (fontified t face font-lock-string-face) 123 132 (fontified t face font-lock-string-face) 132 135 (fontified t face font-lock-string-face) 135 139 (fontified t face font-lock-string-face) 139 148 (fontified t face font-lock-string-face) 148 171 (fontified t face font-lock-string-face) 171 172 (fontified t face font-lock-string-face)) . 1406)) nil (23729 2929 892445 227000) 0 nil]) ((121 . 123) (#("\"" 0 1 (fontified nil)) . -121) (117 . 122) (97 . 117) (96 . 98) (#("(" 0 1 (fontified nil)) . -96) (96 . 97) (95 . 96) (94 . 95) 83) nil (23729 2929 892272 820000) 0 nil]) ((2168 . 2173) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -2168) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -2169) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) 2170 (2168 . 2170) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2168) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) 2169 (2153 . 2169) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -2153) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) 2154 (2146 . 2154) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -2146) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) 2147 (2142 . 2147) (2139 . 2142) (#("'" 0 1 (fontified t)) . -2139) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (#("'" 0 1 (fontified t)) . -2140) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (#(" " 0 1 (fontified t)) . -2141) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) 2142 (2139 . 2142) (2124 . 2139) 2061) nil (23729 2929 892305 854000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2125) (undo-tree-id1052 . -1)) nil (23729 2929 892313 721000) 0 nil]) ((nil rear-nonsticky nil 2124 . 2125) (#("
" 0 1 (fontified nil)) . -2125) (2124 . 2126) 2061) nil (23729 2929 892316 723000) 0 nil] [nil nil ((#("              " 0 14 (fontified t)) . -2203) (undo-tree-id1011 . -14) (undo-tree-id1012 . -14) 2217 (2202 . 2217) 2174) ((#("
              " 0 1 (fontified t) 1 15 (fontified nil)) . 2202) (undo-tree-id1034 . -15) (undo-tree-id1035 . -15) (2203 . 2217)) (23729 2813 474195 431000) 0 nil]) ((#("
" 0 1 (fontified t)) . 2125) (undo-tree-id1013 . 1)) nil (23729 2813 474412 44000) 0 nil]) ((#("              " 0 14 (fontified t)) . -2125) (undo-tree-id1014 . -14) (undo-tree-id1015 . -14) 2139 (2124 . 2139) 2108) nil (23729 2813 474208 767000) 0 nil]) ((1852 . 1874) (#(" " 0 1 (fontified t)) . 1852)) nil (23729 2813 474211 553000) 0 nil]) ((1594 . 1616) (#(" " 0 1 (fontified t)) . 1594)) nil (23729 2813 474213 805000) 0 nil]) ((1344 . 1366) (#(" " 0 1 (fontified t)) . 1344) (undo-tree-id1016 . 1) (undo-tree-id1017 . 1) (undo-tree-id1018 . 1)) nil (23729 2813 474219 487000) 0 nil]) ((1207 . 1229) (#(" " 0 1 (fontified t)) . 1207)) nil (23729 2813 474221 849000) 0 nil]) ((1148 . 1170) (#(" " 0 1 (fontified t)) . 1148) (undo-tree-id1019 . 1) (undo-tree-id1020 . 1) (undo-tree-id1021 . 1)) nil (23729 2813 474228 118000) 0 nil]) ((1054 . 1076) (#(" " 0 1 (fontified t)) . 1054) (undo-tree-id1022 . 1) (undo-tree-id1023 . 1) (undo-tree-id1024 . 1)) nil (23729 2813 474234 541000) 0 nil]) ((956 . 978) (#(" " 0 1 (fontified t)) . 956)) nil (23729 2813 474237 253000) 0 nil]) ((853 . 875) (#(" " 0 1 (fontified t)) . 853) (undo-tree-id1025 . 1) (undo-tree-id1026 . 1) (undo-tree-id1027 . 1)) nil (23729 2813 474243 479000) 0 nil]) ((769 . 791) (#(" " 0 1 (fontified t)) . 769)) nil (23729 2813 474246 163000) 0 nil]) ((640 . 662) (#(" " 0 1 (fontified t)) . 640) (undo-tree-id1028 . 1) (undo-tree-id1029 . 1) (undo-tree-id1030 . 1)) nil (23729 2813 474251 126000) 0 nil]) ((535 . 557) (#(" " 0 1 (fontified t)) . 535) (undo-tree-id1031 . 1) (undo-tree-id1032 . 1) (undo-tree-id1033 . 1)) nil (23729 2813 474257 127000) 0 nil]) ((448 . 470) (#(" " 0 1 (fontified t)) . 448)) nil (23729 2813 474259 400000) 0 nil]) ((448 . 449) (#(" " 0 1 (fontified t)) . 448)) nil (23729 2813 474261 747000) 0 nil]) ((347 . 369) (#(" " 0 1 (fontified t)) . 347)) nil (23729 2813 474264 195000) 0 nil]) ((347 . 348) (#(" " 0 1 (fontified t)) . 347)) nil (23729 2813 474266 516000) 0 nil] [nil ([nil nil ((358 . 381) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 358) (undo-tree-id989 . -1) (undo-tree-id990 . 1) (undo-tree-id991 . 1) (undo-tree-id992 . 1) (undo-tree-id993 . 1) (undo-tree-id994 . 1) (undo-tree-id995 . 1) (undo-tree-id996 . -1) (undo-tree-id997 . 1) (undo-tree-id998 . 1)) ((358 . 359) (#("
                      " 0 23 (fontified t)) . 358) (undo-tree-id1003 . -23) (undo-tree-id1004 . -23) (undo-tree-id1005 . 23) (undo-tree-id1006 . 23)) (23729 2659 209747 896000) 0 nil]) ((335 . 358) (#(" " 0 1 (fontified t)) . 335) (undo-tree-id999 . -1) (undo-tree-id1000 . 1) (undo-tree-id1001 . 1) (undo-tree-id1002 . 1)) ((335 . 336) (#("
                      " 0 1 (fontified t) 1 23 (fontified t)) . 335) (undo-tree-id1007 . -23) (undo-tree-id1008 . -23) (undo-tree-id1009 . 23) (undo-tree-id1010 . 23)) (23729 2659 209909 322000) 0 nil]) ((250 . 272) (#(" " 0 1 (fontified t)) . 250) (t 23729 2613 622292 505000)) nil (23729 2660 158829 727000) 0 nil]) ((#("x" 0 1 (fontified t)) . 1067) (undo-tree-id967 . 1) (undo-tree-id968 . 1) (undo-tree-id969 . 1) (undo-tree-id970 . 1) (undo-tree-id971 . 1) (undo-tree-id972 . 1)) nil (23729 2613 604797 815000) 0 nil]) ((1067 . 1068) (#(" " 0 1 (fontified t)) . 1067)) nil (23729 2613 604803 915000) 0 nil]) ((1006 . 1007) (#("=" 0 1 (fontified t)) . 1006)) nil (23729 2613 604807 294000) 0 nil]) ((1065 . 1066) (#(")" 0 1 (fontified t)) . -1007) (1007 . 1008) (#(")" 0 1 (fontified t)) . -999) (998 . 1000) (#("(" 0 1 (fontified nil)) . -998) (998 . 999)) nil (23729 2613 604812 784000) 0 nil]) ((969 . 970) (#("=" 0 1 (fontified t)) . 969)) nil (23729 2613 604816 506000) 0 nil]) ((996 . 997) (#(")" 0 1 (fontified t)) . -970) (970 . 971) (#(")" 0 1 (fontified t)) . -961) (960 . 962) (#("(" 0 1 (fontified nil)) . -960) (960 . 961)) nil (23729 2613 604820 561000) 0 nil]) ((947 . 948) (#("=" 0 1 (fontified t)) . 947)) nil (23729 2613 604824 81000) 0 nil]) ((958 . 959) (#(")" 0 1 (fontified t)) . -948) (948 . 949) (#(")" 0 1 (fontified t)) . -939) (938 . 940) (#("(" 0 1 (fontified nil)) . -938) (938 . 939) (1060 . 1061) (#(")" 0 1 (fontified t)) . -1002) (1002 . 1003) (#(")" 0 1 (fontified t)) . -993) (993 . 994) (#(")" 0 1 (fontified t)) . -967) 938 (967 . 968) (#(")" 0 1 (fontified t)) . -957) (957 . 958) (#(")" 0 1 (fontified t)) . -947) (947 . 948) (#(")" 0 1 (fontified t)) . -938) (937 . 939) (#("(" 0 1 (fontified nil)) . -937) (937 . 938)) nil (23729 2613 604835 821000) 0 nil]) ((#(" " 0 1 (fontified t)) . 932)) nil (23729 2613 604840 578000) 0 nil]) ((1060 . 1062) (931 . 933) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 1058) (#("<" 0 1 (fontified t)) . -931) (undo-tree-id973 . -1) (undo-tree-id974 . -1) 932) nil (23729 2613 604846 754000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1821)) nil (23729 2613 604866 880000) 0 nil]) ((1809 . 1810) (#("=" 0 1 (fontified t)) . 1809) (1819 . 1820) (#(")" 0 1 (fontified nil)) . -1810) (1810 . 1811) (#(")" 0 1 (fontified nil)) . -1802) (1801 . 1803) (#("(" 0 1 (fontified nil)) . -1801) (1801 . 1802) (1818 . 1819) (#(")" 0 1 (fontified nil)) . -1809) (1809 . 1810) (#(")" 0 1 (fontified nil)) . -1800) (1800 . 1801) (#(")" 0 1 (fontified nil)) . -1780) (1779 . 1781) (#("(" 0 1 (fontified nil)) . -1779) (1779 . 1780) (1784 . 1785) (#("=" 0 1 (fontified t)) . 1784) (1798 . 1799) (#(")" 0 1 (fontified nil)) . -1785) (1759 . 1773) (#("    " 0 4 (fontified nil)) . -1759) (undo-tree-id975 . 4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (1775 . 1776) (#(")" 0 1 (fontified nil)) . -1770) (1769 . 1771) (#("(" 0 1 (fontified nil)) . -1769) (1769 . 1770) (#(" " 0 1 (fontified nil)) . 1764) (1806 . 1808) (1763 . 1765) (#(">" 0 1 (rear-nonsticky t fontified nil face font-lock-builtin-face)) . 1804) (#("<" 0 1 (fontified t)) . 1763)) nil (23729 2613 604886 293000) 0 nil]) ((#("    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\">
    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">
    <link rel=\"manifest\" href=\"/manifest.json\">
    <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\">
" 0 14 (fontified t) 14 32 (fontified t face font-lock-string-face) 32 39 (fontified t) 39 48 (fontified t face font-lock-string-face) 48 54 (fontified t) 54 66 (fontified t face font-lock-string-face) 66 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-builtin-face) 78 79 (fontified t) 79 93 (fontified t) 93 99 (fontified t face font-lock-string-face) 99 105 (fontified t) 105 116 (fontified t face font-lock-string-face) 116 123 (fontified t) 123 130 (fontified t face font-lock-string-face) 130 136 (fontified t) 136 156 (fontified t face font-lock-string-face) 156 157 (fontified t face font-lock-builtin-face) 157 172 (fontified t) 172 182 (fontified t face font-lock-string-face) 182 188 (fontified t) 188 204 (fontified t face font-lock-string-face) 204 205 (fontified t face font-lock-builtin-face) 205 220 (fontified t) 220 231 (fontified t face font-lock-string-face) 231 237 (fontified t) 237 261 (fontified t face font-lock-string-face) 261 268 (fontified t) 268 269 (fontified t face font-lock-string-face) 269 276 (syntax-table #1=(6) fontified t face font-lock-string-face) 276 277 (fontified t face font-lock-string-face) 277 278 (fontified t face font-lock-builtin-face) 278 279 (fontified t)) . 1759) (undo-tree-id978 . -278) (undo-tree-id979 . -77) (undo-tree-id980 . -278) (undo-tree-id981 . -77) (undo-tree-id982 . -278) (undo-tree-id983 . -278) (undo-tree-id984 . -278) 2037) nil (23729 2613 604902 691000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1757)) nil (23729 2613 604905 694000) 0 nil]) ((1580 . 1581) (#("=" 0 1 (fontified t)) . 1580) (1755 . 1756) (#(")" 0 1 (fontified nil)) . -1581) (1581 . 1582) (#(")" 0 1 (fontified nil)) . -1573) (1572 . 1574) (#("(" 0 1 (fontified nil)) . -1572) (1572 . 1573) (1754 . 1755) (#(")" 0 1 (fontified nil)) . -1580) (1580 . 1581) (#(")" 0 1 (fontified nil)) . -1571) (1571 . 1572) (#(")" 0 1 (fontified nil)) . -1543) (1542 . 1544) (#("(" 0 1 (fontified nil)) . -1542) (1542 . 1543) (1547 . 1548) (#("=" 0 1 (fontified t)) . 1547) (1569 . 1570) (#(")" 0 1 (fontified nil)) . -1548) (1522 . 1536) (#("    " 0 4 (fontified nil)) . -1522) (undo-tree-id985 . -4) (undo-tree-id986 . -4) (1538 . 1539) (#(")" 0 1 (fontified nil)) . -1533) (1532 . 1534) (#("(" 0 1 (fontified nil)) . -1532) (1532 . 1533) (#(" " 0 1 (fontified nil)) . 1527) (1742 . 1744) (1526 . 1528) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 1740) (#("<" 0 1 (fontified t)) . 1526)) nil (23729 2613 604925 418000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1520)) nil (23729 2613 604933 80000) 0 nil]) ((1343 . 1344) (#("=" 0 1 (fontified nil)) . 1343) (1518 . 1519) (#(")" 0 1 (fontified nil)) . -1344) (1344 . 1345) (#(")" 0 1 (fontified nil)) . -1336) (1335 . 1337) (#("(" 0 1 (fontified nil)) . -1335) (1335 . 1336) (1517 . 1518) (#(")" 0 1 (fontified nil)) . -1343) (1343 . 1344) (#(")" 0 1 (fontified nil)) . -1334) (1334 . 1335) (#(")" 0 1 (fontified nil)) . -1314) (1313 . 1315) (#("(" 0 1 (fontified nil)) . -1313) (1313 . 1314) (1318 . 1319) (#("=" 0 1 (fontified t)) . 1318) (1332 . 1333) (#(")" 0 1 (fontified nil)) . -1319) (1293 . 1307) (#("    " 0 4 (fontified nil)) . -1293) (undo-tree-id987 . -4) (undo-tree-id988 . -4) (1309 . 1310) (#(")" 0 1 (fontified nil)) . -1304) (1303 . 1305) (#("(" 0 1 (fontified nil)) . -1303) (1303 . 1304) (#(" " 0 1 (fontified nil)) . 1298) (1505 . 1507) (1297 . 1299) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 1503) (#("<" 0 1 (fontified t)) . 1297)) nil (23729 2613 604951 981000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1291)) nil (23729 2613 604958 894000) 0 nil]) ((1114 . 1115) (#("=" 0 1 (fontified t)) . 1114) (1289 . 1290) (#(")" 0 1 (fontified nil)) . -1115) (1115 . 1116) (#(")" 0 1 (fontified nil)) . -1107) (1106 . 1108) (#("(" 0 1 (fontified nil)) . -1106) (1106 . 1107) (1288 . 1289) (#(")" 0 1 (fontified nil)) . -1114) (1114 . 1115) (#(")" 0 1 (fontified nil)) . -1105) (1105 . 1106) (#(")" 0 1 (fontified nil)) . -1082) (1081 . 1083) (#("(" 0 1 (fontified nil)) . -1081) (1081 . 1082) (1086 . 1087) (#("=" 0 1 (fontified nil)) . 1086) (1103 . 1104) (#(")" 0 1 (fontified nil)) . -1087) (1087 . 1088) (#(")" 0 1 (fontified nil)) . -1082) (1081 . 1083) (#("(" 0 1 (fontified nil)) . -1081) (1081 . 1082) (#(" " 0 1 (fontified nil)) . 1076) (1286 . 1288) (1075 . 1077) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 1284) (#("<" 0 1 (fontified t)) . 1075)) nil (23729 2613 604973 331000) 0 nil] [nil nil ((969 . 970) (#("=" 0 1 (fontified t)) . 969) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . 1) (996 . 997) (#(")" 0 1 (fontified nil)) . -970) (undo-tree-id860 . -1) (undo-tree-id861 . 1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (970 . 971) (#(")" 0 1 (fontified nil)) . -961) (undo-tree-id864 . -1) (undo-tree-id865 . 1) (960 . 962) (#("(" 0 1 (fontified nil)) . -960) (960 . 961) (995 . 996) (#(")" 0 1 (fontified nil)) . -969) (969 . 970) (#(")" 0 1 (fontified nil)) . -959) (959 . 960) (#(")" 0 1 (fontified nil)) . -938) (937 . 939) (#("(" 0 1 (fontified nil)) . -937) (937 . 938) (946 . 947) (#("=" 0 1 (fontified t)) . 946) (957 . 958) (#(")" 0 1 (fontified nil)) . -947) (947 . 948) (#(")" 0 1 (fontified nil)) . -938) (937 . 939) (#("(" 0 1 (fontified nil)) . -937) (937 . 938) (#(" " 0 1 (fontified nil)) . 932) (1060 . 1062) (931 . 933) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 1058) (#("<" 0 1 (fontified t)) . 931)) ((931 . 932) (1058 . 1059) (#("( " 0 1 (fontified nil) 1 2 (fontified nil)) . 931) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . 2) (undo-tree-id871 . -1) (#(" )" 0 2 (fontified nil)) . 1060) (undo-tree-id872 . -2) (undo-tree-id873 . 1) (undo-tree-id874 . 2) (undo-tree-id875 . 2) (undo-tree-id876 . 2) (undo-tree-id877 . 2) (undo-tree-id878 . 2) (undo-tree-id879 . 2) (undo-tree-id880 . 1) (undo-tree-id881 . 2) (undo-tree-id882 . -1) (undo-tree-id883 . 1) (undo-tree-id884 . 2) (undo-tree-id885 . -1) (undo-tree-id886 . 1) (undo-tree-id887 . 2) (undo-tree-id888 . 1) (undo-tree-id889 . 2) (undo-tree-id890 . 1) (undo-tree-id891 . 2) (undo-tree-id892 . 1) (undo-tree-id893 . 1) (undo-tree-id894 . 1) (undo-tree-id895 . 1) (undo-tree-id896 . 1) (undo-tree-id897 . 1) (undo-tree-id898 . -1) (undo-tree-id899 . 1) (undo-tree-id900 . -1) (undo-tree-id901 . 1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . 1) (undo-tree-id905 . 1) (undo-tree-id906 . -1) (undo-tree-id907 . 1) (undo-tree-id908 . -2) (932 . 933) (#("(" 0 1 (fontified nil)) . 937) (937 . 938) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 937) (undo-tree-id909 . 2) (undo-tree-id910 . 2) (undo-tree-id911 . 2) (undo-tree-id912 . 2) (undo-tree-id913 . 2) (undo-tree-id914 . 2) (undo-tree-id915 . 2) (undo-tree-id916 . 2) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (938 . 939) (#(")" 0 1 (fontified nil)) . 947) (947 . 948) (#(")" 0 1 (fontified nil)) . 957) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (946 . 947) (#(" " 0 1 (fontified nil)) . 946) (undo-tree-id921 . -1) (#("(" 0 1 (fontified nil)) . 937) (937 . 938) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 937) (undo-tree-id922 . 2) (undo-tree-id923 . 2) (undo-tree-id924 . 2) (undo-tree-id925 . 2) (undo-tree-id926 . 2) (undo-tree-id927 . 2) (undo-tree-id928 . 2) (undo-tree-id929 . 2) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (938 . 939) (#(")" 0 1 (fontified nil)) . 959) (959 . 960) (#(")" 0 1 (fontified nil)) . 969) (969 . 970) (#(")" 0 1 (fontified nil)) . 995) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (#("(" 0 1 (fontified nil)) . 960) (960 . 961) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 960) (undo-tree-id936 . 1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . 2) (undo-tree-id943 . 2) (undo-tree-id944 . 2) (undo-tree-id945 . 2) (undo-tree-id946 . 2) (undo-tree-id947 . 2) (undo-tree-id948 . 2) (undo-tree-id949 . 2) (undo-tree-id950 . 2) (undo-tree-id951 . 2) (undo-tree-id952 . 2) (undo-tree-id953 . 2) (undo-tree-id954 . 2) (undo-tree-id955 . 2) (undo-tree-id956 . 2) (undo-tree-id957 . 2) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (961 . 962) (#(")" 0 1 (fontified nil)) . 970) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (970 . 971) (#(")" 0 1 (fontified nil)) . 996) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (969 . 970) (#(" " 0 1 (fontified t)) . 969) (undo-tree-id966 . 1)) (23729 2526 467807 29000) 0 nil]) ((1061 . 1075) (917 . 931) (#("    " 0 4 (fontified nil)) . -917) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (1050 . 1051)) nil (23729 2526 471092 503000) 0 nil] [nil ([nil nil ((#(" " 0 1 (fontified t)) . 1065) (undo-tree-id772 . -1) (undo-tree-id773 . 1) (undo-tree-id774 . 1) (undo-tree-id775 . 1) (undo-tree-id776 . 1) (undo-tree-id777 . 1)) ((1065 . 1066)) (23729 2505 809216 309000) 0 nil]) ((#("." 0 1 (fontified t face font-lock-string-face)) . 1275) (969 . 970) (#("=" 0 1 (fontified nil)) . 969) (996 . 997) (#(")" 0 1 (fontified nil)) . -970) (970 . 971) (#(")" 0 1 (fontified nil)) . -961) (960 . 962) (#("(" 0 1 (fontified nil)) . -960) (960 . 961) (995 . 996) (#(")" 0 1 (fontified nil)) . -969) (969 . 970) (#(")" 0 1 (fontified nil)) . -959) (959 . 960) (#(")" 0 1 (fontified nil)) . -938) (937 . 939) (#("(" 0 1 (fontified nil)) . -937) (937 . 938) (946 . 947) (#("=" 0 1 (fontified nil)) . 946) (957 . 958) (#(")" 0 1 (fontified nil)) . -947) (917 . 931) (#("    " 0 4 (fontified nil)) . -917) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (937 . 938) (#(")" 0 1 (fontified nil)) . -928) (927 . 929) (#("(" 0 1 (fontified nil)) . -927) (927 . 928) (#(" " 0 1 (fontified nil)) . 922) (1050 . 1052) (921 . 923) (#(">" 0 1 (fontified nil)) . 1048) (#("<" 0 1 (fontified t)) . 921)) ((921 . 922) (1048 . 1049) (#("( " 0 1 (fontified nil) 1 2 (fontified nil)) . 921) (undo-tree-id796 . 2) (undo-tree-id797 . 2) (undo-tree-id798 . 2) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (#(" )" 0 1 (fontified nil) 1 2 (fontified nil)) . 1050) (undo-tree-id801 . 1) (undo-tree-id802 . -1) (undo-tree-id803 . 1) (undo-tree-id804 . 1) (undo-tree-id805 . 2) (undo-tree-id806 . 1) (undo-tree-id807 . 2) (undo-tree-id808 . 1) (undo-tree-id809 . 2) (undo-tree-id810 . 1) (undo-tree-id811 . 2) (undo-tree-id812 . 1) (undo-tree-id813 . 2) (undo-tree-id814 . 1) (undo-tree-id815 . 1) (undo-tree-id816 . 1) (undo-tree-id817 . 1) (undo-tree-id818 . 1) (undo-tree-id819 . 1) (undo-tree-id820 . 1) (undo-tree-id821 . 1) (undo-tree-id822 . 1) (undo-tree-id823 . 1) (undo-tree-id824 . 1) (undo-tree-id825 . 2) (undo-tree-id826 . 2) (undo-tree-id827 . 2) (undo-tree-id828 . 2) (undo-tree-id829 . 2) (undo-tree-id830 . 2) (undo-tree-id831 . 2) (undo-tree-id832 . 2) (undo-tree-id833 . 2) (undo-tree-id834 . 2) (922 . 923) (#("(" 0 1 (fontified nil)) . 927) (927 . 928) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 927) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (928 . 929) (#(")" 0 1 (fontified nil)) . 937) (917 . 921) (#("              " 0 14 (fontified nil)) . 917) (undo-tree-id837 . -14) (undo-tree-id838 . -14) (undo-tree-id839 . -14) (undo-tree-id840 . -14) (947 . 948) (#(")" 0 1 (fontified nil)) . 957) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (946 . 947) (#(" " 0 1 (fontified nil)) . 946) (#("(" 0 1 (fontified nil)) . 937) (937 . 938) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 937) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (938 . 939) (#(")" 0 1 (fontified nil)) . 959) (959 . 960) (#(")" 0 1 (fontified nil)) . 969) (969 . 970) (#(")" 0 1 (fontified nil)) . 995) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (#("(" 0 1 (fontified nil)) . 960) (960 . 961) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 960) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (961 . 962) (#(")" 0 1 (fontified nil)) . 970) (970 . 971) (#(")" 0 1 (fontified nil)) . 996) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (969 . 970) (#(" " 0 1 (fontified nil)) . 969) (1275 . 1276)) (23729 2505 810002 296000) 0 nil]) ((#(" " 0 1 (fontified t)) . 915)) nil (23729 2506 767490 189000) 0 nil]) ((895 . 896) (#("=" 0 1 (fontified nil)) . 895) (913 . 914) (#(")" 0 1 (fontified nil)) . -896) (896 . 897) (#(")" 0 1 (fontified nil)) . -888) (887 . 889) (#("(" 0 1 (fontified nil)) . -887) (887 . 888) (912 . 913) (#(")" 0 1 (fontified nil)) . -895) (895 . 896) (#(")" 0 1 (fontified nil)) . -886) (886 . 887) (#(")" 0 1 (fontified nil)) . -858) (857 . 859) (#("(" 0 1 (fontified nil)) . -857) (857 . 858) (866 . 867) (#("=" 0 1 (fontified t)) . 866) (884 . 885) (#(")" 0 1 (fontified nil)) . -867) (837 . 851) (#("    " 0 4 (fontified nil)) . -837) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (857 . 858) (#(")" 0 1 (fontified nil)) . -848) (847 . 849) (#("(" 0 1 (fontified nil)) . -847) (847 . 848) (#(" " 0 1 (fontified nil)) . 842) (900 . 902) (841 . 843) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 898) (#("<" 0 1 (fontified t)) . 841)) nil (23729 2505 809320 642000) 0 nil]) ((#(" " 0 1 (fontified t)) . 835)) nil (23729 2505 809337 22000) 0 nil]) ((818 . 819) (#("=" 0 1 (fontified t)) . 818) (833 . 834) (#(")" 0 1 (fontified nil)) . -819) (819 . 820) (#(")" 0 1 (fontified nil)) . -811) (810 . 812) (#("(" 0 1 (fontified nil)) . -810) (810 . 811) (832 . 833) (#(")" 0 1 (fontified nil)) . -818) (818 . 819) (#(")" 0 1 (fontified nil)) . -809) (809 . 810) (#(")" 0 1 (fontified nil)) . -784) (783 . 785) (#("(" 0 1 (fontified nil)) . -783) (783 . 784) (792 . 793) (#("=" 0 1 (fontified t)) . 792) (807 . 808) (#(")" 0 1 (fontified nil)) . -793) (763 . 777) (#("    " 0 4 (fontified nil)) . -763) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (783 . 784) (#(")" 0 1 (fontified nil)) . -774) (773 . 775) (#("(" 0 1 (fontified nil)) . -773) (773 . 774) (#(" " 0 1 (fontified nil)) . 768) (820 . 822) (767 . 769) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 818) (#("<" 0 1 (fontified t)) . 767)) nil (23729 2505 809375 61000) 0 nil]) ((#(" " 0 1 (fontified t)) . 761)) nil (23729 2505 809390 837000) 0 nil]) ((736 . 737) (#("=" 0 1 (fontified nil)) . 736) (759 . 760) (#(")" 0 1 (fontified nil)) . -737) (737 . 738) (#(")" 0 1 (fontified nil)) . -729) (728 . 730) (#("(" 0 1 (fontified nil)) . -728) (728 . 729) (758 . 759) (#(")" 0 1 (fontified nil)) . -736) (736 . 737) (#(")" 0 1 (fontified nil)) . -727) (727 . 728) (#(")" 0 1 (fontified nil)) . -708) (707 . 709) (#("(" 0 1 (fontified nil)) . -707) (707 . 708) (716 . 717) (#("=" 0 1 (fontified nil)) . 716) (725 . 726) (#(")" 0 1 (fontified nil)) . -717) (687 . 701) (#("    " 0 4 (fontified nil)) . -687) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (707 . 708) (#(")" 0 1 (fontified nil)) . -698) (697 . 699) (#("(" 0 1 (fontified nil)) . -697) (697 . 698) (#(" " 0 1 (fontified nil)) . 692) (746 . 748) (691 . 693) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 744) (#("<" 0 1 (fontified t)) . 691)) nil (23729 2505 809427 699000) 0 nil]) ((#(" " 0 1 (fontified t)) . 685)) nil (23729 2505 809443 750000) 0 nil]) ((673 . 674) (#("=" 0 1 (fontified nil)) . 673) (683 . 684) (#(")" 0 1 (fontified nil)) . -674) (674 . 675) (#(")" 0 1 (fontified nil)) . -666) (665 . 667) (#("(" 0 1 (fontified nil)) . -665) (665 . 666) (682 . 683) (#(")" 0 1 (fontified nil)) . -673) (673 . 674) (#(")" 0 1 (fontified nil)) . -664) (664 . 665) (#(")" 0 1 (fontified nil)) . -644) (643 . 645) (#("(" 0 1 (fontified nil)) . -643) (643 . 644) (652 . 653) (#("=" 0 1 (fontified nil)) . 652) (662 . 663) (#(")" 0 1 (fontified nil)) . -653) (623 . 637) (#("    " 0 4 (fontified nil)) . -623) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (643 . 644) (#(")" 0 1 (fontified nil)) . -634) (633 . 635) (#("(" 0 1 (fontified nil)) . -633) (633 . 634) (#(" " 0 1 (fontified nil)) . 628) (670 . 672) (627 . 629) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 668) (#("<" 0 1 (fontified t)) . 627)) nil (23729 2505 809480 649000) 0 nil]) ((#(" " 0 1 (fontified t)) . 620) (565 . 566) (#("=" 0 1 (fontified nil)) . 565) (618 . 619) (#(")" 0 1 (fontified nil)) . -566) (566 . 567) (#(")" 0 1 (fontified nil)) . -558) (557 . 559) (#("(" 0 1 (fontified nil)) . -557) (557 . 558) (617 . 618) (#(")" 0 1 (fontified nil)) . -565) (565 . 566) (#(")" 0 1 (fontified nil)) . -556) (556 . 557) (#(")" 0 1 (fontified nil)) . -530) (529 . 531) (#("(" 0 1 (fontified nil)) . -529) (529 . 530) (534 . 535) (#("=" 0 1 (fontified t)) . 534) (554 . 555) (#(")" 0 1 (fontified nil)) . -535) (509 . 523) (#("    " 0 4 (fontified nil)) . -509) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (525 . 526) (#(")" 0 1 (fontified nil)) . -520) (519 . 521) (#("(" 0 1 (fontified nil)) . -519) (519 . 520) (#(" " 0 1 (fontified nil)) . 514) (605 . 607) (513 . 515) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 603) (#("<" 0 1 (fontified t)) . 513)) nil (23729 2505 809529 908000) 0 nil]) ((#(" " 0 1 (fontified t)) . 507)) nil (23729 2505 809546 623000) 0 nil]) ((481 . 482) (#("=" 0 1 (fontified nil)) . 481) (505 . 506) (#(")" 0 1 (fontified nil)) . -482) (482 . 483) (#(")" 0 1 (fontified nil)) . -474) (473 . 475) (#("(" 0 1 (fontified nil)) . -473) (473 . 474) (504 . 505) (#(")" 0 1 (fontified nil)) . -481) (481 . 482) (#(")" 0 1 (fontified nil)) . -472) (472 . 473) (#(")" 0 1 (fontified nil)) . -450) (449 . 451) (#("(" 0 1 (fontified nil)) . -449) (449 . 450) (454 . 455) (#("=" 0 1 (fontified t)) . 454) (470 . 471) (#(")" 0 1 (fontified nil)) . -455) (429 . 443) (#("    " 0 4 (fontified nil)) . -429) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (445 . 446) (#(")" 0 1 (fontified nil)) . -440) (439 . 441) (#("(" 0 1 (fontified nil)) . -439) (439 . 440) (#(" " 0 1 (fontified nil)) . 434) (492 . 494) (433 . 435) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 490) (#("<" 0 1 (fontified t)) . 433)) nil (23729 2505 809585 303000) 0 nil]) ((#(" " 0 1 (fontified t)) . 427)) nil (23729 2505 809600 469000) 0 nil]) ((415 . 416) (#("=" 0 1 (fontified nil)) . 415) (425 . 426) (#(")" 0 1 (fontified nil)) . -416) (416 . 417) (#(")" 0 1 (fontified nil)) . -408) (407 . 409) (#("(" 0 1 (fontified nil)) . -407) (407 . 408) (424 . 425) (#(")" 0 1 (fontified nil)) . -415) (415 . 416) (#(")" 0 1 (fontified nil)) . -406) (406 . 407) (#(")" 0 1 (fontified nil)) . -385) (384 . 386) (#("(" 0 1 (fontified nil)) . -384) (384 . 385) (389 . 390) (#("=" 0 1 (fontified nil)) . 389) (404 . 405) (#(")" 0 1 (fontified nil)) . -390) (364 . 378) (#("    " 0 4 (fontified nil)) . -364) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (380 . 381) (#(")" 0 1 (fontified nil)) . -375) (374 . 376) (#("(" 0 1 (fontified nil)) . -374) (374 . 375) (#(" " 0 1 (fontified nil)) . 369) (412 . 414) (368 . 370) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 410) (#("<" 0 1 (fontified t)) . 368)) nil (23729 2505 809638 618000) 0 nil]) ((#(" " 0 1 (fontified t)) . 361)) nil (23729 2505 809654 193000) 0 nil]) ((335 . 336) (#("=" 0 1 (fontified t)) . 335)) nil (23729 2505 809658 760000) 0 nil]) ((359 . 360) (#(")" 0 1 (fontified t)) . -336) (336 . 337) (#(")" 0 1 (fontified t)) . -328) (327 . 329) (#("(" 0 1 (fontified nil)) . -327) (327 . 328)) nil (23729 2505 809667 417000) 0 nil]) ((358 . 359) (#(")" 0 1 (fontified t)) . -335) (335 . 336) (#(")" 0 1 (fontified t)) . -326) (326 . 327) (#(")" 0 1 (fontified t)) . -305) (304 . 306) (#("(" 0 1 (fontified nil)) . -304) (304 . 305)) nil (23729 2505 809679 392000) 0 nil]) ((313 . 314) (#("=" 0 1 (fontified t)) . 313)) nil (23729 2505 809686 17000) 0 nil]) ((324 . 325) (#(")" 0 1 (fontified t)) . -314) (284 . 298) (#("    " 0 4 (fontified nil)) . -284) (304 . 305) (#(")" 0 1 (fontified t)) . -295) (294 . 296) (#("(" 0 1 (fontified nil)) . -294) (294 . 295)) nil (23729 2505 809696 530000) 0 nil]) ((#(" " 0 1 (fontified t)) . 289)) nil (23729 2505 809703 53000) 0 nil]) ((346 . 348) (288 . 290) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 344) (#("<" 0 1 (fontified t)) . 288)) nil (23729 2505 809709 470000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -288) (undo-tree-id794 . -2) (undo-tree-id795 . -2) (284 . 288) 286) nil (23729 2505 809721 741000) 0 nil]) ((284 . 286) 330) nil (23729 2505 809727 184000) 0 nil]) ((nil rear-nonsticky nil 1889 . 1890) (nil fontified nil 284 . 1890) (284 . 1890)) nil (23729 2505 809732 542000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil nil ((249 . 271) (#(" " 0 1 (fontified t)) . 249)) ((249 . 250) (#("
                     " 0 22 (fontified t)) . 249) (undo-tree-id734 . -22) (undo-tree-id735 . -22) (undo-tree-id736 . -22) (t 23729 2254 410318 776000)) (23729 2254 252723 795000) 0 nil]) ((231 . 232) (#("r" 0 1 (fontified t)) . 231) (undo-tree-id724 . 1) (231 . 232) (#("(" 0 1 (fontified t)) . 231) (undo-tree-id725 . 1) (undo-tree-id726 . 1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id730 . 1)) ((231 . 232) (#("r" 0 1 (fontified nil)) . 231) (231 . 232) (#(" " 0 1 (fontified t)) . 231) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1)) (23729 2285 450094 464000) 0 nil]) ((209 . 210) (#("r" 0 1 (fontified t)) . 209) (209 . 210) (#(")" 0 1 (fontified t)) . 209) (undo-tree-id732 . 1) (undo-tree-id733 . -1) (t 23729 2194 417351 579000)) ((209 . 210) (#("r" 0 1 (fontified nil)) . 209) (209 . 210) (#(" " 0 1 (fontified t)) . 209)) (23729 2285 775044 276000) 0 nil] [nil ([nil nil ((250 . 251)) ((#(" " 0 1 (fontified t)) . 250) (undo-tree-id710 . 1) (undo-tree-id711 . 1)) (23729 2235 501399 56000) 0 nil]) ((249 . 250) (#("r" 0 1 (fontified t)) . 249) (249 . 250) (#(" " 0 1 (fontified t)) . 249) (t 23729 2194 417351 579000)) ((249 . 250) (#("r" 0 1 (fontified nil)) . 249) (249 . 250) (#(")" 0 1 (fontified t)) . 249) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . 1) (undo-tree-id721 . 1)) (23729 2235 501662 631000) 0 nil]) ((#("meta " 0 5 (fontified t)) . 231)) ((231 . 236)) (23729 2285 979883 780000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 286) (undo-tree-id706 . -1) (#("(" 0 1 (fontified t)) . -231) (undo-tree-id707 . -1) (undo-tree-id708 . -1) 232) ((231 . 232) (286 . 287)) (23729 2286 252795 796000) 0 nil]) ((211 . 231) (#("              " 0 14 (fontified nil)) . -211) (282 . 283) (#(")" 0 1 (fontified t)) . -210) (undo-tree-id709 . -1) 187 (t 23729 2142 201003 349000)) ((210 . 211) (#(")" 0 1 (fontified nil)) . 282) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (211 . 225) (#("                    " 0 20 (fontified t)) . 211)) (23729 2286 506115 798000) 0 nil]) ((211 . 226) (#(" " 0 1 (fontified t)) . 211) (undo-tree-id769 . 1) (undo-tree-id770 . 1) (undo-tree-id771 . 1)) ((211 . 212) (#("
              " 0 1 (fontified t) 1 15 (fontified t)) . 211)) (23729 2294 361700 333000) 0 nil]) ((211 . 212) (#("                     " 0 20 (fontified nil) 20 21 (rear-nonsticky t fontified nil)) . 211) (undo-tree-id764 . 21) (undo-tree-id765 . 21) (#("
" 0 1 (fontified t)) . 211) (undo-tree-id766 . -1) (undo-tree-id767 . 1) (undo-tree-id768 . 1)) ((211 . 212) (211 . 232) (#(" " 0 1 (fontified t)) . 211) (undo-tree-id749 . 1) (undo-tree-id750 . 1)) (23729 2293 983536 261000) 0 nil]) ((#("                     " 0 17 (fontified nil) 17 21 (fontified nil)) . 209) (undo-tree-id754 . 21) (undo-tree-id755 . 21) (undo-tree-id756 . 21) (undo-tree-id757 . 21) (#("
" 0 1 (fontified t)) . 209) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1)) ((209 . 210) (209 . 230)) (23729 2293 489795 644000) 0 nil]) ((#("    <meta property=\"og:title\" content=\" Home |  CodeSections\"> 
    <meta name=\"twitter:card\" content=\"summary\">
    <meta name=\"twitter:title\" content=\" Home |  CodeSections\">
    <meta name=\"twitter:image:src\" content=\"https://www.codesections.com/codesections_logo.png\"> 
    <meta property=\"og:type\" content=\"article\">
    <meta property=\"og:url\" content=\"www.codesections.com\">
    <meta property=\"og:site_name\" content=\"CodeSections\">
    <meta property=\"article:section\" content=\"Article Section\">
    <meta property=\"og:image\" itemprop=\"image primaryImageOfPage\" content=\"https://www.codesections.com/codesections_logo_large.png\"><meta name=\"og:description\" content=\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\">
    <meta name=\"description\" content=\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\">
    <meta name=\"twitter:description\" content=\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\">
    <meta name=\"theme-color\" content=\"#d9d9d9\">

" 0 19 (fontified t) 19 29 (fontified t face font-lock-string-face) 29 38 (fontified t) 38 61 (fontified t face font-lock-string-face) 61 62 (fontified t face font-lock-builtin-face) 62 64 (fontified t) 64 79 (fontified t) 79 93 (fontified t face font-lock-string-face) 93 102 (fontified t) 102 111 (fontified t face font-lock-string-face) 111 112 (fontified t face font-lock-builtin-face) 112 128 (fontified t) 128 143 (fontified t face font-lock-string-face) 143 152 (fontified t) 152 175 (fontified t face font-lock-string-face) 175 176 (fontified t face font-lock-builtin-face) 176 192 (fontified t) 192 211 (fontified t face font-lock-string-face) 211 220 (fontified t) 220 272 (fontified t face font-lock-string-face) 272 273 (fontified t face font-lock-builtin-face) 273 294 (fontified t) 294 303 (fontified t face font-lock-string-face) 303 312 (fontified t) 312 321 (fontified t face font-lock-string-face) 321 322 (fontified t face font-lock-builtin-face) 322 342 (fontified t) 342 350 (fontified t face font-lock-string-face) 350 359 (fontified t) 359 381 (fontified t face font-lock-string-face) 381 382 (fontified t face font-lock-builtin-face) 382 402 (fontified t) 402 416 (fontified t face font-lock-string-face) 416 420 (fontified t) 420 425 (fontified t) 425 439 (fontified t face font-lock-string-face) 439 440 (fontified t face font-lock-builtin-face) 440 441 (fontified t) 441 444 (fontified t) 444 460 (fontified t) 460 477 (fontified t face font-lock-string-face) 477 486 (fontified t) 486 500 (fontified t face font-lock-string-face) 500 503 (fontified t face font-lock-string-face) 503 504 (fontified t face font-lock-builtin-face) 504 505 (fontified t) 505 524 (fontified t) 524 534 (fontified t face font-lock-string-face) 534 544 (fontified t) 544 564 (fontified t face font-lock-string-face) 564 570 (fontified t face font-lock-string-face) 570 579 (fontified t) 579 637 (fontified t face font-lock-string-face) 637 649 (fontified t) 649 665 (fontified t face font-lock-string-face) 665 674 (fontified t) 674 848 (fontified t face font-lock-string-face) 848 849 (fontified t face font-lock-builtin-face) 849 850 (fontified t) 850 865 (fontified t) 865 878 (fontified t face font-lock-string-face) 878 887 (fontified t) 887 941 (fontified t face font-lock-string-face) 941 1005 (fontified t face font-lock-string-face) 1005 1061 (fontified t face font-lock-string-face) 1061 1062 (fontified t face font-lock-builtin-face) 1062 1063 (fontified t) 1063 1078 (fontified t) 1078 1099 (fontified t face font-lock-string-face) 1099 1108 (fontified t) 1108 1282 (fontified t face font-lock-string-face) 1282 1283 (fontified t face font-lock-builtin-face) 1283 1284 (fontified t) 1284 1299 (fontified t) 1299 1312 (fontified t face font-lock-string-face) 1312 1321 (fontified t) 1321 1322 (fontified t face font-lock-string-face) 1322 1329 (fontified t syntax-table #1# face font-lock-string-face) 1329 1330 (fontified t face font-lock-string-face) 1330 1331 (rear-nonsticky t fontified t face font-lock-builtin-face) 1331 1332 (fontified t) 1332 1333 (fontified t)) . 210) (undo-tree-id751 . -1332) (undo-tree-id752 . -1332) (undo-tree-id753 . 1333)) ((210 . 1543)) (23729 2293 194136 221000) 0 nil]) ((nil rear-nonsticky nil 1587 . 1588) (#("
" 0 1 (fontified nil)) . -1645) (1566 . 1646) 1543) nil (23729 2292 217937 886000) 0 nil]) ((#("                     (meta ((name \"viewport\") (content \"width=device-width\")))
" 0 21 (fontified t) 21 22 (fontified t) 22 27 (fontified t) 27 28 (fontified t) 28 29 (fontified t) 29 33 (fontified t) 33 34 (fontified t) 34 44 (fontified t face font-lock-string-face) 44 45 (fontified t) 45 46 (fontified t) 46 47 (fontified t) 47 54 (fontified t) 54 55 (fontified t) 55 75 (fontified t face font-lock-string-face) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t) 78 79 (fontified t)) . 210) (undo-tree-id697 . 32) (undo-tree-id698 . -77) (undo-tree-id699 . -77) 287) nil (23729 2142 109875 449000) 0 nil]) ((#(" " 0 1 (fontified t)) . 287)) nil (23729 2142 109877 557000) 0 nil]) ((264 . 265) (#("=" 0 1 (fontified t)) . 264)) nil (23729 2142 109879 621000) 0 nil]) ((285 . 286) (#(")" 0 1 (fontified t)) . -265) (265 . 266) (#(")" 0 1 (fontified t)) . -257) (256 . 258) (#("(" 0 1 (fontified nil)) . -256) (256 . 257) (#("I" 0 1 (fontified t)) . -256) (undo-tree-id700 . -1) (undo-tree-id701 . -1) 257 (256 . 257) (#("i" 0 1 (fontified t)) . -256) (undo-tree-id702 . -1) (undo-tree-id703 . -1) 257 (256 . 257)) nil (23729 2142 109890 543000) 0 nil]) ((284 . 285) (#(")" 0 1 (fontified t)) . -264) (264 . 265) (#(")" 0 1 (fontified t)) . -255) (255 . 256) (#(")" 0 1 (fontified t)) . -238) (237 . 239) (#("(" 0 1 (fontified nil)) . -237) (237 . 238) (#("9" 0 1 (fontified t face racket-selfeval-face)) . -237) (undo-tree-id704 . -1) (undo-tree-id705 . -1) 238 (237 . 238)) nil (23729 2142 109900 942000) 0 nil] [nil nil ((211 . 233) (#("                     " 0 21 (fontified nil)) . -211) (undo-tree-id618 . -21) (undo-tree-id619 . -21) (undo-tree-id620 . -21) (undo-tree-id621 . -21) (192 . 193) (#("(" 0 1 (fontified t)) . 231) (undo-tree-id622 . -1) (undo-tree-id623 . -1) 237) ((231 . 232) (#("(" 0 1 (fontified t)) . 192) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (211 . 232) (#("                      " 0 22 (fontified t)) . 211)) (23729 2088 425545 630000) 0 nil] [nil nil ((211 . 233) (#("                     " 0 21 (fontified nil)) . -211) (undo-tree-id610 . -21) (undo-tree-id611 . -21) (undo-tree-id612 . -21) (undo-tree-id613 . -21) (192 . 193) (#("(" 0 1 (fontified t)) . 231) (undo-tree-id614 . -1) (undo-tree-id615 . -1) 237) ((231 . 232) (#("(" 0 1 (fontified t)) . 192) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (211 . 232) (#("                      " 0 22 (fontified t)) . 211)) (23729 2085 139722 926000) 0 nil]) ((242 . 243) (#("=" 0 1 (fontified t)) . 242) (undo-tree-id633 . 1) (undo-tree-id634 . 1) (undo-tree-id635 . 1) (undo-tree-id636 . 1) (undo-tree-id637 . 1)) ((242 . 243) (#(" " 0 1 (fontified t)) . 242) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1)) (23729 2093 500051 688000) 0 nil]) ((253 . 254) (#(")" 0 1 (fontified t)) . -243) (210 . 231) (#("    " 0 4 (fontified nil)) . -210) (226 . 227) (#(")" 0 1 (fontified t)) . -221) (220 . 222) (#("(" 0 1 (fontified nil)) . -220) (220 . 221)) nil (23729 2091 208606 261000) 0 nil] [nil nil ((#("meta " 0 5 (fontified t)) . 215) 214) ((215 . 220)) (23729 2061 47629 837000) 0 nil]) ((#(" " 0 1 (fontified t)) . 215) (undo-tree-id591 . 1) 214) nil (23729 2061 47988 139000) 0 nil]) ((265 . 267) (214 . 216) (#(">" 0 1 (fontified nil face font-lock-builtin-face)) . 263) (#("<" 0 1 (fontified t)) . 214)) nil (23729 2061 47669 664000) 0 nil]) ((#("
" 0 1 (fontified t)) . 210) (undo-tree-id592 . -1)) nil (23729 2061 47678 933000) 0 nil]) ((#("
" 0 1 (fontified t)) . 210)) nil (23729 2061 47683 384000) 0 nil]) ((#("    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\">
    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">
    <link rel=\"manifest\" href=\"/manifest.json\">
    <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\">
" 0 14 (fontified t) 14 32 (fontified t face font-lock-string-face) 32 39 (fontified t) 39 48 (fontified t face font-lock-string-face) 48 54 (fontified t) 54 77 (fontified t face font-lock-string-face) 77 78 (fontified t face font-lock-builtin-face) 78 93 (fontified t) 93 99 (fontified t face font-lock-string-face) 99 105 (fontified t) 105 116 (fontified t face font-lock-string-face) 116 123 (fontified t) 123 130 (fontified t face font-lock-string-face) 130 136 (fontified t) 136 156 (fontified t face font-lock-string-face) 156 157 (fontified t face font-lock-builtin-face) 157 172 (fontified t) 172 182 (fontified t face font-lock-string-face) 182 188 (fontified t) 188 204 (fontified t face font-lock-string-face) 204 205 (fontified t face font-lock-builtin-face) 205 220 (fontified t) 220 231 (fontified t face font-lock-string-face) 231 237 (fontified t) 237 261 (fontified t face font-lock-string-face) 261 268 (fontified t) 268 269 (fontified t face font-lock-string-face) 269 276 (fontified t syntax-table #1# face font-lock-string-face) 276 277 (fontified t face font-lock-string-face) 277 278 (fontified t face font-lock-builtin-face) 278 279 (fontified t)) . 1552) (undo-tree-id593 . -232) (undo-tree-id594 . -232) (undo-tree-id595 . -26) (undo-tree-id596 . -26) (undo-tree-id597 . -232) (undo-tree-id598 . -26) (undo-tree-id599 . -26) 1578) nil (23729 2061 47709 302000) 0 nil]) ((nil rear-nonsticky nil 1877 . 1878) (nil fontified nil 212 . 1878) (212 . 1878)) nil (23729 2061 47717 16000) 0 nil]) ((214 . 235) (#("                     " 0 21 (fontified nil)) . 213) (undo-tree-id600 . -21) (undo-tree-id601 . -21) (213 . 235) (#("                     " 0 21 (fontified nil)) . 212) (undo-tree-id602 . -21) (undo-tree-id603 . -21) (212 . 234) (#("                     " 0 21 (fontified nil)) . 211) (undo-tree-id604 . -21) (undo-tree-id605 . -21) (211 . 233) (#("                     " 0 21 (fontified nil)) . 210) (undo-tree-id606 . -21) (undo-tree-id607 . -21) (209 . 232)) nil (23729 2061 47751 196000) 0 nil]) ((#("              " 0 14 (fontified t)) . -212) (undo-tree-id608 . -14) (undo-tree-id609 . -14) 226 (211 . 226) (t 23729 1937 258917 220000) 185) nil (23729 2061 47767 402000) 0 nil] [nil nil ((nil rear-nonsticky nil 1851 . 1852) (nil fontified nil 186 . 1852) (186 . 1852) 185 (t 23729 1937 258917 220000)) ((#("    <meta name=\"viewport\" content=\"width=device-width\">
    <meta property=\"og:title\" content=\" Home |  CodeSections\"> 
    <meta name=\"twitter:card\" content=\"summary\">
    <meta name=\"twitter:title\" content=\" Home |  CodeSections\">
    <meta name=\"twitter:image:src\" content=\"https://www.codesections.com/codesections_logo.png\"> 
    <meta property=\"og:type\" content=\"article\">
    <meta property=\"og:url\" content=\"www.codesections.com\">
    <meta property=\"og:site_name\" content=\"CodeSections\">
    <meta property=\"article:section\" content=\"Article Section\">
    <meta property=\"og:image\" itemprop=\"image primaryImageOfPage\" content=\"https://www.codesections.com/codesections_logo_large.png\"><meta name=\"og:description\" content=\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\">
    <meta name=\"description\" content=\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\">
    <meta name=\"twitter:description\" content=\"The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.\">
    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\">
    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">
    <link rel=\"manifest\" href=\"/manifest.json\">
    <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\">
    <meta name=\"theme-color\" content=\"#d9d9d9\">" 0 15 (fontified nil) 15 25 (fontified nil face font-lock-string-face) 25 34 (fontified nil) 34 54 (fontified nil face font-lock-string-face) 54 55 (fontified nil face font-lock-builtin-face) 55 75 (fontified nil) 75 85 (fontified nil face font-lock-string-face) 85 94 (fontified nil) 94 117 (fontified nil face font-lock-string-face) 117 118 (fontified nil face font-lock-builtin-face) 118 135 (fontified nil) 135 149 (fontified nil face font-lock-string-face) 149 158 (fontified nil) 158 167 (fontified nil face font-lock-string-face) 167 168 (fontified nil face font-lock-builtin-face) 168 184 (fontified nil) 184 199 (fontified nil face font-lock-string-face) 199 208 (fontified nil) 208 231 (fontified nil face font-lock-string-face) 231 232 (fontified nil face font-lock-builtin-face) 232 248 (fontified nil) 248 267 (fontified nil face font-lock-string-face) 267 276 (fontified nil) 276 328 (fontified nil face font-lock-string-face) 328 329 (fontified nil face font-lock-builtin-face) 329 350 (fontified nil) 350 359 (fontified nil face font-lock-string-face) 359 368 (fontified nil) 368 377 (fontified nil face font-lock-string-face) 377 378 (fontified nil face font-lock-builtin-face) 378 398 (fontified nil) 398 406 (fontified nil face font-lock-string-face) 406 415 (fontified nil) 415 437 (fontified nil face font-lock-string-face) 437 438 (fontified nil face font-lock-builtin-face) 438 458 (fontified nil) 458 472 (fontified nil face font-lock-string-face) 472 481 (fontified nil) 481 485 (fontified nil face font-lock-string-face) 485 495 (fontified nil face font-lock-string-face) 495 496 (fontified nil face font-lock-builtin-face) 496 497 (fontified nil) 497 516 (fontified nil) 516 533 (fontified nil face font-lock-string-face) 533 542 (fontified nil) 542 559 (fontified nil face font-lock-string-face) 559 560 (fontified nil face font-lock-builtin-face) 560 580 (fontified nil) 580 590 (fontified nil face font-lock-string-face) 590 600 (fontified nil) 600 626 (fontified nil face font-lock-string-face) 626 635 (fontified nil) 635 693 (fontified nil face font-lock-string-face) 693 705 (fontified nil) 705 721 (fontified nil face font-lock-string-face) 721 730 (fontified nil) 730 904 (fontified nil face font-lock-string-face) 904 905 (fontified nil face font-lock-builtin-face) 905 921 (fontified nil) 921 934 (fontified nil face font-lock-string-face) 934 943 (fontified nil) 943 997 (fontified nil face font-lock-string-face) 997 1117 (fontified nil face font-lock-string-face) 1117 1118 (fontified nil face font-lock-builtin-face) 1118 1119 (fontified nil) 1119 1134 (fontified nil) 1134 1155 (fontified nil face font-lock-string-face) 1155 1164 (fontified nil) 1164 1338 (fontified nil face font-lock-string-face) 1338 1339 (fontified nil face font-lock-builtin-face) 1339 1354 (fontified nil) 1354 1372 (fontified nil face font-lock-string-face) 1372 1379 (fontified nil) 1379 1388 (fontified nil face font-lock-string-face) 1388 1394 (fontified nil) 1394 1417 (fontified nil face font-lock-string-face) 1417 1418 (fontified nil face font-lock-builtin-face) 1418 1433 (fontified nil) 1433 1439 (fontified nil face font-lock-string-face) 1439 1445 (fontified nil) 1445 1456 (fontified nil face font-lock-string-face) 1456 1463 (fontified nil) 1463 1470 (fontified nil face font-lock-string-face) 1470 1476 (fontified nil) 1476 1496 (fontified nil face font-lock-string-face) 1496 1497 (fontified nil face font-lock-builtin-face) 1497 1512 (fontified nil) 1512 1522 (fontified nil face font-lock-string-face) 1522 1528 (fontified nil) 1528 1544 (fontified nil face font-lock-string-face) 1544 1545 (fontified nil face font-lock-builtin-face) 1545 1560 (fontified nil) 1560 1571 (fontified nil face font-lock-string-face) 1571 1577 (fontified nil) 1577 1601 (fontified nil face font-lock-string-face) 1601 1608 (fontified nil) 1608 1609 (fontified nil face font-lock-string-face) 1609 1616 (fontified nil syntax-table #1# face font-lock-string-face) 1616 1617 (fontified nil face font-lock-string-face) 1617 1618 (fontified nil face font-lock-builtin-face) 1618 1619 (fontified nil) 1619 1634 (fontified nil) 1634 1647 (fontified nil face font-lock-string-face) 1647 1656 (fontified nil) 1656 1657 (fontified nil face font-lock-string-face) 1657 1664 (fontified nil syntax-table #1# face font-lock-string-face) 1664 1665 (fontified nil face font-lock-string-face) 1665 1666 (fontified nil rear-nonsticky nil)) . 186) (undo-tree-id573 . -1665) (undo-tree-id574 . 1) (undo-tree-id575 . -1665) (undo-tree-id576 . 1) (undo-tree-id577 . -1665) (undo-tree-id578 . 1) (undo-tree-id579 . -1665) (undo-tree-id580 . -1665) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . -1664) (undo-tree-id584 . -1665) (undo-tree-id585 . 10) (undo-tree-id586 . -1657) (undo-tree-id587 . 9) (undo-tree-id588 . -1664) (undo-tree-id589 . 2) (undo-tree-id590 . -1665) (nil fontified t 1804 . 1805) (nil fontified t 1803 . 1804) (nil fontified t 1802 . 1803) (nil fontified t 1795 . 1802) (nil fontified t 1794 . 1795) (nil fontified t 1787 . 1794) (nil fontified t 1763 . 1787) (nil fontified t 1757 . 1763) (nil fontified t 1746 . 1757) (nil fontified t 1731 . 1746) (nil fontified t 1730 . 1731) (nil fontified t 1714 . 1730) (nil fontified t 1708 . 1714) (nil fontified t 1698 . 1708) (nil fontified t 1683 . 1698) (nil fontified t 1682 . 1683) (nil fontified t 1662 . 1682) (nil fontified t 1656 . 1662) (nil fontified t 1649 . 1656) (nil fontified t 1642 . 1649) (nil fontified t 1631 . 1642) (nil fontified t 1625 . 1631) (nil fontified t 1619 . 1625) (nil fontified t 1604 . 1619) (nil fontified t 1603 . 1604) (nil fontified t 1580 . 1603) (nil fontified t 1574 . 1580) (nil fontified t 1565 . 1574) (nil fontified t 1558 . 1565) (nil fontified t 1540 . 1558) (nil fontified t 1525 . 1540) (nil fontified t 1524 . 1525) (nil fontified t 1350 . 1524) (nil fontified t 1341 . 1350) (nil fontified t 1320 . 1341) (nil fontified t 1305 . 1320) (nil fontified t 1304 . 1305) (nil fontified t 1303 . 1304) (nil fontified t 1183 . 1303) (nil fontified t 1129 . 1183) (nil fontified t 1120 . 1129) (nil fontified t 1107 . 1120) (nil fontified t 1091 . 1107) (nil fontified t 1090 . 1091) (nil fontified t 916 . 1090) (nil fontified t 907 . 916) (nil fontified t 891 . 907) (nil fontified t 879 . 891) (nil fontified t 821 . 879) (nil fontified t 812 . 821) (nil fontified t 786 . 812) (nil fontified t 776 . 786) (nil fontified t 766 . 776) (nil fontified t 746 . 766) (nil fontified t 745 . 746) (nil fontified t 728 . 745) (nil fontified t 719 . 728) (nil fontified t 702 . 719) (nil fontified t 683 . 702) (nil fontified t 682 . 683) (nil fontified t 681 . 682) (nil fontified t 671 . 681) (nil fontified t 667 . 671) (nil fontified t 658 . 667) (nil fontified t 644 . 658) (nil fontified t 624 . 644) (nil fontified t 623 . 624) (nil fontified t 601 . 623) (nil fontified t 592 . 601) (nil fontified t 584 . 592) (nil fontified t 564 . 584) (nil fontified t 563 . 564) (nil fontified t 554 . 563) (nil fontified t 545 . 554) (nil fontified t 536 . 545) (nil fontified t 515 . 536) (nil fontified t 514 . 515) (nil fontified t 462 . 514) (nil fontified t 453 . 462) (nil fontified t 434 . 453) (nil fontified t 418 . 434) (nil fontified t 417 . 418) (nil fontified t 394 . 417) (nil fontified t 385 . 394) (nil fontified t 370 . 385) (nil fontified t 354 . 370) (nil fontified t 353 . 354) (nil fontified t 344 . 353) (nil fontified t 335 . 344) (nil fontified t 321 . 335) (nil fontified t 304 . 321) (nil fontified t 303 . 304) (nil fontified t 280 . 303) (nil fontified t 271 . 280) (nil fontified t 261 . 271) (nil fontified t 241 . 261) (nil fontified t 240 . 241) (nil fontified t 220 . 240) (nil fontified t 211 . 220) (nil fontified t 201 . 211) (nil fontified t 186 . 201) (nil rear-nonsticky t 1851 . 1852)) (23729 1986 861733 79000) 0 nil]) ((275 . 276) (t 23729 1797 903095 386000)) nil (23729 1986 862330 845000) 0 nil]) ((64 . 68) (60 . 64) (59 . 60) (53 . 59) (52 . 54) (#("\"" 0 1 (fontified nil)) . -52) (52 . 53) (#("'" 0 1 (fontified t)) . -52) (undo-tree-id571 . -1) (undo-tree-id572 . -1) 53 (52 . 53) (42 . 52) 29) nil (23729 1797 876671 207000) 0 nil]) ((233 . 248) (#(" " 0 1 (fontified t)) . 233)) nil (23729 1797 876686 597000) 0 nil]) ((233 . 234) (#("   " 0 3 (fontified nil)) . 233) (#("
" 0 1 (fontified t)) . -233) 206) nil (23729 1797 876695 976000) 0 nil]) ((184 . 199) (#(" " 0 1 (fontified t)) . 184)) nil (23729 1797 876703 237000) 0 nil]) ((184 . 185) (#("   " 0 3 (fontified nil)) . 184) (#("
" 0 1 (fontified t)) . -184) 164) nil (23729 1797 876711 143000) 0 nil]) ((#("'" 0 1 (fontified t)) . 164)) nil (23729 1797 876716 239000) 0 nil]) ((143 . 158)) nil (23729 1797 876720 375000) 0 nil]) ((nil rear-nonsticky nil 224 . 225) (nil fontified nil 143 . 225) (143 . 225) 142 (t 23729 1703 20335 290000)) nil (23729 1797 876727 227000) 0 nil] [nil nil ((#("/" 0 1 (fontified t face font-lock-string-face)) . 239)) ((239 . 240)) (23729 1700 778838 339000) 0 nil]) ((#(" " 0 1 (fontified t)) . 243) (undo-tree-id570 . -1)) ((243 . 244)) (23729 1701 914918 221000) 0 nil]) ((#("              " 0 14 (fontified nil)) . 245) (#("
" 0 1 (fontified t)) . 245)) ((245 . 246) (245 . 259)) (23729 1698 246999 801000) 0 nil]) ((209 . 210)) ((#(" " 0 1 (fontified t)) . 209) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . 1) (undo-tree-id3 . 1)) (23729 1698 36502 158000) 0 nil]) ((#("=" 0 1 (fontified t)) . 209)) ((209 . 210)) (23729 1697 845531 212000) 0 nil]) ((241 . 242) (#(")" 0 1 (fontified nil)) . 210) (210 . 211) (#(")" 0 1 (fontified nil)) . 205) (204 . 206) (#("(" 0 1 (fontified nil)) . 204) (204 . 205)) ((#("(" 0 1 (fontified nil)) . 204) (204 . 205) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 204) (205 . 206) (#(")" 0 1 (fontified nil)) . 210) (210 . 211) (#(")" 0 1 (fontified t)) . 241) (undo-tree-id7 . -1) (undo-tree-id9 . -1) (undo-tree-id11 . -1) (undo-tree-id13 . -1)) (23729 1697 625936 443000) 0 nil]) ((182 . 204) (#(" " 0 1 (fontified nil)) . 182)) ((182 . 183) (#("
                     " 0 1 (fontified t) 1 22 (fontified t)) . 182) (undo-tree-id14 . -22) (undo-tree-id15 . -22) (undo-tree-id17 . -22)) (23729 1697 557449 510000) 0 nil]) ((169 . 170) (#("=" 0 1 (fontified t)) . 169)) ((169 . 170) (#(" " 0 1 (fontified t)) . 169)) (23729 1697 555627 787000) 0 nil]) ((181 . 182) (#(")" 0 1 (fontified nil)) . 170) (170 . 171) (#(")" 0 1 (fontified nil)) . 166) (165 . 167) (#("(" 0 1 (fontified nil)) . 165) (165 . 166) (217 . 218) (#(")" 0 1 (fontified nil)) . 186) (186 . 187) (#(")" 0 1 (fontified nil)) . 180) (180 . 181) (#(")" 0 1 (fontified nil)) . 169) (169 . 170) (#(")" 0 1 (fontified nil)) . 165) (164 . 166) (#("(" 0 1 (fontified nil)) . 164) (164 . 165)) ((#("(" 0 1 (fontified nil)) . 164) (164 . 165) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 164) (undo-tree-id19 . 2) (undo-tree-id20 . 2) (undo-tree-id22 . 2) (undo-tree-id24 . 2) (undo-tree-id26 . 2) (undo-tree-id28 . 2) (undo-tree-id30 . 2) (undo-tree-id32 . 2) (undo-tree-id34 . -1) (undo-tree-id36 . -1) (undo-tree-id38 . -1) (165 . 166) (#(")" 0 1 (fontified nil)) . 169) (169 . 170) (#(")" 0 1 (fontified nil)) . 180) (180 . 181) (#(")" 0 1 (fontified nil)) . 186) (186 . 187) (#(")" 0 1 (fontified nil)) . 217) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id45 . -1) (undo-tree-id47 . -1) (undo-tree-id49 . -1) (#("(" 0 1 (fontified nil)) . 165) (165 . 166) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 165) (undo-tree-id51 . -1) (166 . 167) (#(")" 0 1 (fontified nil)) . 170) (170 . 171) (#(")" 0 1 (fontified t)) . 181) (undo-tree-id53 . -1) (undo-tree-id55 . -1) (undo-tree-id57 . -1) (undo-tree-id59 . -1)) (23729 1697 85597 384000) 0 nil]) ((#(" " 0 1 (fontified t)) . 159)) ((159 . 160)) (23729 1696 909196 412000) 0 nil]) ((217 . 219) (158 . 160)) ((#("( " 0 1 (fontified nil) 1 2 (fontified nil)) . 158) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#(" )" 0 1 (fontified t) 1 2 (fontified t)) . 217) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . 1) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id79 . 2)) (23729 1696 738936 695000) 0 nil]) ((#(">" 0 1 (fontified nil rear-nonsticky t face font-lock-builtin-face)) . 215) (#("<" 0 1 (fontified t)) . 158) (undo-tree-id565 . 1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (undo-tree-id569 . 1)) ((158 . 159) (215 . 216)) (23729 1696 553535 263000) 0 nil]) ((nil rear-nonsticky nil 216 . 217) (158 . 217)) ((#("<link rel=\"canonical\" href=\"https://www.codesections.com/\">" 0 1 (fontified nil) 1 5 (fontified nil) 5 6 (fontified nil) 6 9 (fontified nil) 9 10 (fontified nil) 10 21 (fontified nil face font-lock-string-face) 21 22 (fontified nil) 22 26 (fontified nil) 26 27 (fontified nil) 27 56 (fontified nil face font-lock-string-face) 56 57 (fontified nil face font-lock-string-face) 57 58 (fontified nil face font-lock-string-face) 58 59 (fontified nil rear-nonsticky nil face font-lock-builtin-face)) . 158) (undo-tree-id80 . 32) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -58) (undo-tree-id84 . -26) (undo-tree-id85 . 32) (undo-tree-id86 . 32) (undo-tree-id87 . 32) (undo-tree-id88 . 32) (undo-tree-id89 . -26) (undo-tree-id90 . -58) (undo-tree-id91 . -58) (undo-tree-id92 . -58) (undo-tree-id93 . -58) (undo-tree-id94 . 58) (undo-tree-id95 . 58) (undo-tree-id96 . -58) (undo-tree-id97 . 58) (undo-tree-id98 . 58) (undo-tree-id99 . 58) (undo-tree-id100 . 58) (undo-tree-id101 . 58) (undo-tree-id102 . 58) (undo-tree-id103 . 58) (undo-tree-id104 . 58) (undo-tree-id105 . 53) (undo-tree-id106 . 53) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id110 . 53) (undo-tree-id112 . 53) (undo-tree-id114 . 53) (undo-tree-id116 . 53) (undo-tree-id118 . -6) (undo-tree-id120 . 53) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id124 . 53) (undo-tree-id126 . -11) (undo-tree-id128 . 53) (undo-tree-id130 . -58) (undo-tree-id132 . -58) (undo-tree-id134 . -58) (undo-tree-id136 . -58) (undo-tree-id138 . -57) (undo-tree-id140 . -57) (undo-tree-id142 . -58) (undo-tree-id144 . -58) (undo-tree-id146 . -58) (undo-tree-id148 . -21) (undo-tree-id150 . -21) (undo-tree-id152 . -6) (undo-tree-id154 . -6) (undo-tree-id156 . 32) (undo-tree-id158 . 32) (undo-tree-id160 . 33) (undo-tree-id162 . 33) (undo-tree-id164 . 38) (undo-tree-id166 . -21) (undo-tree-id168 . -21) (undo-tree-id170 . -21) (undo-tree-id172 . -21) (undo-tree-id174 . -21) (undo-tree-id176 . -21) (undo-tree-id178 . -21) (undo-tree-id180 . -21) (undo-tree-id182 . -6) (undo-tree-id184 . 38) (undo-tree-id186 . 50) (undo-tree-id188 . 53) (undo-tree-id190 . 58) (undo-tree-id192 . 59) (nil rear-nonsticky t 216 . 217)) (23729 1696 363219 960000) 0 nil]) ((#("p" 0 1 (fontified nil)) . 158) (144 . 159) (144 . 145)) ((#("
" 0 1 (fontified nil)) . 144) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id219 . 1) (undo-tree-id221 . 1) (undo-tree-id223 . 1) (undo-tree-id225 . 1) (undo-tree-id227 . 1) (undo-tree-id229 . 1) (undo-tree-id231 . 1) (undo-tree-id233 . 1) (undo-tree-id235 . 1) (undo-tree-id237 . 1) (undo-tree-id239 . 1) (undo-tree-id241 . 1) (undo-tree-id243 . 1) (undo-tree-id245 . 1) (undo-tree-id247 . 1) (undo-tree-id249 . 1) (undo-tree-id251 . 1) (undo-tree-id253 . 1) (undo-tree-id255 . 1) (#("              " 0 14 (fontified nil)) . 144) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -14) (undo-tree-id262 . -14) (undo-tree-id263 . -14) (undo-tree-id264 . -14) (undo-tree-id265 . -14) (undo-tree-id266 . -14) (undo-tree-id267 . -14) (undo-tree-id268 . -14) (undo-tree-id269 . -14) (undo-tree-id270 . -14) (undo-tree-id271 . -14) (undo-tree-id272 . -14) (undo-tree-id273 . -14) (undo-tree-id274 . -14) (undo-tree-id275 . -14) (undo-tree-id277 . -14) (undo-tree-id278 . -13) (undo-tree-id279 . -13) (undo-tree-id281 . -14) (undo-tree-id283 . -14) (undo-tree-id285 . -14) (undo-tree-id287 . -14) (undo-tree-id289 . -14) (undo-tree-id291 . -14) (undo-tree-id293 . -14) (undo-tree-id295 . -14) (undo-tree-id297 . -14) (undo-tree-id299 . -14) (undo-tree-id301 . -14) (undo-tree-id303 . -14) (undo-tree-id305 . -14) (undo-tree-id307 . -14) (undo-tree-id309 . -14) (undo-tree-id311 . -14) (undo-tree-id313 . -14) (undo-tree-id315 . -14) (undo-tree-id317 . -14) (undo-tree-id319 . -14) (undo-tree-id321 . -14) (undo-tree-id323 . -14) (undo-tree-id325 . -14) (#("p" 0 1 (fontified nil)) . 158) (158 . 159)) (23729 1696 162971 350000) 0 nil]) ((#("empty (indent elements)
" 0 5 (fontified nil face font-lock-builtin-face) 5 22 (fontified nil) 22 23 (fontified nil rear-nonsticky t) 23 24 (fontified nil)) . 144) (undo-tree-id552 . -22) (undo-tree-id553 . 1) (undo-tree-id554 . -24) (undo-tree-id555 . 1) (undo-tree-id556 . -24) (undo-tree-id557 . 1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 24) (undo-tree-id561 . 24) (undo-tree-id562 . 24) (undo-tree-id563 . -24) (undo-tree-id564 . 24)) ((144 . 168)) (23729 1696 139375 328000) 0 nil]) ((nil rear-nonsticky nil 166 . 167) (144 . 167)) ((#("empty (indent elements)" 0 5 (fontified nil face font-lock-builtin-face) 5 22 (fontified nil) 22 23 (fontified nil rear-nonsticky nil)) . 144) (undo-tree-id327 . -22) (undo-tree-id328 . -22) (undo-tree-id329 . -22) (undo-tree-id331 . 1) (nil rear-nonsticky t 166 . 167)) (23729 1696 137822 539000) 0 nil]) ((145 . 159) (#("              " 0 14 (fontified nil)) . 144) (undo-tree-id538 . -14) (undo-tree-id539 . -14) (144 . 159) (#(" " 0 1 (fontified nil)) . 143) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (144 . 145)) ((#("
" 0 1 (fontified nil)) . 144) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id359 . -1) (undo-tree-id361 . -1) (undo-tree-id363 . -1) (undo-tree-id365 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id371 . -1) (undo-tree-id373 . -1) (undo-tree-id375 . -1) (undo-tree-id377 . -1) (undo-tree-id379 . -1) (undo-tree-id381 . -1) (undo-tree-id383 . -1) (undo-tree-id385 . -1) (undo-tree-id387 . -1) (undo-tree-id389 . -1) (undo-tree-id391 . -1) (undo-tree-id393 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (undo-tree-id399 . -1) (undo-tree-id401 . -1) (undo-tree-id403 . -1) (143 . 144) (#("              
" 0 14 (fontified nil) 14 15 (fontified nil)) . 144) (undo-tree-id404 . -14) (undo-tree-id405 . -14) (undo-tree-id407 . 1) (undo-tree-id409 . 1) (144 . 158) (#("              " 0 14 (fontified t)) . 145) (undo-tree-id410 . 14) (undo-tree-id411 . 14) (undo-tree-id412 . 14) (undo-tree-id413 . 14) (undo-tree-id414 . 14) (undo-tree-id415 . 14) (undo-tree-id416 . 14) (undo-tree-id417 . 14) (undo-tree-id418 . 14) (undo-tree-id419 . 14) (undo-tree-id420 . 14) (undo-tree-id421 . 14) (undo-tree-id422 . 14) (undo-tree-id423 . 14) (undo-tree-id424 . 14) (undo-tree-id425 . 14) (undo-tree-id426 . 14) (undo-tree-id427 . 14) (undo-tree-id428 . 14) (undo-tree-id429 . 14) (undo-tree-id430 . 14) (undo-tree-id431 . 14) (undo-tree-id432 . 14) (undo-tree-id433 . 14) (undo-tree-id434 . 14) (undo-tree-id436 . 14) (undo-tree-id438 . 14) (undo-tree-id440 . 14) (undo-tree-id442 . 14) (undo-tree-id444 . 14) (undo-tree-id446 . 14) (undo-tree-id448 . 14) (undo-tree-id450 . 14) (undo-tree-id452 . 14) (undo-tree-id454 . 14) (undo-tree-id456 . 14) (undo-tree-id458 . 14) (undo-tree-id460 . 14) (undo-tree-id462 . 14) (undo-tree-id464 . 14) (undo-tree-id466 . 14) (undo-tree-id468 . 14) (undo-tree-id470 . 14) (undo-tree-id472 . 14) (undo-tree-id474 . 14)) (23729 1695 663942 236000) 0 nil]) ((#("empty (indent elements)" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t) 6 14 (fontified t) 14 22 (fontified t) 22 23 (fontified t)) . 144) (undo-tree-id510 . -6) (undo-tree-id511 . 9) (undo-tree-id512 . 9) (undo-tree-id513 . 9) (undo-tree-id514 . 9) (undo-tree-id515 . -7) (undo-tree-id516 . 9) (undo-tree-id517 . 9) (undo-tree-id518 . 9) (undo-tree-id519 . 9) (undo-tree-id520 . 9) (undo-tree-id521 . 9) (undo-tree-id522 . 9) (undo-tree-id523 . 9) (undo-tree-id524 . 1) (undo-tree-id525 . 1) (undo-tree-id526 . -7) (undo-tree-id527 . 15) (undo-tree-id528 . 16) (undo-tree-id529 . 15) (undo-tree-id530 . 15) (undo-tree-id531 . -8) (undo-tree-id532 . 1) (undo-tree-id533 . 1) (undo-tree-id534 . -22) (undo-tree-id535 . -22) (undo-tree-id536 . -22) (undo-tree-id537 . -22)) ((144 . 167)) (23729 1695 491758 978000) 0 nil]) ((#("'" 0 1 (fontified t face racket-selfeval-face)) . 139) (undo-tree-id499 . 1) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . 1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1)) ((139 . 140) (t 23729 1593 27664 10000)) (23729 1695 348260 489000) 0 nil]) ((#("txexpr " 0 7 (fontified t)) . 139) (undo-tree-id493 . 7) (undo-tree-id494 . 6) (undo-tree-id495 . 7) (undo-tree-id496 . 7) (undo-tree-id497 . 7) (undo-tree-id498 . 1)) ((139 . 146)) (23729 1695 175592 382000) 0 nil]) ((137 . 138) (t 23729 1602 190942 302000)) ((#("`" 0 1 (fontified t)) . 137)) (23729 1694 970144 109000) 0 nil]) ((#("
" 0 1 (fontified t)) . 68) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . 1) (undo-tree-id492 . 1)) ((68 . 69)) (23729 1601 65691 556000) 0 nil]) ((#(" " 0 1 (fontified t)) . 174) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . 1) (undo-tree-id485 . 1) (undo-tree-id486 . -1)) ((174 . 175)) (23729 1600 718358 786000) 0 nil]) ((#("#:hanging #t" 0 9 (fontified t face racket-keyword-argument-face) 9 10 (fontified t) 10 12 (fontified t face racket-selfeval-face)) . 175) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . -11) (undo-tree-id478 . -11) (undo-tree-id479 . 12)) ((175 . 187)) (23729 1599 747891 446000) 0 nil]) ((176 . 187) (174 . 176) (t 23727 56211 367185 431000)) nil (23729 1597 790862 481000) 0 nil]) ((53 . 65) (#("../u" 0 4 (fontified t face font-lock-string-face)) . -53) (undo-tree-id545 . -4) (undo-tree-id546 . -4) 57 (53 . 57) (52 . 54) (#("\"" 0 1 (fontified nil)) . -52) (52 . 53) (#(":" 0 1 (fontified t face font-lock-builtin-face)) . -52) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 53 (52 . 53) (42 . 52)) nil (23727 56211 243767 585000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 44) (undo-tree-id549 . -1) (undo-tree-id550 . -1) 45 (#("r" 0 1 (fontified t)) . -45) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (#("e" 0 1 (fontified t)) . -46) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (#("q" 0 1 (fontified t)) . -47) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#("u" 0 1 (fontified t)) . -48) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (#("i" 0 1 (fontified t)) . -49) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("r" 0 1 (fontified t)) . -50) (undo-tree-id561 . -1) (undo-tree-id562 . -1) 51 (45 . 51) (44 . 46) (#("(" 0 1 (fontified nil)) . -44) (44 . 45) (43 . 44) 14) nil (23727 56211 243929 598000) 0 nil]) ((#("
(define (indent list [output '()])
  (cond [(null? list) output]
        [else (cons (car list) (cons \"\\n    \" (indent (cdr list))))]))
" 0 1 (fontified t) 1 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t) 10 16 (fontified t face font-lock-function-name-face) 16 17 (fontified t) 17 21 (fontified t face font-lock-builtin-face) 21 22 (fontified t) 22 31 (fontified t) 31 33 (fontified t) 33 34 (fontified t) 34 36 (fontified t) 36 38 (fontified t) 38 39 (fontified t) 39 43 (fontified t face font-lock-keyword-face) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t) 46 51 (fontified t face font-lock-builtin-face) 51 52 (fontified t) 52 56 (fontified t face font-lock-builtin-face) 56 58 (fontified t) 58 64 (fontified t) 64 65 (fontified t) 65 66 (fontified t) 66 74 (fontified t) 74 75 (fontified t) 75 79 (fontified t face font-lock-keyword-face) 79 80 (fontified t) 80 81 (fontified t) 81 85 (fontified t face font-lock-builtin-face) 85 86 (fontified t) 86 87 (fontified t) 87 90 (fontified t face font-lock-builtin-face) 90 91 (fontified t) 91 95 (fontified t face font-lock-builtin-face) 95 97 (fontified t) 97 98 (fontified t) 98 102 (fontified t face font-lock-builtin-face) 102 103 (fontified t) 103 104 (fontified t face font-lock-string-face) 104 110 (fontified t face font-lock-string-face) 110 111 (fontified t face font-lock-string-face) 111 112 (fontified t) 112 120 (fontified t) 120 121 (fontified t) 121 124 (fontified t face font-lock-builtin-face) 124 125 (fontified t) 125 129 (fontified t face font-lock-builtin-face) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t)) . 44) (undo-tree-id563 . 27) (undo-tree-id564 . -135) (undo-tree-id565 . -1) (undo-tree-id566 . 136) (undo-tree-id567 . 136) (undo-tree-id568 . 136) (undo-tree-id569 . 136) (undo-tree-id570 . -66) (undo-tree-id571 . -1) (undo-tree-id572 . 5) (undo-tree-id573 . 5) (undo-tree-id574 . 5) (undo-tree-id575 . 5) (undo-tree-id576 . -81) (undo-tree-id577 . -81) (undo-tree-id578 . 5) (undo-tree-id579 . 5) (undo-tree-id580 . 5) (undo-tree-id581 . 5) (undo-tree-id582 . -81) (undo-tree-id583 . 5) (undo-tree-id584 . 5) (undo-tree-id585 . -81) (undo-tree-id586 . -81) (undo-tree-id587 . -128) (undo-tree-id588 . 17) (undo-tree-id589 . 17) (undo-tree-id590 . -121) (undo-tree-id591 . 17) (undo-tree-id592 . 17) (undo-tree-id593 . 71) (undo-tree-id594 . 71) (undo-tree-id595 . -120) (undo-tree-id596 . -66) (undo-tree-id597 . 71) (undo-tree-id598 . 71) (undo-tree-id599 . -66) (undo-tree-id600 . 28) (undo-tree-id601 . 28) (undo-tree-id602 . -66) (undo-tree-id603 . 71) (undo-tree-id604 . 71) (undo-tree-id605 . -109) (undo-tree-id606 . 71) (undo-tree-id607 . 71) (undo-tree-id608 . -66) (undo-tree-id609 . -135) (undo-tree-id610 . -135)) nil (23727 56211 244086 500000) 0 nil]) ((#("  " 0 2 (fontified nil)) . 179) (#("
" 0 1 (fontified t)) . -179) 130 (t 23727 45314 574240 516000)) nil (23727 56211 244103 646000) 0 nil]) ((#("       
" 0 7 (fontified t) 7 8 (fontified t)) . 110) (undo-tree-id498 . 1) (undo-tree-id499 . 1) (undo-tree-id500 . -7) (undo-tree-id501 . -7) (undo-tree-id502 . -7) (undo-tree-id503 . -7) (undo-tree-id504 . -7) (undo-tree-id505 . 1) (undo-tree-id506 . 1) (undo-tree-id507 . -7) (undo-tree-id508 . -7) (undo-tree-id509 . 1) (undo-tree-id510 . 2) (undo-tree-id511 . -7) (undo-tree-id512 . 1) (undo-tree-id513 . 2) (undo-tree-id514 . 1) (undo-tree-id515 . 2) (undo-tree-id516 . -7) (undo-tree-id517 . 2) (undo-tree-id518 . 1) (undo-tree-id519 . -6) (undo-tree-id520 . 2) (undo-tree-id521 . 1) (undo-tree-id522 . -6) (undo-tree-id523 . 2) (undo-tree-id524 . 1) (undo-tree-id525 . -6) (undo-tree-id526 . -6) (undo-tree-id527 . 2) (undo-tree-id528 . 1) (undo-tree-id529 . 2) (undo-tree-id530 . 1) 116) nil (23727 45314 555984 805000) 0 nil]) ((#(" [(equal? '(\"\\n\") (car list)) (cons (car list) (indent (cdr list)))]" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 9 (fontified t face font-lock-builtin-face) 9 11 (fontified t) 11 12 (fontified t) 12 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 18 (fontified t) 18 19 (fontified t) 19 22 (fontified t face font-lock-builtin-face) 22 23 (fontified t) 23 27 (fontified t face font-lock-builtin-face) 27 28 (fontified t) 28 30 (fontified t) 30 31 (fontified t) 31 35 (fontified t face font-lock-builtin-face) 35 36 (fontified t) 36 37 (fontified t) 37 40 (fontified t face font-lock-builtin-face) 40 41 (fontified t) 41 45 (fontified t face font-lock-builtin-face) 45 47 (fontified t) 47 55 (fontified t) 55 56 (fontified t) 56 59 (fontified t face font-lock-builtin-face) 59 60 (fontified t) 60 64 (fontified t face font-lock-builtin-face) 64 65 (fontified t) 65 66 (fontified t) 66 67 (fontified t) 67 68 (fontified t)) . 117) (undo-tree-id531 . 53) (undo-tree-id532 . 53) (undo-tree-id533 . -15) (undo-tree-id534 . -15) (undo-tree-id535 . -15) (undo-tree-id536 . -15) (undo-tree-id537 . -15) (undo-tree-id538 . 53) (undo-tree-id539 . 53) (undo-tree-id540 . -15) (undo-tree-id541 . -15) (undo-tree-id542 . 68) (undo-tree-id543 . 68) (undo-tree-id544 . 68) (t 23727 45157 731385 267000)) nil (23727 45314 556044 103000) 0 nil]) ((226 . 230)) nil (23727 45157 619305 503000) 0 nil] [nil ([nil nil ((132 . 136) (#("    " 0 4 (fontified t face font-lock-string-face)) . 132) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id457 . 1) (undo-tree-id459 . 1) (undo-tree-id461 . 4) (undo-tree-id463 . 4) (t 23727 44949 35034 947000)) ((132 . 136) (#("\\t\\t" 0 4 (fontified t face font-lock-string-face)) . 132) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . 1) (undo-tree-id470 . 1) (undo-tree-id471 . -3) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . 1) (undo-tree-id475 . 1) (undo-tree-id476 . 1) (undo-tree-id477 . 1) (undo-tree-id478 . -3) (undo-tree-id479 . 1) (undo-tree-id480 . 1) (undo-tree-id481 . -3) (undo-tree-id482 . 1) (undo-tree-id483 . 1) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . 1) (undo-tree-id487 . 1) (undo-tree-id488 . 1) (undo-tree-id489 . 1) (t 23727 45089 261319 411000)) (23727 45089 144750 583000) 0 nil]) ((132 . 136) (t 23727 44878 902109 609000)) ((#("    " 0 4 (fontified t face font-lock-string-face)) . 132) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . 1) (undo-tree-id493 . 1) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . 4) (undo-tree-id497 . 4)) (23727 45139 983487 230000) 0 nil]) ((245 . 246) (#(")" 0 1 (fontified t)) . -240) (240 . 241) (#(")" 0 1 (fontified t)) . -237)) nil (23727 45141 919928 701000) 0 nil]) ((236 . 238) (#("(" 0 1 (fontified nil)) . -236) (229 . 237)) nil (23727 44878 883529 134000) 0 nil]) ((#("l" 0 1 (fontified t)) . -227) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . 1) 228 (227 . 228) (t 23727 44755 15822 234000)) nil (23727 44878 883555 307000) 0 nil]) (nil . #2=(undo-tree-canary)) nil (23727 44878 883560 697000) 0 nil]) ((238 . 239) (#(")" 0 1 (fontified t)) . -227) (undo-tree-id436 . -1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1)) nil (23727 44754 991184 118000) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 227) (undo-tree-id440 . -1) (undo-tree-id441 . 1) (undo-tree-id442 . -1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (224 . 227) (223 . 225) (#("\"" 0 1 (fontified nil)) . -223) (218 . 224) (217 . 219) (#("(" 0 1 (fontified nil)) . -217) (217 . 218)) nil (23727 44754 991215 831000) 0 nil]) ((#(")" 0 1 (fontified nil)) . -217) (217 . 218) (#(" " 0 1 (fontified nil)) . -217) (217 . 218) (#(")" 0 1 (fontified nil)) . -217) (217 . 218) (#("C" 0 1 (fontified t)) . -217) (undo-tree-id445 . -1) (undo-tree-id446 . -1) 218 (216 . 218) (t 23727 44672 27582 902000)) nil (23727 44754 991237 398000) 0 nil]) ((218 . 226) (217 . 219) (#("(" 0 1 (fontified nil)) . -217) (217 . 218) (#("c" 0 1 (fontified t)) . -217) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (#("d" 0 1 (fontified t)) . -218) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -219) (undo-tree-id381 . -1) (undo-tree-id382 . -1) 220 (218 . 220) (217 . 218) (#("'(\"\\nll\")" 0 1 (fontified t) 1 2 (fontified t) 2 8 (fontified t face font-lock-string-face) 8 9 (fontified t)) . 217) (undo-tree-id383 . 2) (undo-tree-id384 . 5) (undo-tree-id385 . -7)) nil (23727 44672 12053 228000) 0 nil]) ((222 . 224) (#(")" 0 1 (fontified nil)) . 224) (223 . 224) (#(" " 0 1 (fontified nil)) . -223) (223 . 224) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -223) (223 . 224) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 223) (220 . 223) (219 . 221) (#("\"" 0 1 (fontified nil)) . -219) (219 . 220) (#("\\" 0 1 (fontified t)) . -219) (undo-tree-id386 . -1) (undo-tree-id387 . -1) 220 (219 . 220) (218 . 220) (#("(" 0 1 (fontified nil)) . -218) (217 . 219) (216 . 217) (#(")" 0 1 (fontified nil)) . 216) (215 . 216) (210 . 215) (207 . 210) (206 . 208) (#("(" 0 1 (fontified nil)) . -206) (201 . 207)) nil (23727 44672 12101 597000) 0 nil]) ((#("indent (cons \"\\n\" ())" 0 7 (fontified t) 7 8 (fontified t) 8 12 (fontified t face font-lock-builtin-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t)) . 201) (undo-tree-id388 . 2) (undo-tree-id389 . 2) (undo-tree-id390 . 2) (undo-tree-id391 . 2) (undo-tree-id392 . 2) (undo-tree-id393 . -19) (undo-tree-id394 . 2) (undo-tree-id395 . 2) (undo-tree-id396 . 2) (undo-tree-id397 . 2) (undo-tree-id398 . 2) (undo-tree-id399 . 2) (undo-tree-id400 . 2) (undo-tree-id401 . 2) (undo-tree-id402 . -19) (undo-tree-id403 . 2) (undo-tree-id404 . 2) (undo-tree-id405 . -19) (undo-tree-id406 . 2) (undo-tree-id407 . 2) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . 2) (undo-tree-id411 . 2) 204) nil (23727 44672 12190 40000) 0 nil]) ((#("cdr list" 0 3 (fontified t face font-lock-builtin-face) 3 4 (fontified t) 4 8 (fontified t face font-lock-builtin-face)) . 220) (undo-tree-id412 . 4) (undo-tree-id413 . 4) (undo-tree-id414 . 4) (undo-tree-id415 . 4) (undo-tree-id416 . 4) (undo-tree-id417 . -4) (undo-tree-id418 . 4) (undo-tree-id419 . 4) (undo-tree-id420 . 4) (undo-tree-id421 . 4) (undo-tree-id422 . 4) (undo-tree-id423 . 4) (undo-tree-id424 . 4) (undo-tree-id425 . 4) (undo-tree-id426 . -4) (undo-tree-id427 . 4) (undo-tree-id428 . 4) (undo-tree-id429 . -4) (undo-tree-id430 . 4) (undo-tree-id431 . 4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . 4) (undo-tree-id435 . 4) 224 (t 23727 44426 118392 465000)) nil (23727 44672 12267 635000) 0 nil] [nil nil ((217 . 219) (#("\" " 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t)) . -217) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) 219 (#("(" 0 1 (fontified t)) . -219) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 220 (#("p" 0 1 (fontified t)) . -220) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . 1) 221 (220 . 221) (#("cdr " 0 3 (fontified t face font-lock-builtin-face) 3 4 (fontified t)) . -220) (undo-tree-id365 . -4) (undo-tree-id366 . -4) (undo-tree-id367 . -4) 224 (t 23727 44426 118392 465000)) ((220 . 224) (#("p" 0 1 (fontified nil)) . 220) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . 1) (217 . 221) (#("uu" 0 2 (fontified t face font-lock-string-face)) . 217) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . 2) (undo-tree-id374 . 1) (undo-tree-id375 . 1) (undo-tree-id376 . 1)) (23727 44438 652602 157000) 0 nil]) (nil . #2#) nil (23727 44438 653733 594000) 0 nil]) ((220 . 224)) nil (23727 44426 104157 318000) 0 nil]) ((221 . 224) (220 . 221) (#("c" 0 1 (fontified t)) . -220) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#("r" 0 1 (fontified t)) . -221) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (#("d" 0 1 (fontified t)) . -222) (undo-tree-id342 . -1) (undo-tree-id343 . -1) 223 (220 . 223) (219 . 221) (#("(" 0 1 (fontified nil)) . -219) (218 . 220) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 218) (215 . 218) (214 . 216) (#("\"" 0 1 (fontified nil)) . -214) (212 . 215) (209 . 212) (208 . 210) (#("(" 0 1 (fontified nil)) . -208) (204 . 209) (#("e" 0 1 (fontified t)) . -204) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("t" 0 1 (fontified t)) . -205) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (#(" " 0 1 (fontified t)) . -206) (undo-tree-id348 . -1) (undo-tree-id349 . -1) 207 (201 . 207)) nil (23727 44426 104230 831000) 0 nil]) ((#("cons \"\\n\" (indent cdr list)" 0 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 9 (fontified t face font-lock-string-face) 9 10 (fontified t) 10 18 (fontified t) 18 21 (fontified t face font-lock-builtin-face) 21 22 (fontified t) 22 26 (fontified t face font-lock-builtin-face) 26 27 (fontified t)) . 201) (undo-tree-id350 . 1) (undo-tree-id351 . 5) (undo-tree-id352 . 5) (undo-tree-id353 . 5) (undo-tree-id354 . 5) (undo-tree-id355 . -18)) nil (23727 44426 104265 898000) 0 nil] [nil nil ((#("cdr " 0 3 (fontified t face font-lock-builtin-face) 3 4 (fontified t)) . 219) (undo-tree-id333 . 3)) ((219 . 223) (t 23727 44347 318308 235000)) (23727 44347 303105 30000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 227) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (#("(" 0 1 (fontified t)) . 219) 221 (t 23727 44306 525284 962000)) nil (23727 44372 145031 282000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 229) (228 . 229) (#(" " 0 1 (fontified nil)) . -228) (228 . 229) (#(")" 0 1 (fontified nil face font-lock-builtin-face)) . -228) (228 . 229) (222 . 228) (#("t" 0 1 (fontified t)) . -222) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (#(" " 0 1 (fontified t)) . -223) (undo-tree-id281 . -1) (undo-tree-id282 . -1) 224 (220 . 224) (219 . 221) (#("(" 0 1 (fontified nil)) . -219) (215 . 220) (#("e" 0 1 (fontified t)) . -215) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (#("t" 0 1 (fontified t)) . -216) (undo-tree-id285 . -1) (undo-tree-id286 . -1) 217 (216 . 217) (212 . 216) (211 . 213) (#("(" 0 1 (fontified nil)) . -211) (210 . 212) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 210) (207 . 210) (206 . 208) (#("\"" 0 1 (fontified nil)) . -206) (206 . 207) (201 . 206)) nil (23727 44306 511376 165000) 0 nil]) ((173 . 181) (#("d" 0 1 (fontified t)) . -173) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 174 (173 . 174) (172 . 174) (#("(" 0 1 (fontified nil)) . -172) (165 . 173) (164 . 166) (#("(" 0 1 (fontified nil)) . -164) (163 . 165) (#(")" 0 1 (fontified nil)) . 163) (162 . 163) (154 . 162) (153 . 155) (#("(" 0 1 (fontified nil)) . -153) (153 . 154) (#("c" 0 1 (fontified t)) . -153) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (#("a" 0 1 (fontified t)) . -154) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -155) (undo-tree-id293 . -1) (undo-tree-id294 . -1) 156 (148 . 156) (147 . 149) (#("(" 0 1 (fontified nil)) . -147) (146 . 148)) nil (23727 44306 511471 295000) 0 nil]) ((#(" " 0 1 (fontified t)) . 145) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1)) nil (23727 44306 511496 322000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 145) (144 . 145) (136 . 144) (135 . 137) (#("(" 0 1 (fontified nil)) . -135) (134 . 136) (#(")" 0 1 (fontified nil)) . 134) (133 . 134) (#(" " 0 1 (fontified nil)) . -133) (133 . 134) (#(")" 0 1 (fontified nil face font-lock-string-face)) . -133) (133 . 134) (#(":" 0 1 (fontified t face font-lock-builtin-face)) . -133) (undo-tree-id300 . -1) (undo-tree-id301 . -1) 134 (133 . 134) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 133) (130 . 133) (129 . 131) (#("\"" 0 1 (fontified nil)) . -129) (129 . 130) (128 . 130) (#("(" 0 1 (fontified nil)) . -128) (125 . 129) (122 . 125)) nil (23727 44306 511523 378000) 0 nil]) ((#("?" 0 1 (fontified t face font-lock-builtin-face)) . 122) (undo-tree-id302 . -1)) nil (23727 44306 511535 653000) 0 nil]) ((120 . 124) (119 . 121) (#("(" 0 1 (fontified nil)) . -119) (119 . 120) (118 . 120) (#("[" 0 1 (fontified nil)) . -118) (118 . 119) (109 . 118) 94) nil (23727 44306 511545 472000) 0 nil]) ((#("indent
               (cdr list)
               (cons (car list) output)" 0 6 (fontified t) 6 7 (fontified t) 7 22 (fontified t) 22 23 (fontified t) 23 26 (fontified t face font-lock-builtin-face) 26 27 (fontified t) 27 31 (fontified t face font-lock-builtin-face) 31 33 (fontified t) 33 48 (fontified t) 48 49 (fontified t) 49 53 (fontified t face font-lock-builtin-face) 53 54 (fontified t) 54 55 (fontified t) 55 58 (fontified t face font-lock-builtin-face) 58 59 (fontified t) 59 63 (fontified t face font-lock-builtin-face) 63 64 (fontified t) 64 65 (fontified t) 65 71 (fontified t) 71 72 (fontified t)) . 125) (undo-tree-id303 . 18) (undo-tree-id304 . -7) (undo-tree-id305 . -7) (undo-tree-id306 . -49) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . -49) (undo-tree-id312 . -49) (undo-tree-id313 . -49) (undo-tree-id314 . -49) (undo-tree-id315 . -49) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . -49) (undo-tree-id319 . -49) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . -49) (undo-tree-id323 . -49) (undo-tree-id324 . -49) (undo-tree-id325 . 65) (undo-tree-id326 . 65) (undo-tree-id327 . -49) (undo-tree-id328 . -7) (undo-tree-id329 . -7) (undo-tree-id330 . 1) (undo-tree-id331 . 1)) nil (23727 44306 511616 357000) 0 nil] [nil ([nil ([nil nil ((#("output" 0 6 (fontified t)) . 196) (undo-tree-id276 . 6)) ((196 . 202) (t 23727 43857 307851 258000)) (23727 43857 296983 237000) 0 nil]) ((#(" " 0 1 (fontified t)) . 196)) ((196 . 197)) (23727 44029 318843 908000) 0 nil]) ((179 . 186) (t 23727 43811 455860 633000)) ((#("output " 0 7 (fontified t)) . 179) (undo-tree-id277 . -7) (undo-tree-id278 . -7)) (23727 44029 653823 277000) 0 nil]) ((#("               (display list)
" 0 15 (fontified t) 15 16 (fontified t) 16 23 (fontified t face font-lock-builtin-face) 23 24 (fontified t) 24 28 (fontified t face font-lock-builtin-face) 28 29 (fontified t) 29 30 (fontified t)) . 132) (undo-tree-id259 . -27) (undo-tree-id260 . -27) (undo-tree-id261 . 3) (undo-tree-id262 . 3) (undo-tree-id263 . -27) (undo-tree-id264 . -27) (undo-tree-id265 . 3) (undo-tree-id266 . 3) (undo-tree-id267 . 3) (undo-tree-id268 . 3) (undo-tree-id269 . -27) (undo-tree-id270 . -28) (undo-tree-id271 . -28) (undo-tree-id272 . 2) (undo-tree-id273 . -15) (undo-tree-id274 . -16) 160 (t 23727 43806 153490 786000)) nil (23727 44029 988814 567000) 0 nil]) ((219 . 226) (#(")" 0 1 (fontified nil)) . 219) (218 . 219) (210 . 218) (209 . 211) (#("(" 0 1 (fontified nil)) . -209) (204 . 210) (#("cons (cons '(\"\\n  \") (car list)) output" 0 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 6 (fontified t) 6 10 (fontified t face font-lock-builtin-face) 10 12 (fontified t) 12 13 (fontified t) 13 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 25 (fontified t face font-lock-builtin-face) 25 26 (fontified t) 26 30 (fontified t face font-lock-builtin-face) 30 31 (fontified t) 31 39 (fontified t)) . 204) (undo-tree-id237 . -38) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1) (undo-tree-id242 . -38) (undo-tree-id243 . -38) (undo-tree-id244 . -38) (undo-tree-id245 . -38) (undo-tree-id246 . -38) (undo-tree-id247 . 30) (undo-tree-id248 . 30) (undo-tree-id249 . -9) (undo-tree-id250 . -9) (undo-tree-id251 . 27) (undo-tree-id252 . 27) (undo-tree-id253 . -9) (undo-tree-id254 . -12) (undo-tree-id255 . -12) (undo-tree-id256 . -12) (undo-tree-id257 . -3) (undo-tree-id258 . -3) 207 (t 23727 43678 34139 407000)) nil (23727 43806 140326 400000) 0 nil]) ((148 . 160) (147 . 149) (#("(" 0 1 (fontified nil)) . -147) (147 . 148) (131 . 147) 130) nil (23727 43678 18787 605000) 0 nil]) ((#(" " 0 1 (fontified t)) . 102) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . -1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1)) nil (23727 43678 18852 996000) 0 nil]) ((#(" " 0 1 (fontified t)) . 102) (undo-tree-id211 . 1) (undo-tree-id212 . 1)) nil (23727 43678 18867 269000) 0 nil]) ((102 . 103) (#("]" 0 1 (fontified t)) . 102) (undo-tree-id213 . 1) (undo-tree-id214 . 1) (undo-tree-id215 . 1) (undo-tree-id216 . 1) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 1) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . -1)) nil (23727 43678 18898 924000) 0 nil]) ((#("(display list)" 0 1 (fontified t) 1 8 (fontified t face font-lock-builtin-face) 8 9 (fontified t) 9 13 (fontified t face font-lock-builtin-face) 13 14 (fontified t)) . 102) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . -13) (undo-tree-id229 . 14) (undo-tree-id230 . 13) (undo-tree-id231 . 14) (undo-tree-id232 . -1) (undo-tree-id233 . 13) (undo-tree-id234 . -13) (undo-tree-id235 . 1) (undo-tree-id236 . -14)) nil (23727 43678 18954 780000) 0 nil]) ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 118)) nil (23727 43678 18961 392000) 0 nil]) ((117 . 118) (#("         " 0 9 (fontified nil)) . 117) (#("
" 0 1 (fontified t)) . -117) 102 (t 23727 43620 877859 431000)) nil (23727 43678 18969 298000) 0 nil]) ((116 . 117) (#("r" 0 1 (fontified t)) . 116)) nil (23727 43620 864995 166000) 0 nil]) ((116 . 117)) nil (23727 43620 865006 63000) 0 nil]) ((#("]" 0 1 (fontified nil)) . -116) (116 . 117) (#(" " 0 1 (fontified nil)) . -116) (116 . 117) (#("]" 0 1 (fontified nil)) . -116) (116 . 117)) nil (23727 43620 865015 477000) 0 nil]) ((107 . 115) (#("a" 0 1 (fontified t)) . -107) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (#("l" 0 1 (fontified nil)) . -108) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (#("y" 0 1 (fontified t)) . -109) (undo-tree-id181 . -1) (undo-tree-id182 . -1) 110 (103 . 110) (102 . 104) (#("(" 0 1 (fontified nil)) . -102) (102 . 103) (#("d" 0 1 (fontified t)) . -102) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("i" 0 1 (fontified t)) . -103) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (#("s" 0 1 (fontified t)) . -104) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (#("p" 0 1 (fontified t)) . -105) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (#("l" 0 1 (fontified t)) . -106) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (#("a" 0 1 (fontified t)) . -107) (undo-tree-id193 . -1) (undo-tree-id194 . -1) 108 (105 . 108) (101 . 105)) nil (23727 43620 865106 715000) 0 nil]) ((111 . 112) (102 . 111) (#(" " 0 1 (fontified nil)) . 101) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (102 . 103) (t 23727 43563 164919 664000)) nil (23727 43620 865180 457000) 0 nil]) ((193 . 194) (#(")" 0 1 (fontified t)) . -187) (186 . 188) (#("(" 0 1 (fontified nil)) . -186) (185 . 187) (t 23727 43487 682106 463000)) nil (23727 43563 150690 419000) 0 nil]) ((180 . 184) (#("-append" 0 7 (fontified t)) . 180) (undo-tree-id174 . 7) (undo-tree-id175 . 7) (undo-tree-id176 . -7)) nil (23727 43487 667091 288000) 0 nil]) ((#("string" 0 6 (fontified t face font-lock-builtin-face)) . 180) (t 23727 43251 613783 403000)) nil (23727 43487 667102 118000) 0 nil]) ((319 . 325) (318 . 319) (#("cons \"\\n\\t\" " 0 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-string-face) 6 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t)) . 318) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . -11) (undo-tree-id163 . 8) (undo-tree-id164 . 8) (undo-tree-id165 . 8) (undo-tree-id166 . 8) (undo-tree-id167 . 8) (undo-tree-id168 . 8) (undo-tree-id169 . 8) (undo-tree-id170 . 8) (undo-tree-id171 . -11) (undo-tree-id172 . 12) (undo-tree-id173 . 11) (t 23727 43096 44945 150000)) nil (23727 43251 600637 874000) 0 nil]) ((212 . 219)) nil (23727 43096 33981 791000) 0 nil]) ((211 . 212) (#(")" 0 1 (fontified t)) . -200) (200 . 201) (#(")" 0 1 (fontified t)) . -194) (193 . 194) (180 . 193) (#("string-a" 0 8 (fontified t)) . -180) (undo-tree-id156 . -8) (undo-tree-id157 . -8) 188 (186 . 188) (#(" " 0 1 (fontified t)) . -186) (undo-tree-id158 . -1) (undo-tree-id159 . -1) 187 (180 . 187) (179 . 181) (#("(" 0 1 (fontified nil)) . -179) (179 . 180)) nil (23727 43096 34036 212000) 0 nil]) ((157 . 173) (#(" " 0 1 (fontified t)) . 157)) nil (23727 43096 34050 52000) 0 nil]) ((131 . 147) (#(" " 0 1 (fontified t)) . 131) (t 23727 42968 589277 36000)) nil (23727 43096 34056 453000) 0 nil]) ((#(";; TODO FIXME
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 13 (fontified t face font-lock-comment-face) 13 14 (fontified t face font-lock-comment-face)) . 45) (undo-tree-id153 . 1) (undo-tree-id154 . 6) (undo-tree-id155 . -13) (t 23727 22552 500480 626000)) nil (23727 42968 574857 365000) 0 nil]) ((56 . 58) (#("X" 0 1 (fontified t face font-lock-comment-face)) . -56) (undo-tree-id152 . -1) 57 (46 . 57) (45 . 46) (44 . 45) (t 23727 22540 513046 319000) 44) nil (23727 22552 490990 417000) 0 nil] [nil nil ((272 . 280) (265 . 272) (#("cons \"\\n\\t\" elements" 0 4 (fontified t face font-lock-builtin-face) 4 5 (fontified t) 5 6 (fontified t face font-lock-string-face) 6 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t) 12 20 (fontified t)) . 265) (undo-tree-id68 . -11) (undo-tree-id69 . 8) (undo-tree-id70 . 8) (undo-tree-id71 . -11) (undo-tree-id72 . 9) (undo-tree-id73 . 9) (undo-tree-id74 . -11) (undo-tree-id75 . -11) (undo-tree-id76 . 16) (undo-tree-id77 . 16) (undo-tree-id78 . 16) (undo-tree-id79 . 16) (undo-tree-id80 . 16) (undo-tree-id81 . 16) (undo-tree-id82 . 16) (undo-tree-id83 . 16) (undo-tree-id85 . 16) (undo-tree-id87 . 16) (undo-tree-id89 . -4) (undo-tree-id90 . -9) 274) ((265 . 285) (#("indent " 0 7 (fontified nil)) . 265) (undo-tree-id122 . -7) (undo-tree-id123 . -7) (undo-tree-id124 . -7) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -7) (undo-tree-id128 . -7) (undo-tree-id129 . -7) (#("elements" 0 8 (fontified t)) . 272) (undo-tree-id130 . -7) (undo-tree-id131 . -7) (undo-tree-id132 . 1) (undo-tree-id133 . 1) (undo-tree-id134 . -7) (undo-tree-id135 . -7) (undo-tree-id136 . 1) (undo-tree-id137 . 1) (undo-tree-id138 . 1) (undo-tree-id139 . 1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . -7) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . -7) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (t 23727 22310 433165 997000)) (23727 22310 418683 27000) 0 nil]) ((161 . 165) (#("e" 0 1 (fontified t)) . -161) (undo-tree-id92 . -1) 162 (160 . 162) (157 . 160) (156 . 158) (#("(" 0 1 (fontified nil)) . -156) (156 . 157) (#("c" 0 1 (fontified t)) . -156) (undo-tree-id93 . -1) 157 (155 . 157) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 155) (154 . 155) (#(" " 0 1 (fontified nil)) . -154) (154 . 155) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -154) (152 . 155) (#("\\" 0 1 (fontified t face font-lock-string-face)) . -152) (undo-tree-id94 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -153) (undo-tree-id95 . -1) (#(" " 0 1 (fontified t)) . -155) (undo-tree-id96 . -1) 156 (155 . 156) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 155) (150 . 155) (149 . 151) (#("\"" 0 1 (fontified nil)) . -149) (149 . 150) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 149) (undo-tree-id97 . -1) 150 (#("c" 0 1 (fontified t)) . -150) (undo-tree-id98 . -1) (#("a" 0 1 (fontified t)) . -151) (undo-tree-id99 . -1) (#("r" 0 1 (fontified t face font-lock-builtin-face)) . -152) (undo-tree-id100 . -1) (#(" " 0 1 (fontified t)) . -153) (undo-tree-id101 . -1) 154 (153 . 154) (150 . 153) (149 . 151) (#("(" 0 1 (fontified nil)) . -149) (144 . 150) (143 . 145) (#("(" 0 1 (fontified nil)) . -143) (142 . 144) (#(")" 0 1 (fontified nil)) . 142) (141 . 142) (#(" " 0 1 (fontified nil)) . -141) (141 . 142) (#(")" 0 1 (fontified nil face font-lock-builtin-face)) . -141) (141 . 142) (#(" " 0 1 (fontified t)) . -141) (undo-tree-id102 . -1) 142 (133 . 142) (#("d" 0 1 (fontified t)) . -133) (undo-tree-id103 . -1) (#("r" 0 1 (fontified t)) . -134) (undo-tree-id104 . -1) 135 (133 . 135) (132 . 134) (#("(" 0 1 (fontified nil)) . -132) (132 . 133) (#("l" 0 1 (fontified t)) . -132) (undo-tree-id105 . -1) 133 (125 . 133) (124 . 126) (#("(" 0 1 (fontified nil)) . -124) (124 . 125)) nil (23727 22507 456449 477000) 0 nil]) ((119 . 124) (118 . 120) (#("[" 0 1 (fontified nil)) . -118) (118 . 119) (#("e" 0 1 (fontified t)) . -118) (undo-tree-id106 . -1) (#("l" 0 1 (fontified t)) . -119) (undo-tree-id107 . -1) (#("s" 0 1 (fontified nil)) . -120) (undo-tree-id108 . -1) (#(" " 0 1 (fontified t)) . -121) (undo-tree-id109 . -1) 122 (121 . 122) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -121) (undo-tree-id110 . -1) (#(" " 0 1 (fontified t)) . -122) (undo-tree-id111 . -1) 123 (122 . 123) (118 . 122) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 118) (undo-tree-id112 . -1) 119 (118 . 120) (#("(" 0 1 (fontified nil)) . -118) (118 . 119) (109 . 118)) nil (23727 22310 418858 378000) 0 nil]) ((108 . 109) (#("]" 0 1 (fontified t)) . -101) (101 . 102) (#("]" 0 1 (fontified t)) . -89) (88 . 90) (#("[" 0 1 (fontified nil)) . -88) (88 . 89)) nil (23727 22310 418875 940000) 0 nil]) ((108 . 111)) nil (23727 22310 418881 778000) 0 nil]) ((#(" " 0 1 (fontified t)) . -107) (undo-tree-id113 . -1) 108 (100 . 108)) nil (23727 22310 418889 767000) 0 nil]) ((#(" " 0 1 (fontified t)) . -101) (undo-tree-id114 . -1) 102 (101 . 102)) nil (23727 22310 418898 331000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 77) (76 . 77) (75 . 77) (#("(" 0 1 (fontified nil)) . -75) (75 . 76) (74 . 75) (#("`" 0 1 (fontified t)) . -74) (undo-tree-id115 . -1) 75 (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 75) (undo-tree-id116 . -1) 76 (75 . 77) (#("(" 0 1 (fontified nil)) . -75) (67 . 76) (66 . 68) (#("[" 0 1 (fontified nil)) . -66) (66 . 67) (#("o" 0 1 (fontified t)) . -66) (undo-tree-id117 . -1) (#("u" 0 1 (fontified t)) . -67) (undo-tree-id118 . -1) 68 (65 . 68)) nil (23727 22310 418940 272000) 0 nil]) ((84 . 86) (#("x" 0 1 (fontified t)) . -84) (undo-tree-id119 . -1) (#("t" 0 1 (fontified t)) . -85) (undo-tree-id120 . -1) 86 (76 . 86) (75 . 77) (#("(" 0 1 (fontified nil)) . -75) (75 . 76) (70 . 75) (69 . 71) (#("(" 0 1 (fontified nil)) . -69) (69 . 70) (66 . 69) (#(")" 0 1 (fontified nil)) . 66) (65 . 66) (54 . 65) (53 . 55) (#("(" 0 1 (fontified nil)) . -53) (53 . 54) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -53) (undo-tree-id121 . -1) 54 (46 . 54) (45 . 47) (#("(" 0 1 (fontified nil)) . -45) (45 . 46) (44 . 45) (43 . 44) (t 23727 21768 735269 107000) 42) nil (23727 22310 418983 748000) 0 nil]) ((154 . 155) (#(")" 0 1 (fontified t)) . -145) (undo-tree-id63 . 1) (undo-tree-id64 . -1) (145 . 146) (#(")" 0 1 (fontified t)) . -139) (undo-tree-id65 . 1) 138) nil (23727 21768 726637 399000) 0 nil]) ((138 . 139) (#("t" 0 1 (fontified t face font-lock-builtin-face)) . -138) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 139 (134 . 139) (133 . 135) (#("(" 0 1 (fontified nil)) . -133) (133 . 134) (t 23727 21630 736254 742000)) nil (23727 21768 726649 241000) 0 nil]) ((139 . 140)) nil (23727 21630 732438 421000) 0 nil]) ((136 . 138) (#(" " 0 1 (fontified t face font-lock-string-face)) . -136) (undo-tree-id57 . -1) (undo-tree-id58 . 1) (undo-tree-id59 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -137) (undo-tree-id60 . -1) (undo-tree-id61 . 1) (undo-tree-id62 . -1) 138 (134 . 138) (133 . 135) (#("\"" 0 1 (fontified nil)) . -133) (133 . 134) (t 23727 21055 773350 358000)) nil (23727 21630 732455 3000) 0 nil] [nil nil ((137 . 138) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 137) (undo-tree-id1 . 1) (undo-tree-id3 . 1) (undo-tree-id5 . 1) (undo-tree-id7 . -1) (undo-tree-id9 . 1) (undo-tree-id11 . 1) (undo-tree-id13 . 1) (undo-tree-id15 . 1) (undo-tree-id17 . 1) (134 . 137) (133 . 135) (#("\"" 0 1 (fontified nil)) . -133) (undo-tree-id19 . -1) (133 . 134) (t 23725 62244 464525 553000)) ((#("\"" 0 1 (fontified nil)) . 133) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (133 . 134) (#("\"\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 133) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . 2) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -1) (undo-tree-id34 . 1) (undo-tree-id35 . -1) (#("\\n\"" 0 3 (fontified nil face font-lock-string-face)) . 134) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -2) (undo-tree-id42 . -3) (undo-tree-id43 . 3) (undo-tree-id44 . -2) (undo-tree-id45 . 1) (undo-tree-id46 . -3) (137 . 138) (#(" " 0 1 (fontified t)) . 137) (undo-tree-id47 . 1) (undo-tree-id48 . 1) (undo-tree-id49 . 1) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . 1) (undo-tree-id54 . 1) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (t 23727 20971 13 104000)) (23727 20970 984412 737000) 0 nil]) nil nil (23727 21052 359174 239000) 0 nil] #3# 32244 221 nil)