"32ec676c920e12675bc64dec38ddaa3ce9d51696"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#4=[nil nil ((#("  (require pollen/setup)
" 0 2 (fontified t) 2 3 (fontified t) 3 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 22 (fontified t) 22 23 (fontified t rear-nonsticky t) 23 24 (fontified t) 24 25 (fontified t)) . 95) (undo-tree-id249 . -11) (undo-tree-id250 . -22) (undo-tree-id251 . 3) (undo-tree-id252 . 15) (undo-tree-id253 . -11) (undo-tree-id254 . -22) (undo-tree-id255 . 3) (undo-tree-id256 . 3) (undo-tree-id257 . 3) (undo-tree-id258 . 3) (undo-tree-id259 . -22) (undo-tree-id260 . -22) (undo-tree-id261 . -21) (undo-tree-id262 . -21) (undo-tree-id263 . 4) 116 (t 23728 48094 283505 426000)) nil (23728 48143 448690 696000) 0 nil]) ((135 . 142) (t 23728 48052 643702 431000)) nil (23728 48094 269689 829000) 0 nil]) ((nil rear-nonsticky nil 117 . 118) (nil fontified nil 106 . 118) (106 . 118) 105) nil (23728 48052 630586 963000) 0 nil]) ((98 . 106) (97 . 99) (#("(" 0 1 (fontified nil)) . -97) (97 . 98) (#("r" 0 1 (fontified t)) . -97) (undo-tree-id247 . -1) (undo-tree-id248 . -1) 98 (97 . 98) (94 . 97) 88) nil (23728 48052 630631 588000) 0 nil] [nil nil ((nil rear-nonsticky nil 100 . 101) (nil fontified nil 89 . 101) (89 . 101) 88) ((#("pollen/setup" 0 11 (fontified nil face font-lock-variable-name-face) 11 12 (fontified nil rear-nonsticky nil face font-lock-variable-name-face)) . 89) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -11) (undo-tree-id246 . 1) (nil rear-nonsticky t 100 . 101)) (23728 48040 165850 999000) 0 nil]) ((#("         " 0 9 (fontified nil)) . 38) (undo-tree-id235 . -9) (undo-tree-id236 . -9) (undo-tree-id237 . -9) (#("
" 0 1 (fontified t)) . -38) 28) nil (23728 48040 165980 89000) 0 nil]) ((#("pollen/setup" 0 12 (fontified t)) . 48) (undo-tree-id238 . 12) (undo-tree-id239 . 11) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id242 . -12) (t 23728 48021 927180 800000)) nil (23728 48040 165874 827000) 0 nil] [nil nil ((#("g" 0 1 (fontified t)) . 37) (undo-tree-id234 . 1) (t 23728 48021 927180 800000)) ((37 . 38)) (23728 48032 380773 788000) 0 nil]) ((48 . 60) (38 . 48)) nil (23728 48032 381010 111000) 0 nil]) ((120 . 135) (110 . 120) (109 . 111) (#("(" 0 1 (fontified nil)) . -109) (104 . 110)) nil (23728 48021 800630 571000) 0 nil]) ((#("pollen/setup" 0 12 (fontified t)) . 105) (undo-tree-id232 . -12) (undo-tree-id233 . -12)) nil (23728 48021 800655 485000) 0 nil]) ((nil rear-nonsticky nil 104 . 105) (#("
" 0 1 (rear-nonsticky t fontified nil)) . -117) (94 . 118) 69 (t 23728 47700 12013 662000)) nil (23728 48021 800664 613000) 0 nil]) ((368 . 369) 95) nil (23728 47699 997573 133000) 0 nil]) ((#("              (current-poly-target)
" 0 14 (fontified t) 14 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t)) . 95) (undo-tree-id208 . -36) (undo-tree-id209 . 22) (undo-tree-id210 . -35) (undo-tree-id211 . -13) (undo-tree-id212 . -13) (undo-tree-id213 . -15) (undo-tree-id214 . -34) 108) nil (23728 47699 997614 979000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 109) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 110 (109 . 111) (#("(" 0 1 (fontified nil)) . -109) (109 . 110)) nil (23728 47699 997630 520000) 0 nil]) ((#("            " 0 12 (fontified nil)) . -109) (undo-tree-id217 . -12) (undo-tree-id218 . -12) (95 . 109) 107) nil (23728 47699 997641 713000) 0 nil]) ((#("          " 0 10 (fontified nil)) . -107) (undo-tree-id219 . -10) (undo-tree-id220 . -10) (95 . 107) 105) nil (23728 47699 997652 580000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -105) (undo-tree-id221 . -8) (undo-tree-id222 . -8) (95 . 105) 103) nil (23728 47699 997664 522000) 0 nil]) ((#("      " 0 6 (fontified nil)) . -103) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (95 . 103) 101) nil (23728 47699 997681 846000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -101) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (95 . 101) 99) nil (23728 47699 997699 147000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -99) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (95 . 99) 97) nil (23728 47699 997709 578000) 0 nil]) ((95 . 97)) nil (23728 47699 997714 410000) 0 nil]) ((95 . 117) 135) nil (23728 47699 997718 363000) 0 nil]) ((#("
(current-poly-target)" 0 1 (fontified t) 1 21 (fontified t) 21 22 (fontified t)) . 368) (undo-tree-id229 . 1) (undo-tree-id230 . -20) (undo-tree-id231 . -20) 388) nil (23728 47699 997728 671000) 0 nil]) ((370 . 389) (369 . 371) (#("(" 0 1 (fontified nil)) . -369) (369 . 370)) nil (23728 47699 997735 284000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#(" 'txt" 0 1 (front-sticky t fontified t) 1 5 (front-sticky t fontified t face racket-selfeval-face)) . 225) (undo-tree-id69 . -5) (undo-tree-id70 . -5) (undo-tree-id71 . -5) (undo-tree-id72 . -5)) ((225 . 230)) (23728 47600 687938 51000) 0 nil]) ((219 . 224)) ((#(" 'txt" 0 1 (fontified t front-sticky (fontified)) 1 2 (fontified t front-sticky (fontified) face racket-selfeval-face) 2 3 (fontified t front-sticky (fontified) face racket-selfeval-face) 3 4 (fontified t front-sticky (fontified) face racket-selfeval-face) 4 5 (fontified t front-sticky (fontified) face racket-selfeval-face)) . 219) (undo-tree-id95 . -5) (undo-tree-id96 . -5) (undo-tree-id97 . -5) (undo-tree-id98 . -5) (undo-tree-id99 . -5) (undo-tree-id100 . -5) (undo-tree-id101 . -5)) (23728 47600 688239 370000) 0 nil]) ((#("define " 0 6 (front-sticky t fontified t face font-lock-keyword-face) 6 7 (front-sticky t fontified t)) . 199) (undo-tree-id73 . 7) (undo-tree-id74 . 7) (undo-tree-id75 . 7) (undo-tree-id76 . 7) (undo-tree-id77 . 7) (undo-tree-id78 . 7) (undo-tree-id79 . 7) (undo-tree-id80 . 7)) ((199 . 206)) (23728 47601 58165 288000) 0 nil]) ((#(")" 0 1 (front-sticky t fontified nil)) . 232) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (#("(" 0 1 (front-sticky t fontified t)) . -199) (undo-tree-id85 . 1) (undo-tree-id86 . 1) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1) (undo-tree-id91 . 1) (undo-tree-id92 . 1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 200 (t 23728 47340 56951 687000)) ((199 . 200) (232 . 233)) (23728 47601 373870 109000) 0 nil] [nil ([nil nil ((#("              " 0 14 (fontified nil front-sticky #1=(fontified))) . 184) (undo-tree-id19 . -14) (undo-tree-id20 . -14) (undo-tree-id21 . -14) (undo-tree-id22 . -14) (undo-tree-id24 . -14) (undo-tree-id26 . -14) (undo-tree-id28 . -14) (undo-tree-id30 . -14) (undo-tree-id32 . -14) (undo-tree-id34 . -14) (undo-tree-id36 . -14) (undo-tree-id38 . -14) (undo-tree-id40 . 14) (#("
" 0 1 (fontified t front-sticky #2=(fontified))) . -184) 137) ((184 . 185) (184 . 198) (t 23728 47278 917212 252000)) (23728 47278 906277 352000) 0 nil]) ((#("(define (current-poly-target) 'txt)" 0 1 (front-sticky t fontified t) 1 7 (front-sticky t fontified t face font-lock-keyword-face) 7 8 (front-sticky t fontified t) 8 9 (front-sticky t fontified t) 9 28 (front-sticky t fontified t face font-lock-function-name-face) 28 30 (front-sticky t fontified t) 30 34 (front-sticky t fontified t face racket-selfeval-face) 34 35 (front-sticky t fontified t)) . 199) (undo-tree-id42 . -35) (undo-tree-id43 . -35) (undo-tree-id44 . -35) (undo-tree-id45 . -35) (undo-tree-id47 . 35) (undo-tree-id49 . 35) (undo-tree-id51 . 34) (undo-tree-id53 . 1) (undo-tree-id55 . -34) (undo-tree-id57 . -28) (undo-tree-id59 . -8) (undo-tree-id61 . -1) (undo-tree-id63 . -35) (undo-tree-id65 . -29) (undo-tree-id67 . -9) (t 23728 47218 977463 148000)) ((199 . 234)) (23728 47336 194346 313000) 0 nil]) ((#("              " 0 14 (fontified nil)) . 234) (#("
" 0 1 (fontified t)) . -234) (undo-tree-id16 . -1) 199) ((234 . 235) (234 . 248) (t 23728 47340 56951 687000)) (23728 47602 342112 893000) 0 nil]) ((184 . 199) (#(" " 0 1 (fontified t)) . 184)) ((184 . 185) (#("
              " 0 1 (fontified t front-sticky #2#) 1 15 (fontified t front-sticky #1#)) . 184) (undo-tree-id102 . -15) (undo-tree-id103 . -15) (undo-tree-id104 . -15) (undo-tree-id105 . -15) (undo-tree-id106 . -15) (undo-tree-id107 . -15) (undo-tree-id108 . -15) (undo-tree-id109 . -15) (undo-tree-id110 . -15) (undo-tree-id111 . -15) (undo-tree-id112 . -15) (undo-tree-id113 . -15) (undo-tree-id114 . -15)) (23728 47602 764665 425000) 0 nil]) ((nil fontified nil 184 . 185) (nil front-sticky #3=(fontified) 184 . 185) (184 . 185) (#("
" 0 1 (fontified t)) . -184) (undo-tree-id18 . -1) 137) ((184 . 185) (#(" " 0 1 (fontified nil front-sticky #3#)) . 184) (undo-tree-id115 . 1) (undo-tree-id116 . 1) (nil front-sticky nil 184 . 185) (nil fontified t 184 . 185)) (23728 47603 393789 937000) 0 nil] [nil nil ((137 . 138)) ((#("
" 0 1 (fontified t)) . 137) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . 1)) (23728 47213 277163 943000) 0 nil]) ((185 . 221) 198) ((#("(define (current-poly-target) 'txt)
" 0 1 (front-sticky t fontified t) 1 7 (front-sticky t fontified t face font-lock-keyword-face) 7 8 (front-sticky t fontified t) 8 9 (front-sticky t fontified t) 9 28 (front-sticky t fontified t face font-lock-function-name-face) 28 29 (front-sticky t fontified t) 29 30 (front-sticky t fontified t) 30 34 (front-sticky t fontified t face racket-selfeval-face) 34 35 (front-sticky t fontified t) 35 36 (fontified t)) . 185) (undo-tree-id117 . 8) (undo-tree-id118 . -35) (undo-tree-id119 . -35) (undo-tree-id120 . -35) (undo-tree-id121 . 36) (undo-tree-id122 . 36) (undo-tree-id123 . -35) (undo-tree-id124 . 36) (undo-tree-id125 . 36) (undo-tree-id126 . 36) (undo-tree-id127 . 36) (undo-tree-id128 . 36) (undo-tree-id129 . 36) (undo-tree-id130 . 22) (undo-tree-id131 . 21) (undo-tree-id132 . 22) (undo-tree-id133 . 22) (undo-tree-id134 . 7) (undo-tree-id135 . 22) (undo-tree-id136 . -28) (undo-tree-id137 . -29) (undo-tree-id138 . -28) (undo-tree-id139 . -29) (undo-tree-id140 . -28) (undo-tree-id141 . -29) (undo-tree-id142 . -28) (undo-tree-id143 . -29) (undo-tree-id144 . -28) (undo-tree-id145 . -29) (undo-tree-id146 . -28) (undo-tree-id147 . -29) (undo-tree-id148 . -9) (undo-tree-id149 . 8) (undo-tree-id150 . 7) (undo-tree-id151 . -9) (undo-tree-id152 . 35) (undo-tree-id153 . 8) (undo-tree-id154 . 35) (undo-tree-id155 . 35) (undo-tree-id156 . 36) (undo-tree-id157 . 35) (undo-tree-id158 . 36) (undo-tree-id159 . 36)) (23728 47604 430825 319000) 0 nil] [nil nil ((nil rear-nonsticky nil 200 . 201) (#("
" 0 1 (fontified nil)) . -236) (200 . 237) 198) ((#("
(define (current-poly-target) 'txt)
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (front-sticky t fontified nil) 2 8 (front-sticky t fontified nil face font-lock-keyword-face) 8 9 (front-sticky t fontified nil) 9 10 (front-sticky t fontified nil) 10 29 (front-sticky t fontified nil face font-lock-function-name-face) 29 31 (front-sticky t fontified nil) 31 35 (front-sticky t fontified nil face racket-selfeval-face) 35 36 (front-sticky t fontified nil) 36 37 (fontified nil)) . 200) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -36) (undo-tree-id3 . -1) (undo-tree-id4 . -36) (undo-tree-id5 . 36) (undo-tree-id6 . 36) (undo-tree-id7 . -2) (undo-tree-id8 . 35) (undo-tree-id9 . -35) (undo-tree-id10 . 2) (undo-tree-id11 . -36) (236 . 237) (nil rear-nonsticky t 200 . 201)) (23728 47206 45565 192000) 0 nil]) ((184 . 199) (t 23725 60723 737121 543000)) ((#("
              " 0 1 (fontified t) 1 15 (fontified t)) . 184) (undo-tree-id160 . 14) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . 14) (undo-tree-id166 . 14) (undo-tree-id167 . -1) (undo-tree-id168 . 14) (undo-tree-id169 . 14) (undo-tree-id170 . 14) (undo-tree-id171 . 14) (undo-tree-id172 . 14) (undo-tree-id173 . 14) (undo-tree-id174 . -14) (undo-tree-id175 . -14) (undo-tree-id176 . 14) (undo-tree-id177 . 14) (undo-tree-id178 . 14) (undo-tree-id179 . 14) (undo-tree-id180 . 14) (undo-tree-id181 . 14) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . 14) (undo-tree-id196 . 14) (undo-tree-id197 . -1) (undo-tree-id198 . 14) (undo-tree-id199 . 14) (undo-tree-id200 . 14) (undo-tree-id201 . 14) (undo-tree-id202 . 14) (undo-tree-id203 . 14) (undo-tree-id204 . 14) (undo-tree-id205 . 14) (undo-tree-id206 . 15) (undo-tree-id207 . 1)) (23728 47604 852224 690000) 0 nil]) nil nil (23728 47605 569688 968000) 0 nil] #4# 3380 38 nil)