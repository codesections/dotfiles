"ce110f0af9fa3e749422d8c968cb72e0acc844f7"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#(" " 0 1 (fontified t)) . -681) (undo-tree-id467 . -1) 682 (t 23707 64671 36977 272000)) nil (23707 64679 298390 119000) 0 nil]) ((#("/* " 0 1 (fontified t face font-lock-comment-delimiter-face) 1 3 (fontified t face font-lock-comment-delimiter-face)) . 1) (undo-tree-id349 . -1) (undo-tree-id350 . 1) (undo-tree-id351 . 2) (undo-tree-id352 . 1) (undo-tree-id353 . 3) (undo-tree-id354 . 2)) nil (23707 64671 22772 557000) 0 nil]) ((#("    " 0 4 (fontified nil face font-lock-comment-face)) . -832) (undo-tree-id355 . -3) (826 . 832) 829) nil (23707 64671 22779 648000) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-comment-face)) . -830) (undo-tree-id356 . -1) 831 (830 . 831) (827 . 830) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -827) (undo-tree-id357 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -828) (undo-tree-id358 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -829) (undo-tree-id359 . -1) 830 (826 . 830) (825 . 826)) nil (23707 64671 22790 437000) 0 nil]) ((1101 . 1104) (1100 . 1101)) nil (23707 64671 22794 838000) 0 nil]) ((1099 . 1100) (#(")" 0 1 (fontified nil face font-lock-comment-face)) . 1099) (1098 . 1099) (#(" " 0 1 (fontified nil)) . -1098) (1098 . 1099) (#(")" 0 1 (fontified nil face font-lock-comment-face)) . -1098) (1080 . 1099) (#("M" 0 1 (fontified t face font-lock-comment-face)) . -1080) (undo-tree-id360 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1081) (undo-tree-id361 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1082) (undo-tree-id362 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1083) (undo-tree-id363 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1084) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -1085) (undo-tree-id366 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1086) (undo-tree-id367 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -1087) (undo-tree-id368 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1088) (undo-tree-id369 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -1089) (undo-tree-id370 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1090) (undo-tree-id371 . -1) 1091 (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1091) (undo-tree-id372 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1092) (undo-tree-id373 . -1) 1093 (1080 . 1093) (#("m" 0 1 (fontified t face font-lock-comment-face)) . -1080) (undo-tree-id374 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -1081) (undo-tree-id375 . -1) 1082 (1066 . 1082) (1065 . 1066) (1059 . 1065) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -1059) (undo-tree-id376 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1060) (undo-tree-id377 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1061) (undo-tree-id378 . -1) 1062 (1059 . 1062) (1053 . 1059) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -1053) (undo-tree-id379 . -1) 1054 (1052 . 1054) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -1052) (undo-tree-id380 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -1053) (undo-tree-id381 . -1) 1054 (1052 . 1054) (1051 . 1053) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -1051) (1042 . 1052) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -1042) (undo-tree-id382 . -1) (#("A" 0 1 (fontified t face font-lock-comment-face)) . -1043) (undo-tree-id383 . -1) 1044 (1042 . 1044) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1042) (undo-tree-id384 . -1) 1043 (1036 . 1043) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1036) (undo-tree-id385 . -1) 1037 (1030 . 1037) (1029 . 1030)) nil (23707 64671 22850 561000) 0 nil]) ((1018 . 1027) (#("genererator" 0 11 (fontified t face font-lock-comment-face)) . -1018) (undo-tree-id386 . -9) 1027) nil (23707 64671 22864 999000) 0 nil]) ((1030 . 1032) (#(")" 0 1 (fontified nil face font-lock-comment-face)) . 1030) (1029 . 1030) (#(" " 0 1 (fontified nil)) . -1029) (1029 . 1030) (#(")" 0 1 (fontified nil face font-lock-comment-face)) . -1029) (1023 . 1030) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1023) (undo-tree-id387 . -1) 1024 (1018 . 1024) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1018) (undo-tree-id388 . -1) 1019 (1018 . 1019) (1004 . 1018) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -1004) (undo-tree-id389 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -1005) (undo-tree-id390 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -1006) (undo-tree-id391 . -1) 1007 (1004 . 1007) (1003 . 1005) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -1003) (1002 . 1004) (#("," 0 1 (fontified t face font-lock-comment-face)) . -1002) (undo-tree-id392 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -1003) (undo-tree-id393 . -1) 1004 (999 . 1004) (997 . 999)) nil (23707 64671 22883 801000) 0 nil]) ((980 . 987) (#(" " 0 1 (fontified t face font-lock-comment-face)) . 980)) nil (23707 64671 22890 47000) 0 nil]) ((989 . 990) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -989) (undo-tree-id394 . -1) 990 (982 . 990) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -982) (undo-tree-id395 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -983) (undo-tree-id396 . -1) 984 (974 . 984) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -974) (undo-tree-id397 . -1) 975 (967 . 975) (964 . 967) (963 . 965) (#("(" 0 1 (fontified nil face font-lock-comment-face)) . -963) (946 . 964) (925 . 946) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -925) (undo-tree-id398 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -926) (undo-tree-id399 . -1) 927 (926 . 927) (905 . 926) (903 . 905) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -903) (undo-tree-id400 . -1) 904 (899 . 904) (898 . 899) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -898) (undo-tree-id401 . -1) 899 (898 . 899) (897 . 898) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -897) (undo-tree-id402 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -898) (undo-tree-id403 . -1) (#("R" 0 1 (fontified t face font-lock-comment-face)) . -899) (undo-tree-id404 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -900) (undo-tree-id405 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -901) (undo-tree-id406 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -902) (undo-tree-id407 . -1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -903) (undo-tree-id408 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -904) (undo-tree-id409 . -1) (#("J" 0 1 (fontified t face font-lock-comment-face)) . -905) (undo-tree-id410 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -906) (undo-tree-id411 . -1) (#("v" 0 1 (fontified t face font-lock-comment-face)) . -907) (undo-tree-id412 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -908) (undo-tree-id413 . -1) (#("S" 0 1 (fontified t face font-lock-comment-face)) . -909) (undo-tree-id414 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -910) (undo-tree-id415 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -911) (undo-tree-id416 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -912) (undo-tree-id417 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -913) (undo-tree-id418 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -914) (undo-tree-id419 . -1) 915 (913 . 915) (892 . 913) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -892) (undo-tree-id420 . -1) 893 (876 . 893) (855 . 876) (845 . 855) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -845) (undo-tree-id421 . -1) 846 (844 . 846) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -844) (undo-tree-id422 . -1) 845 (830 . 845) (825 . 830) (#("C" 0 1 (fontified t face font-lock-comment-face)) . -825) (undo-tree-id423 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -826) (undo-tree-id424 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -827) (undo-tree-id425 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -828) (undo-tree-id426 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -829) (undo-tree-id427 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -830) (undo-tree-id428 . -1) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -831) (undo-tree-id429 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -832) (undo-tree-id430 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -833) (undo-tree-id431 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -834) (undo-tree-id432 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -835) (undo-tree-id433 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -836) (undo-tree-id434 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -837) (undo-tree-id435 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -838) (undo-tree-id436 . -1) 839 (836 . 839) (825 . 836) (#("B.A. in Philosophy, Politics & " 0 5 (fontified t face font-lock-comment-face) 5 7 (fontified t face font-lock-comment-face) 7 31 (fontified t face font-lock-comment-face)) . 825) (undo-tree-id437 . -30) 855) nil (23707 64671 22971 118000) 0 nil]) ((#("Economics" 0 9 (fontified t face font-lock-comment-face)) . 856) (undo-tree-id438 . -2) 858) nil (23707 64671 22991 32000) 0 nil]) ((792 . 800) (788 . 792) (767 . 788) (#("Pomona College, Claremont, CA 2007–2011" 0 39 (fontified t face font-lock-comment-face)) . 767) (undo-tree-id439 . -20) (undo-tree-id440 . -20) (undo-tree-id441 . -20) (undo-tree-id442 . 19) (undo-tree-id443 . 18) (undo-tree-id444 . -20) 787) nil (23707 64671 23001 361000) 0 nil]) ((729 . 737) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -729) (undo-tree-id445 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -730) (undo-tree-id446 . -1) 731 (722 . 731) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -722) (undo-tree-id447 . -1) 723 (717 . 723) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -717) (undo-tree-id448 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -718) (undo-tree-id449 . -1) (#("w" 0 1 (fontified t face font-lock-comment-face)) . -719) (undo-tree-id450 . -1) 720 (716 . 720) (710 . 716) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -710) (undo-tree-id451 . -1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -711) (undo-tree-id452 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -712) (undo-tree-id453 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -713) (undo-tree-id454 . -1) 714 (707 . 714) (686 . 707) (685 . 686) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -685) (undo-tree-id455 . -1) (#("h" 0 1 (fontified t face font-lock-comment-face)) . -686) (undo-tree-id456 . -1) 687 (685 . 687) (676 . 685) (#("V" 0 1 (fontified t face font-lock-comment-face)) . -676) (undo-tree-id457 . -1) (#("L" 0 1 (fontified t face font-lock-comment-face)) . -677) (undo-tree-id458 . -1) 678 (676 . 678) (#("S" 0 1 (fontified t face font-lock-comment-face)) . -676) (undo-tree-id459 . -1) (#("L" 0 1 (fontified t face font-lock-comment-face)) . -677) (undo-tree-id460 . -1) 678 (673 . 678) (652 . 673) (649 . 652)) nil (23707 64671 23033 157000) 0 nil]) ((619 . 629) (#("stratigies" 0 10 (fontified t face font-lock-comment-face)) . -619) (undo-tree-id461 . -7) 626) nil (23707 64671 23042 478000) 0 nil]) ((639 . 648) (#("awarnes" 0 7 (fontified t face font-lock-comment-face)) . -639) (undo-tree-id462 . -5) 644) nil (23707 64671 23045 835000) 0 nil]) ((645 . 647) (624 . 645) (619 . 624)) nil (23707 64671 23048 370000) 0 nil]) ((608 . 618) (#("Courdinate" 0 10 (fontified t face font-lock-comment-face)) . -608) (undo-tree-id463 . -8) 616) nil (23707 64671 23051 558000) 0 nil]) ((607 . 619) (606 . 607) (602 . 606) (602 . 603) 606) nil (23707 64671 23054 738000) 0 nil]) ((#("      apps, or parse arguments.
" 0 10 (fontified t face font-lock-comment-face) 10 21 (fontified t face font-lock-comment-face) 21 30 (fontified t face font-lock-comment-face) 30 31 (fontified t face font-lock-comment-face) 31 32 (fontified t face font-lock-comment-face)) . 602) (undo-tree-id464 . -6) 608) nil (23707 64671 23057 751000) 0 nil]) ((#("      libraries, with a focus on libraries that generate documentation, test CLI
" 0 6 (fontified t face font-lock-comment-face) 6 17 (fontified t face font-lock-comment-face) 17 21 (fontified t face font-lock-comment-face) 21 57 (fontified t face font-lock-comment-face) 57 71 (fontified t face font-lock-comment-face) 71 80 (fontified t face font-lock-comment-face) 80 81 (fontified t face font-lock-comment-face)) . 602) (undo-tree-id465 . -6) 608) nil (23707 64671 23061 994000) 0 nil]) ((#("      Support Rust CLI ecosystem by contributing to various CLI-focused
" 0 52 (fontified t face font-lock-comment-face) 52 72 (fontified t face font-lock-comment-face)) . 602) (undo-tree-id466 . -4) 606) nil (23707 64671 23065 79000) 0 nil]) ((374 . 588) 383) nil (23707 64671 23067 86000) 0 nil] [nil nil ((374 . 588) (#("    <Details>
      Support Rust CLI ecosystem by contributing to various CLI-focused
      libraries, with a focus on libraries that generate documentation, test CLI
      apps, or parse arguments.
    </Details>
" 0 14 (fontified t face font-lock-comment-face) 14 66 (fontified t face font-lock-comment-face) 66 86 (fontified t face font-lock-comment-face) 86 92 (fontified t face font-lock-comment-face) 92 103 (fontified t face font-lock-comment-face) 103 107 (fontified t face font-lock-comment-face) 107 143 (fontified t face font-lock-comment-face) 143 157 (fontified t face font-lock-comment-face) 157 167 (face font-lock-comment-face fontified t) 167 177 (fontified t face font-lock-comment-face) 177 188 (fontified t face font-lock-comment-face) 188 197 (fontified t face font-lock-comment-face) 197 198 (fontified t face font-lock-comment-face) 198 199 (fontified t face font-lock-comment-face) 199 203 (fontified t face font-lock-comment-face) 203 213 (fontified t face font-lock-comment-face) 213 214 (fontified t face font-lock-comment-face)) . 374) 383) ((374 . 588) (#("    <details>
      support rust cli ecosystem by contributing to various cli-focused
      libraries, with a focus on libraries that generate documentation, test cli
      apps, or parse arguments.
    </details>
" 0 14 (fontified t face font-lock-comment-face) 14 66 (fontified t face font-lock-comment-face) 66 86 (fontified t face font-lock-comment-face) 86 92 (fontified t face font-lock-comment-face) 92 103 (fontified t face font-lock-comment-face) 103 107 (fontified t face font-lock-comment-face) 107 143 (fontified t face font-lock-comment-face) 143 157 (fontified t face font-lock-comment-face) 157 167 (fontified t face font-lock-comment-face) 167 177 (fontified t face font-lock-comment-face) 177 188 (fontified t face font-lock-comment-face) 188 197 (fontified t face font-lock-comment-face) 197 198 (fontified t face font-lock-comment-face) 198 199 (fontified t face font-lock-comment-face) 199 203 (fontified t face font-lock-comment-face) 203 213 (fontified t face font-lock-comment-face) 213 214 (fontified t face font-lock-comment-face)) . 374) (undo-tree-id230 . 37) (undo-tree-id231 . -208) (undo-tree-id232 . -5) (undo-tree-id233 . -205) (undo-tree-id234 . 17) (undo-tree-id235 . 17) (undo-tree-id236 . 11) (undo-tree-id237 . 11) (undo-tree-id238 . 11) (undo-tree-id239 . 11) (undo-tree-id240 . 11) (undo-tree-id241 . 11) (undo-tree-id242 . 11) (undo-tree-id243 . 11) (undo-tree-id244 . 37) (undo-tree-id245 . 37) (undo-tree-id246 . 37) (undo-tree-id247 . 37) (undo-tree-id248 . 37) (undo-tree-id249 . 37) (undo-tree-id250 . 37) (undo-tree-id251 . 37) (undo-tree-id252 . 37) (undo-tree-id253 . 120) (undo-tree-id254 . 37) (undo-tree-id255 . 37) (undo-tree-id256 . 37) (undo-tree-id257 . 120) (undo-tree-id258 . -173) (undo-tree-id259 . -173) (undo-tree-id260 . -173) (undo-tree-id261 . -173) (undo-tree-id262 . 37) (undo-tree-id263 . 37) (undo-tree-id264 . 37) (undo-tree-id265 . 37) (undo-tree-id266 . 37) (undo-tree-id267 . 37) (undo-tree-id268 . 37) (undo-tree-id269 . 37) (undo-tree-id270 . 37) (undo-tree-id271 . 37) (undo-tree-id272 . -173) (undo-tree-id273 . -173) (undo-tree-id274 . -9) (undo-tree-id275 . 23) (undo-tree-id276 . 22) (undo-tree-id277 . 24) (undo-tree-id278 . 23) (undo-tree-id279 . 25) (undo-tree-id280 . 23) (undo-tree-id281 . 26) (undo-tree-id282 . 23) (undo-tree-id283 . 27) (undo-tree-id284 . 26) (undo-tree-id285 . 28) (undo-tree-id286 . 27) (undo-tree-id287 . 29) (undo-tree-id288 . 28) (undo-tree-id289 . 30) (undo-tree-id290 . 29) (undo-tree-id291 . 31) (undo-tree-id292 . 30) (undo-tree-id293 . 32) (undo-tree-id294 . 31) (undo-tree-id295 . 33) (undo-tree-id296 . 32) (undo-tree-id297 . 34) (undo-tree-id298 . 33) (undo-tree-id299 . 35) (undo-tree-id300 . 34) (undo-tree-id301 . 36) (undo-tree-id302 . 35) (undo-tree-id303 . 37) (undo-tree-id304 . 36) (undo-tree-id305 . 37) (undo-tree-id306 . 37) (undo-tree-id307 . 37) (undo-tree-id308 . 37) (undo-tree-id309 . 37) (undo-tree-id310 . 37) (undo-tree-id311 . 37) (undo-tree-id312 . 37) (undo-tree-id313 . 37) (undo-tree-id314 . 37) (undo-tree-id315 . 37) (undo-tree-id316 . 37) (undo-tree-id317 . 51) (undo-tree-id318 . -166) (undo-tree-id319 . 37) (undo-tree-id320 . 41) (undo-tree-id321 . 37) (undo-tree-id322 . 40) (undo-tree-id323 . 37) (undo-tree-id324 . 39) (undo-tree-id325 . 37) (undo-tree-id326 . 38) (undo-tree-id327 . 38) (undo-tree-id328 . 38) (undo-tree-id329 . 6) (undo-tree-id330 . 38) (undo-tree-id331 . 38) (undo-tree-id332 . 6) (undo-tree-id333 . 6) (undo-tree-id334 . 38) (undo-tree-id335 . -208) (undo-tree-id336 . -9) (undo-tree-id337 . 6) (undo-tree-id338 . 6) (undo-tree-id339 . 38) (undo-tree-id340 . 6) (undo-tree-id341 . 119) (undo-tree-id342 . 38) (undo-tree-id343 . 191) (undo-tree-id344 . 119) (undo-tree-id345 . 205) (undo-tree-id346 . 191) (undo-tree-id347 . 205) (undo-tree-id348 . 205)) (23707 64181 734097 855000) 0 nil]) ((547 . 551) (#("aprewr" 0 1 (fontified t face font-lock-comment-face) 1 6 (fontified t face font-lock-comment-face)) . 547) (undo-tree-id189 . -2) (undo-tree-id190 . 4) (undo-tree-id191 . 5) (undo-tree-id192 . 4) (undo-tree-id193 . 4) (undo-tree-id194 . 4) (undo-tree-id195 . 4) (undo-tree-id196 . 4) (undo-tree-id197 . 4) (undo-tree-id198 . 4) (undo-tree-id199 . 4) (undo-tree-id200 . 4) (undo-tree-id201 . 4) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . 4) (undo-tree-id207 . 4) (undo-tree-id208 . 4) (undo-tree-id209 . 4) (undo-tree-id210 . 4) (undo-tree-id211 . 4) (undo-tree-id212 . 4) (undo-tree-id213 . 4) (undo-tree-id214 . 4) (undo-tree-id215 . 4) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -1) (undo-tree-id219 . 6) (undo-tree-id220 . -6) (undo-tree-id221 . 1) (undo-tree-id222 . 2) (undo-tree-id223 . 1) (undo-tree-id224 . 3) (undo-tree-id225 . 2) (undo-tree-id226 . 4) (undo-tree-id227 . 3) (undo-tree-id228 . 5) (undo-tree-id229 . 4) 548) nil (23707 64181 734930 143000) 0 nil]) ((3 . 4)) nil (23707 64181 734220 744000) 0 nil]) ((1 . 3)) nil (23707 64181 734224 63000) 0 nil]) (9) nil (23707 64181 734227 132000) 0 nil]) ((546 . 550)) nil (23707 64181 734229 996000) 0 nil]) ((#("ps" 0 2 (fontified t)) . 546)) nil (23707 64181 734238 259000) 0 nil]) ((544 . 545)) nil (23707 64181 734241 744000) 0 nil]) ((#("a" 0 1 (fontified t)) . 544) (t 23707 63968 213788 508000)) nil (23707 64181 734245 459000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -544) (undo-tree-id185 . -4) (538 . 544) 542) nil (23707 63968 190937 599000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -542) (538 . 542) 541) nil (23707 63968 190951 472000) 0 nil]) ((566 . 570) (#("    " 0 4 (fontified nil)) . -540) (569 . 570)) nil (23707 63968 190977 289000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -544) (undo-tree-id186 . -4) (538 . 544) 542) nil (23707 63968 190987 753000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -542) (undo-tree-id187 . -2) (538 . 542) 540) nil (23707 63968 190997 552000) 0 nil]) ((537 . 540) (#(" " 0 1 (fontified t)) . 537)) nil (23707 63968 191002 675000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -463) (undo-tree-id188 . -4) (457 . 463) 461) nil (23707 63968 191011 105000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -461) (457 . 461) 462) nil (23707 63968 191017 4000) 0 nil]) ((389 . 391) (384 . 389)) nil (23707 63968 191021 878000) 0 nil]) ((449 . 452) (#(" " 0 1 (fontified t)) . 449) (t 23707 62216 422936 541000)) nil (23707 63968 191027 23000) 0 nil]) ((531 . 550) (#("a" 0 1 (fontified t)) . -531) (undo-tree-id18 . -1) (#("n" 0 1 (fontified t)) . -532) (undo-tree-id19 . -1) (#("d" 0 1 (fontified t)) . -533) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t)) . -534) (undo-tree-id21 . -1) 535 (532 . 535) (522 . 532) (#("I" 0 1 (fontified t)) . -522) (undo-tree-id22 . -1) 523 (517 . 523) (496 . 517) (487 . 496) (#("t" 0 1 (fontified t)) . -487) (undo-tree-id23 . -1) (#("o" 0 1 (fontified t)) . -488) (undo-tree-id24 . -1) (#(" " 0 1 (fontified t)) . -489) (undo-tree-id25 . -1) 490 (477 . 490) (#("d" 0 1 (fontified t)) . -477) (undo-tree-id26 . -1) (#("o" 0 1 (fontified t face font-lock-keyword-face)) . -478) (undo-tree-id27 . -1) (#("c" 0 1 (fontified t)) . -479) (undo-tree-id28 . -1) (#("u" 0 1 (fontified t)) . -480) (undo-tree-id29 . -1) (#("m" 0 1 (fontified t)) . -481) (undo-tree-id30 . -1) (#("e" 0 1 (fontified t)) . -482) (undo-tree-id31 . -1) (#("n" 0 1 (fontified t)) . -483) (undo-tree-id32 . -1) (#("t" 0 1 (fontified t)) . -484) (undo-tree-id33 . -1) (#("a" 0 1 (fontified t)) . -485) (undo-tree-id34 . -1) (#("t" 0 1 (fontified t)) . -486) (undo-tree-id35 . -1) (#("i" 0 1 (fontified t)) . -487) (undo-tree-id36 . -1) (#("o" 0 1 (fontified t)) . -488) (undo-tree-id37 . -1) (#("n" 0 1 (fontified t)) . -489) (undo-tree-id38 . -1) (#(" " 0 1 (fontified t)) . -490) (undo-tree-id39 . -1) (#("g" 0 1 (fontified t)) . -491) (undo-tree-id40 . -1) (#("e" 0 1 (fontified t)) . -492) (undo-tree-id41 . -1) (#("n" 0 1 (fontified t)) . -493) (undo-tree-id42 . -1) 494 (#("e" 0 1 (fontified t)) . -494) (undo-tree-id43 . -1) (#("a" 0 1 (fontified t)) . -495) (undo-tree-id44 . -1) 496 (479 . 496) (#("s" 0 1 (fontified t)) . -479) (undo-tree-id45 . -1) 480 (477 . 480) (464 . 477) (443 . 464) (433 . 443) (412 . 433) (411 . 412) (#("m" 0 1 (fontified t)) . -411) (undo-tree-id46 . -1) 412 (411 . 412)) nil (23707 62216 322031 878000) 0 nil]) ((407 . 411) (#("e" 0 1 (fontified t)) . -407) (undo-tree-id47 . -1) (undo-tree-id48 . 1) 408 (#("m" 0 1 (fontified t)) . -408) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (#(" " 0 1 (fontified t)) . -409) (undo-tree-id51 . -1) (undo-tree-id52 . 1) 410 (407 . 410) (#("e" 0 1 (fontified nil)) . -407) (undo-tree-id53 . -1) (#("m" 0 1 (fontified t)) . -408) (undo-tree-id54 . -1) (undo-tree-id55 . 1) 409 (397 . 409) (393 . 397) (#("U" 0 1 (fontified t)) . -393) (undo-tree-id56 . -1) (#("S" 0 1 (fontified nil)) . -394) (undo-tree-id57 . -1) (#("t" 0 1 (fontified t)) . -395) (undo-tree-id58 . -1) 396 (385 . 396) (384 . 385) (#(" " 0 1 (fontified t)) . -384) (undo-tree-id59 . -1) 385 (383 . 385) (#(">" 0 1 (fontified t)) . -383) (undo-tree-id60 . -1) (#("S" 0 1 (fontified t)) . -384) (undo-tree-id61 . -1) (#("u" 0 1 (fontified nil)) . -385) (undo-tree-id62 . -1) (#("p" 0 1 (fontified t)) . -386) (undo-tree-id63 . -1) (#("p" 0 1 (fontified t)) . -387) (undo-tree-id64 . -1) (#("o" 0 1 (fontified t)) . -388) (undo-tree-id65 . -1) (#("r" 0 1 (fontified t)) . -389) (undo-tree-id66 . -1) (#("t" 0 1 (fontified t)) . -390) (undo-tree-id67 . -1) (#("e" 0 1 (fontified t)) . -391) (undo-tree-id68 . -1) 392 (385 . 392) (384 . 385) (#("J.D." 0 4 (fontified t)) . 384) (undo-tree-id69 . 4) (undo-tree-id70 . 4) (undo-tree-id71 . 4)) nil (23707 62216 322135 483000) 0 nil]) ((#("School" 0 6 (fontified t face font-lock-variable-name-face)) . 187)) nil (23707 62216 322155 328000) 0 nil]) ((#("School" 0 6 (fontified t)) . 525) (undo-tree-id72 . 6) (undo-tree-id73 . 6) (undo-tree-id74 . 6) (undo-tree-id75 . 6)) nil (23707 62216 322167 398000) 0 nil]) ((#("School" 0 6 (fontified t)) . 475) (undo-tree-id76 . 6) (undo-tree-id77 . 6) (undo-tree-id78 . 6) (undo-tree-id79 . 6)) nil (23707 62216 322184 163000) 0 nil]) ((#("School" 0 6 (fontified t)) . 396) (undo-tree-id80 . 6) (undo-tree-id81 . 6) (undo-tree-id82 . 6) (undo-tree-id83 . 6)) nil (23707 62216 322196 296000) 0 nil]) ((#("School" 0 6 (fontified t)) . 382) (undo-tree-id84 . 6) (undo-tree-id85 . 6)) nil (23707 62216 322204 16000) 0 nil]) ((149 . 157) (#("SchoolTitle" 0 11 (fontified t face font-lock-variable-name-face)) . 149) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . 11) (undo-tree-id89 . 11) (undo-tree-id90 . 11) (undo-tree-id91 . 11)) nil (23707 62216 322220 664000) 0 nil]) ((475 . 483) (#("SchoolTitle" 0 11 (fontified t)) . 475) (undo-tree-id92 . 11) (undo-tree-id93 . 11) (undo-tree-id94 . 11) (undo-tree-id95 . 11)) nil (23707 62216 322239 95000) 0 nil]) ((425 . 433) (#("SchoolTitle" 0 11 (fontified t)) . 425) (undo-tree-id96 . 11) (undo-tree-id97 . 11) (undo-tree-id98 . 11) (undo-tree-id99 . 11)) nil (23707 62216 322252 431000) 0 nil]) ((370 . 378) (#("SchoolTitle" 0 11 (fontified t)) . 370)) nil (23707 62216 322256 949000) 0 nil]) ((337 . 345) (#("SchoolTitle" 0 11 (fontified t)) . 337) (undo-tree-id100 . 5) (undo-tree-id101 . 5) (undo-tree-id102 . 11) (undo-tree-id103 . 11)) nil (23707 62216 322270 898000) 0 nil]) ((358 . 371) (354 . 358) (#("L" 0 1 (fontified t)) . -354) (undo-tree-id104 . -1) (#("a" 0 1 (fontified t)) . -355) (undo-tree-id105 . -1) 356 (349 . 356) (#("Columbia Law School, New York, NY 2012–2015" 0 43 (fontified t)) . 349) (undo-tree-id106 . 21) (undo-tree-id107 . 22) (undo-tree-id108 . 21) (undo-tree-id109 . 23) (undo-tree-id110 . 22) (undo-tree-id111 . 24) (undo-tree-id112 . 23) (undo-tree-id113 . 25) (undo-tree-id114 . 24) (undo-tree-id115 . 26) (undo-tree-id116 . 25) (undo-tree-id117 . 27) (undo-tree-id118 . 26) (undo-tree-id119 . 28) (undo-tree-id120 . 27) (undo-tree-id121 . 29) (undo-tree-id122 . 28) (undo-tree-id123 . 30) (undo-tree-id124 . 29) (undo-tree-id125 . 31) (undo-tree-id126 . 30) (undo-tree-id127 . 32) (undo-tree-id128 . 31) (undo-tree-id129 . 33) (undo-tree-id130 . 32) (undo-tree-id131 . 34) (undo-tree-id132 . 33) (undo-tree-id133 . 35) (undo-tree-id134 . 34) (undo-tree-id135 . 36) (undo-tree-id136 . 35) (undo-tree-id137 . 37) (undo-tree-id138 . 36) (undo-tree-id139 . 38) (undo-tree-id140 . 37) (undo-tree-id141 . 39) (undo-tree-id142 . 38) (undo-tree-id143 . 40) (undo-tree-id144 . 39) (undo-tree-id145 . 41) (undo-tree-id146 . 40) (undo-tree-id147 . 42) (undo-tree-id148 . 41) (undo-tree-id149 . 43) (undo-tree-id150 . 42) (undo-tree-id151 . 43) (undo-tree-id152 . 43) (undo-tree-id153 . 43) (undo-tree-id154 . 43) (undo-tree-id155 . 43) (undo-tree-id156 . 43) (undo-tree-id157 . 43) (undo-tree-id158 . 43) (undo-tree-id159 . 43) (undo-tree-id160 . 43) (undo-tree-id161 . 43) (undo-tree-id162 . 43) (undo-tree-id163 . 43) (undo-tree-id164 . 43) (undo-tree-id165 . 43) (undo-tree-id166 . 43) (undo-tree-id167 . 43) (undo-tree-id168 . 43) (undo-tree-id169 . 43) (undo-tree-id170 . 43)) nil (23707 62216 322445 60000) 0 nil]) ((298 . 315) (294 . 298) (#("Education" 0 9 (fontified t)) . 294) (undo-tree-id171 . -6) (undo-tree-id172 . 9) (undo-tree-id173 . 8) (undo-tree-id174 . 9) (undo-tree-id175 . 7) (undo-tree-id176 . 8) (undo-tree-id177 . 6) (undo-tree-id178 . 7) (undo-tree-id179 . 5) (undo-tree-id180 . 6) (undo-tree-id181 . 4) (undo-tree-id182 . 5) (undo-tree-id183 . 3) (undo-tree-id184 . 4) 300 (t 23707 61541 987010 373000)) nil (23707 62216 322492 192000) 0 nil]) ((#("j" 0 1 (fontified nil)) . -631) 632 (631 . 632) (611 . 631) (#("OpenS" 0 5 (fontified nil)) . 611) (undo-tree-id0 . 5) (undo-tree-id1 . 5) (undo-tree-id2 . 5) (undo-tree-id3 . 5) (undo-tree-id4 . 5) (undo-tree-id5 . 5) (611 . 616) (#("EducationSection" 0 16 (fontified t)) . 611) (undo-tree-id6 . -10) (undo-tree-id7 . -16) (undo-tree-id8 . 6) (undo-tree-id9 . 6) (undo-tree-id10 . 6) 621) nil (23707 61541 966396 199000) 0 nil]) ((#("j" 0 1 (fontified t face font-lock-variable-name-face)) . -255) (undo-tree-id11 . -1) 256 (255 . 256) (235 . 255) (#("OpenS" 0 5 (fontified t face font-lock-variable-name-face)) . -235) (undo-tree-id12 . -5) (undo-tree-id13 . -5) 240 (235 . 240) (#("EducationSection" 0 16 (fontified t face font-lock-variable-name-face)) . 235) (undo-tree-id14 . -1) 236) nil (23707 61541 966428 899000) 0 nil]) ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id15 . 1) (undo-tree-id16 . -1) (undo-tree-id17 . -1)) nil (23707 61541 966444 823000) 0 nil]) ((1 . 626) (t . -1)) nil (23707 61541 966450 982000) 0 nil]) nil nil (23707 61541 966454 4000) 0 nil] #1# 8331 59 nil)