"34fa31bc345a722ada300f81ebc4f0a9d19e24fc"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((52 . 53) (#(")" 0 1 (fontified t)) . -41) (undo-tree-id244 . -1) (41 . 42) (#(")" 0 1 (fontified t)) . -31) (31 . 32) (#(")" 0 1 (fontified t)) . -18) (18 . 19) (#(")" 0 1 (fontified t)) . -4) (3 . 5) (#("(" 0 1 (fontified nil)) . -3) (3 . 4) (t 23728 64052 521014 987000)) ((#("(" 0 1 (fontified nil)) . 3) (undo-tree-id245 . 1) (3 . 4) (#("()" 0 1 (fontified t) 1 2 (fontified nil)) . 3) (undo-tree-id246 . 2) (undo-tree-id247 . 2) (undo-tree-id248 . 2) (undo-tree-id249 . 2) (undo-tree-id250 . 2) (undo-tree-id251 . 2) (undo-tree-id252 . 2) (undo-tree-id253 . 2) (undo-tree-id254 . 2) (undo-tree-id255 . 2) (undo-tree-id256 . 2) (undo-tree-id257 . 2) (undo-tree-id258 . 2) (undo-tree-id259 . 2) (undo-tree-id260 . 2) (undo-tree-id261 . 2) (undo-tree-id262 . 2) (undo-tree-id263 . 2) (undo-tree-id264 . 2) (undo-tree-id265 . 2) (undo-tree-id266 . 2) (undo-tree-id267 . 2) (undo-tree-id268 . 2) (undo-tree-id269 . 2) (undo-tree-id270 . 2) (undo-tree-id271 . -1) (4 . 5) (#(")" 0 1 (fontified nil)) . 18) (18 . 19) (#(")" 0 1 (fontified nil)) . 31) (31 . 32) (#(")" 0 1 (fontified nil)) . 41) (41 . 42) (#(")" 0 1 (fontified t)) . 52) (undo-tree-id272 . 1) (undo-tree-id273 . -1) (t 23728 64151 430134 298000)) (23728 64151 410523 613000) 0 nil]) ((#("â—Š(require racket/string)
" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 20 (fontified t) 20 21 (fontified t) 21 22 (fontified t) 22 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t)) . 1) (undo-tree-id240 . -23) (undo-tree-id241 . -23) 24 (t 23728 64033 467857 243000)) ((1 . 26)) (23728 64182 639016 424000) 0 nil]) ((70 . 75) (#("0" 0 1 (fontified t)) . -70) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id201 . -1) 71 (70 . 71) (67 . 70) (#("ol" 0 1 (fontified t) 1 2 (fontified t)) . 67) (undo-tree-id204 . 2) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -2)) ((67 . 69) (#("nav" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 67) (undo-tree-id274 . 3) (undo-tree-id275 . -3) (#("0" 0 1 (fontified nil)) . 70) (70 . 71) (#("-list" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 70)) (23728 64381 259595 577000) 0 nil]) ((57 . 64) (#("n" 0 1 (fontified t)) . -57) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (undo-tree-id216 . -1) (undo-tree-id218 . -1) (undo-tree-id220 . -1) (undo-tree-id222 . 1) (#("a" 0 1 (fontified t)) . -58) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id227 . -1) (undo-tree-id229 . -1) (undo-tree-id231 . -1) (#("v" 0 1 (fontified t)) . -59) (undo-tree-id232 . -1) (undo-tree-id233 . -1) 60 (57 . 60) (#("ul" 0 1 (fontified t) 1 2 (fontified t)) . 57) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -2) 58 (t 23728 63993 181568 866000)) ((57 . 59) (#("nav" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 57) (57 . 60) (#("NavList" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t)) . 57) (undo-tree-id276 . 7) (undo-tree-id277 . -7)) (23728 64381 636758 181000) 0 nil]) ((#(" " 0 1 (fontified t)) . 65) (undo-tree-id164 . 1) (undo-tree-id166 . -1) (undo-tree-id168 . 1)) ((65 . 66)) (23728 64381 996270 678000) 0 nil]) ((62 . 64) (61 . 63) (#("\"" 0 1 (fontified nil syntax-table #1=(1))) . -61) (undo-tree-id170 . -1) (60 . 62)) ((#(" \"" 0 1 (fontified t) 1 2 (fontified nil syntax-table #1#)) . 60) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . 1) (undo-tree-id308 . -1) (undo-tree-id309 . 1) (undo-tree-id310 . -1) (undo-tree-id311 . 1) (undo-tree-id312 . -1) (61 . 62) (#("\"\"" 0 1 (fontified t syntax-table #1#) 1 2 (fontified nil syntax-table #1#)) . 61) (undo-tree-id313 . 1) (undo-tree-id314 . -1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . 1) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -1) (undo-tree-id332 . -2) (undo-tree-id333 . -1) (undo-tree-id334 . -2) (undo-tree-id335 . -1) (undo-tree-id336 . -2) (undo-tree-id337 . -1) (undo-tree-id338 . -2) (undo-tree-id339 . -1) (undo-tree-id340 . -2) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -2) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . 2) (undo-tree-id347 . -1) (undo-tree-id348 . 1) (undo-tree-id349 . -1) (undo-tree-id350 . 1) (undo-tree-id351 . -2) (#("ol" 0 1 (fontified t) 1 2 (fontified t)) . 62) (undo-tree-id352 . 2) (undo-tree-id353 . 2) (undo-tree-id354 . 2) (undo-tree-id355 . -1) (undo-tree-id356 . 2) (undo-tree-id357 . 2) (undo-tree-id358 . 2) (undo-tree-id359 . 2) (undo-tree-id360 . 2) (undo-tree-id361 . 2) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (undo-tree-id365 . -2) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -1) (undo-tree-id369 . -2) (undo-tree-id370 . -1) (undo-tree-id371 . 2) (undo-tree-id372 . -2)) (23728 64382 382064 136000) 0 nil]) ((#("\"\"" 0 1 (fontified t syntax-table #1#) 1 2 (fontified t syntax-table #1#)) . 59) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id174 . -2) (undo-tree-id176 . 1) (undo-tree-id178 . -1) (undo-tree-id180 . -1) (undo-tree-id182 . -2) 60 (59 . 61) (#("\"" 0 1 (fontified nil syntax-table #1#)) . -59) (59 . 60) (#(" " 0 1 (fontified nil)) . -59) (59 . 60) (#("\"" 0 1 (fontified nil syntax-table #1#)) . -59) (undo-tree-id186 . -1) (57 . 60) (#("u" 0 1 (fontified t)) . -57) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id190 . 1) 58 (57 . 58) (56 . 58) (#("\"" 0 1 (fontified nil syntax-table #1#)) . -56) (undo-tree-id192 . -1) (55 . 57)) ((#(" \"" 0 1 (fontified t) 1 2 (fontified nil syntax-table #1#)) . 55) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . 1) (undo-tree-id427 . -1) (undo-tree-id428 . 1) (undo-tree-id429 . -1) (undo-tree-id430 . 1) (undo-tree-id431 . -1) (56 . 57) (#("\"\"" 0 1 (fontified t syntax-table #1#) 1 2 (fontified nil syntax-table #1#)) . 56) (undo-tree-id432 . -2) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -2) (undo-tree-id436 . -2) (undo-tree-id437 . -2) (undo-tree-id438 . -2) (undo-tree-id439 . -2) (undo-tree-id440 . -2) (undo-tree-id441 . 1) (undo-tree-id442 . -1) (undo-tree-id443 . 1) (undo-tree-id444 . -1) (undo-tree-id445 . 1) (undo-tree-id446 . 1) (undo-tree-id447 . -1) (undo-tree-id448 . 1) (undo-tree-id449 . 1) (undo-tree-id450 . -2) (undo-tree-id451 . 1) (undo-tree-id452 . -2) (undo-tree-id453 . 1) (undo-tree-id454 . 1) (undo-tree-id455 . -2) (undo-tree-id456 . 1) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (undo-tree-id470 . -2) (undo-tree-id471 . -2) (undo-tree-id472 . -2) (undo-tree-id473 . -2) (undo-tree-id474 . -2) (undo-tree-id475 . -2) (undo-tree-id476 . -2) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -1) (undo-tree-id480 . -2) (undo-tree-id481 . -1) (undo-tree-id482 . -2) (undo-tree-id483 . -1) (undo-tree-id484 . -2) (undo-tree-id485 . -1) (undo-tree-id486 . -2) (undo-tree-id487 . -1) (undo-tree-id488 . -2) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -2) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . 2) (undo-tree-id495 . -1) (undo-tree-id496 . 1) (undo-tree-id497 . -1) (undo-tree-id498 . 1) (undo-tree-id499 . -2) (#("u" 0 1 (fontified nil)) . 57) (undo-tree-id500 . 1) (57 . 58) (#("ul\"" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified nil syntax-table #1#)) . 57) (undo-tree-id501 . 2) (undo-tree-id502 . -1) (undo-tree-id503 . 2) (undo-tree-id504 . -1) (undo-tree-id505 . 2) (undo-tree-id506 . 2) (undo-tree-id507 . 2) (undo-tree-id508 . 2) (undo-tree-id509 . 2) (undo-tree-id510 . 2) (undo-tree-id511 . 2) (undo-tree-id512 . 2) (undo-tree-id513 . 3) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -1) (undo-tree-id521 . -2) (undo-tree-id522 . -1) (undo-tree-id523 . 3) (undo-tree-id524 . -2) (59 . 60) (#(" " 0 1 (fontified nil)) . 59) (59 . 60) (#("\"" 0 1 (fontified nil syntax-table #1#)) . 59) (59 . 60) (#("\"\"" 0 1 (fontified nil syntax-table #1#) 1 2 (fontified nil syntax-table #1#)) . 59) (59 . 61)) (23728 64382 702781 918000) 0 nil]) ((18 . 24) (17 . 18) (3 . 17) (2 . 4) (#("(" 0 1 (fontified nil)) . -2) (undo-tree-id194 . -1) (2 . 3) (1 . 2) (1 . 2) 30) ((#("
" 0 1 (fontified nil)) . 1) (undo-tree-id525 . 1) (undo-tree-id526 . 1) (undo-tree-id527 . 1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (#("â—Š" 0 1 (fontified t)) . 1) (#("(" 0 1 (fontified nil)) . 2) (2 . 3) (#("()" 0 1 (fontified t) 1 2 (fontified nil)) . 2) (undo-tree-id532 . 1) (undo-tree-id533 . 1) (undo-tree-id534 . 1) (#("require racket" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t)) . 3) (#("/" 0 1 (fontified t)) . 17) (#("string" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 18)) (23728 64382 999419 773000) 0 nil]) ((30 . 31)) ((#(" " 0 1 (fontified t)) . 30) (undo-tree-id535 . 1) (undo-tree-id536 . 1) (undo-tree-id537 . 1) (undo-tree-id538 . 1) (undo-tree-id539 . 1) (undo-tree-id540 . 1) (undo-tree-id541 . 1) (undo-tree-id542 . 1) (undo-tree-id543 . 1) (undo-tree-id544 . 1) (undo-tree-id545 . 1) (undo-tree-id546 . 1) (undo-tree-id547 . 1) (undo-tree-id548 . 1) (undo-tree-id549 . 1) (undo-tree-id550 . 1) (undo-tree-id551 . 1) (undo-tree-id552 . 1) (undo-tree-id553 . 1) (undo-tree-id554 . 1) (undo-tree-id555 . 1) (undo-tree-id556 . 1) (undo-tree-id557 . 1) (undo-tree-id558 . -1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . 1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . 1) (undo-tree-id565 . 1) (undo-tree-id566 . 1) (undo-tree-id567 . 1) (undo-tree-id568 . 1) (undo-tree-id569 . -1) (undo-tree-id570 . 1) (undo-tree-id571 . 1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . 1) (undo-tree-id575 . 1) (undo-tree-id576 . 1) (undo-tree-id577 . 1) (undo-tree-id578 . 1) (undo-tree-id579 . 1) (undo-tree-id580 . 1) (undo-tree-id581 . 1) (undo-tree-id582 . 1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1)) (23728 64383 334049 765000) 0 nil]) ((12 . 18) (9 . 12) (#(" " 0 1 (fontified t)) . -9) (undo-tree-id195 . -1) (undo-tree-id196 . -1) 10 (3 . 10)) ((#("string " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified nil)) . 3) (undo-tree-id590 . -6) (undo-tree-id591 . -6) (undo-tree-id592 . -6) (undo-tree-id593 . -6) (undo-tree-id594 . -6) (undo-tree-id595 . -6) (undo-tree-id596 . -6) (undo-tree-id597 . 7) (9 . 10) (#("-re" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t)) . 9) (undo-tree-id598 . -3) (undo-tree-id599 . -3) (undo-tree-id600 . -3) (undo-tree-id601 . -3) (undo-tree-id602 . -3) (undo-tree-id603 . -3) (undo-tree-id604 . -3) (#("place " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 12) (undo-tree-id605 . -6) (undo-tree-id606 . -6) (undo-tree-id607 . -6) (undo-tree-id608 . -6) (undo-tree-id609 . -6) (undo-tree-id610 . -6) (undo-tree-id611 . -6)) (23728 64384 604221 46000) 0 nil]) ((5 . 6) (#("x" 0 1 (fontified t)) . 5)) ((5 . 6) (#(">" 0 1 (fontified t)) . 5)) (23728 64384 895477 992000) 0 nil]) ((#(" " 0 1 (fontified t)) . 5)) ((5 . 6)) (23728 64386 402028 408000) 0 nil]) ((15 . 16) (#(")" 0 1 (fontified t)) . -11) (11 . 12) (5 . 6) (#(")" 0 1 (fontified t)) . -5)) ((5 . 6) (#(" " 0 1 (fontified t)) . 5) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . 1) (undo-tree-id617 . 1) (undo-tree-id618 . 1) (undo-tree-id619 . 1) (undo-tree-id620 . 1) (undo-tree-id621 . 1) (#(")" 0 1 (fontified nil)) . 11) (11 . 12) (#(")" 0 1 (fontified t)) . 15) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1)) (23728 64386 776896 687000) 0 nil]) ((6 . 7) (#(">" 0 1 (fontified t)) . 6)) ((6 . 7) (#("x" 0 1 (fontified t)) . 6) (undo-tree-id700 . 1) (undo-tree-id701 . 1) (undo-tree-id702 . 1) (undo-tree-id703 . 1) (undo-tree-id704 . 1) (undo-tree-id705 . 1) (undo-tree-id706 . 1) (undo-tree-id707 . 1) (undo-tree-id708 . 1) (undo-tree-id709 . 1) (undo-tree-id710 . 1) (undo-tree-id711 . 1) (undo-tree-id712 . 1) (undo-tree-id713 . 1) (undo-tree-id714 . 1) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . 1) (undo-tree-id718 . 1) (undo-tree-id719 . 1) (undo-tree-id720 . 1)) (23728 64387 163481 453000) 0 nil]) ((5 . 6) (#(")" 0 1 (fontified t)) . -4) (undo-tree-id197 . 1)) ((4 . 5) (#(")" 0 1 (fontified t)) . 5) (undo-tree-id721 . 1) (undo-tree-id722 . -1) (undo-tree-id723 . 1) (undo-tree-id724 . -1) (undo-tree-id725 . 1) (undo-tree-id726 . 1) (undo-tree-id727 . 1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1)) (23728 64387 493608 515000) 0 nil]) ((3 . 5) (#("(" 0 1 (fontified nil)) . -3) (3 . 4) (t 23728 63860 42692 963000)) ((#("(" 0 1 (fontified nil)) . 3) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . 1) (3 . 4) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 3) (undo-tree-id742 . 1) (undo-tree-id743 . 2) (undo-tree-id744 . 2) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . 2) (undo-tree-id749 . 2) (undo-tree-id750 . 2) (undo-tree-id751 . 2) (undo-tree-id752 . 2) (undo-tree-id753 . 2) (undo-tree-id754 . 2) (undo-tree-id755 . 2) (undo-tree-id756 . 2) (undo-tree-id757 . 2) (undo-tree-id758 . -1) (undo-tree-id759 . -2) (undo-tree-id760 . -2) (undo-tree-id761 . -2) (undo-tree-id762 . -2) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -2) (undo-tree-id766 . -1) (undo-tree-id767 . -2) (undo-tree-id768 . -1) (undo-tree-id769 . -2) (undo-tree-id770 . -1) (undo-tree-id771 . -2) (undo-tree-id772 . -1) (undo-tree-id773 . -2) (undo-tree-id774 . -1) (undo-tree-id775 . -2) (undo-tree-id776 . -1) (undo-tree-id777 . 2) (undo-tree-id778 . -1) (undo-tree-id779 . 1) (undo-tree-id780 . -1) (undo-tree-id781 . 1) (undo-tree-id782 . -2)) (23728 64387 949405 638000) 0 nil]) ((5 . 13)) nil (23728 64388 274719 968000) 0 nil]) ((4 . 5) (#("d" 0 1 (fontified t)) . 4)) nil (23728 63860 32320 13000) 0 nil]) ((4 . 5) (#(">" 0 1 (fontified nil)) . -4) (4 . 5) (#(" " 0 1 (fontified nil)) . -4) (4 . 5) (#(">" 0 1 (fontified nil)) . -4) (3 . 5) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 3) (undo-tree-id155 . -1) (undo-tree-id156 . -1) 4 (3 . 5) (#("(" 0 1 (fontified nil)) . -3) (3 . 4) (#("string-append \"\" \"Hello, world?\"" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face font-lock-string-face) 21 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 24 (fontified t face font-lock-string-face) 24 25 (fontified t face font-lock-string-face) 25 26 (fontified t face font-lock-string-face) 26 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 29 (fontified t face font-lock-string-face) 29 30 (fontified t face font-lock-string-face) 30 31 (fontified t face font-lock-string-face) 31 32 (fontified t face font-lock-string-face)) . 3) (undo-tree-id157 . 1) (undo-tree-id158 . 1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . -31) (t 23728 63784 626483 585000)) nil (23728 63860 32370 623000) 0 nil] [nil nil ((#("j" 0 1 (fontified t face font-lock-string-face)) . -34) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . 1) 35 (34 . 35) (t 23728 63784 626483 585000)) ((#("j" 0 1 (fontified nil face font-lock-string-face)) . 34) (undo-tree-id154 . 1) (34 . 35)) (23728 63822 575915 326000) 0 nil]) (nil undo-tree-canary) nil (23728 63822 577135 270000) 0 nil]) ((33 . 34)) nil (23728 63784 607475 73000) 0 nil]) ((#(">" 0 1 (fontified t face font-lock-string-face)) . -33) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . 1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . 1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 34) nil (23728 63784 607557 76000) 0 nil]) ((33 . 34) (#(" " 0 1 (fontified nil)) . -33) (undo-tree-id111 . -1) (33 . 34) (#(">" 0 1 (fontified nil face font-lock-string-face)) . -33) (31 . 34)) nil (23728 63784 607576 381000) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-string-face)) . -31) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . 1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -32) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . 1) 33) nil (23728 63784 607611 477000) 0 nil]) ((30 . 33)) nil (23728 63784 607619 506000) 0 nil]) ((24 . 30)) nil (23728 63784 607623 477000) 0 nil]) ((21 . 24) (20 . 22) (#("\"" 0 1 (fontified nil)) . -20) (19 . 21) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 19) (18 . 19) (17 . 19) (#("\"" 0 1 (fontified nil)) . -17) (3 . 18)) nil (23728 63784 607709 712000) 0 nil]) ((#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 3) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 4) nil (23728 63784 607726 490000) 0 nil]) ((3 . 5) (#("\"" 0 1 (fontified nil)) . -3) (3 . 4)) nil (23728 63784 607733 652000) 0 nil]) ((#("string-replace (->html doc #:splice? #t) \"ul\" \"ol\"" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t) 11 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 22 (fontified t) 22 23 (fontified t) 23 26 (fontified t) 26 27 (fontified t) 27 36 (fontified t) 36 37 (fontified t) 37 39 (fontified t) 39 40 (fontified t) 40 41 (fontified t) 41 42 (fontified t syntax-table #1#) 42 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t syntax-table #1#) 45 46 (fontified t) 46 47 (fontified t syntax-table #1#) 47 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t syntax-table #1#)) . 3) (undo-tree-id123 . 30) (undo-tree-id124 . 30) (undo-tree-id125 . -49) (undo-tree-id126 . 1) (undo-tree-id127 . -20) (undo-tree-id128 . -49) (undo-tree-id129 . 1) (undo-tree-id130 . 1) (undo-tree-id131 . -49) (undo-tree-id132 . -49) (undo-tree-id133 . -49) (undo-tree-id134 . 3) (undo-tree-id135 . -49) (undo-tree-id136 . 8) (undo-tree-id137 . -44) (undo-tree-id138 . 24) (undo-tree-id139 . 24) (undo-tree-id140 . 24) (undo-tree-id141 . 24) (undo-tree-id142 . 24) (undo-tree-id143 . 24) (undo-tree-id144 . 24) (undo-tree-id145 . 24) (undo-tree-id146 . -26) (undo-tree-id147 . 32) (undo-tree-id148 . -22) (undo-tree-id149 . 50) (undo-tree-id150 . 49) (t 23728 63689 383731 607000)) nil (23728 63784 607847 994000) 0 nil]) ((#("r" 0 1 (fontified t)) . 50) (undo-tree-id75 . 1) (undo-tree-id76 . 1) (undo-tree-id77 . 1) (undo-tree-id78 . -1) (undo-tree-id79 . 1)) nil (23728 63689 230965 572000) 0 nil]) ((nil fontified t 50 . 51) (50 . 51) (#("<" 0 1 (fontified t)) . 50) (undo-tree-id80 . 1) (undo-tree-id81 . 1) (undo-tree-id82 . -1)) nil (23728 63689 231011 493000) 0 nil]) ((#("x" 0 1 (fontified t)) . 45) (undo-tree-id83 . 1) (undo-tree-id84 . 1) (undo-tree-id85 . 1) (undo-tree-id86 . -1) (undo-tree-id87 . 1)) nil (23728 63689 231031 965000) 0 nil]) ((nil fontified t 45 . 46) (45 . 46) (#("<" 0 1 (fontified t)) . 45) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1) (undo-tree-id91 . 1) (undo-tree-id92 . 1) (undo-tree-id93 . -1) (t 23728 63452 501868 628000)) nil (23728 63689 231056 499000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-function-name-face)) . 54) (undo-tree-id51 . 1) (undo-tree-id52 . 1) (undo-tree-id53 . -1)) nil (23728 63452 488253 88000) 0 nil]) ((54 . 55) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 54) (undo-tree-id54 . -1) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . 1) (undo-tree-id59 . -1) (undo-tree-id60 . -1)) nil (23728 63452 488285 549000) 0 nil]) ((54 . 56) (#("\"" 0 1 (fontified nil face font-lock-function-name-face)) . -54) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (54 . 55) (#("'" 0 1 (fontified t)) . -54) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . 1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) 55 (54 . 55) (t 23728 63398 945540 596000)) nil (23728 63452 488329 593000) 0 nil]) ((#("x" 0 1 (fontified t face font-lock-function-name-face)) . 54) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . -1)) nil (23728 63398 928762 115000) 0 nil]) ((54 . 55) (#(">" 0 1 (fontified t)) . 54) (undo-tree-id44 . 1)) nil (23728 63398 928778 615000) 0 nil]) ((52 . 54) (51 . 53) (#("<" 0 1 (fontified nil face font-lock-string-face)) . -51) (49 . 52)) nil (23728 63398 928788 681000) 0 nil]) ((#("r" 0 1 (fontified t face font-lock-function-name-face)) . 48)) nil (23728 63398 928794 869000) 0 nil]) ((48 . 49) (#(">" 0 1 (fontified t)) . 48) (undo-tree-id45 . 1)) nil (23728 63398 928803 959000) 0 nil]) ((46 . 48) (46 . 47) (nil fontified t 45 . 46) (45 . 46) (#("<" 0 1 (fontified nil)) . -45) (45 . 46) (44 . 46) (#("\"" 0 1 (fontified nil syntax-table #1#)) . -44) (44 . 45) (#("''" 0 1 (fontified t) 1 2 (fontified t)) . 44) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 45 (44 . 46) (#("'" 0 1 (fontified nil)) . -44) (43 . 45)) nil (23728 63398 928850 610000) 0 nil]) ((42 . 43) (#(")" 0 1 (fontified t)) . -39) (39 . 40) (#(")" 0 1 (fontified t)) . -29) (29 . 30) (#(")" 0 1 (fontified t)) . -25) (25 . 26) (#(")" 0 1 (fontified t)) . -21)) nil (23728 63398 928866 446000) 0 nil]) ((21 . 22) (#("0" 0 1 (fontified t)) . 21) (21 . 22) (#("r" 0 1 (fontified t)) . 21)) nil (23728 63398 928877 77000) 0 nil]) ((21 . 22)) nil (23728 63398 928882 643000) 0 nil]) ((#("x" 0 1 (fontified t)) . 20)) nil (23728 63398 928886 515000) 0 nil]) ((20 . 21) (#(")" 0 1 (fontified t)) . 20) (undo-tree-id48 . 1)) nil (23728 63398 928894 736000) 0 nil]) ((#(">" 0 1 (fontified nil)) . -20) (20 . 21) (#(" " 0 1 (fontified nil)) . -20) (20 . 21) (#(">" 0 1 (fontified nil)) . -20) (20 . 21) (#("i" 0 1 (fontified t)) . -20) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 21 (20 . 21) (#(">" 0 1 (fontified nil)) . -20) (20 . 21) (#(" " 0 1 (fontified nil)) . -20) (20 . 21) (#(">" 0 1 (fontified nil)) . -20) (20 . 21)) nil (23728 63398 928920 189000) 0 nil]) ((20 . 21) (#(")" 0 1 (fontified t)) . -19) (18 . 20) (#("(" 0 1 (fontified nil)) . -18) (18 . 19)) nil (23728 63398 928933 607000) 0 nil]) ((#("r" 0 1 (fontified t)) . 3)) nil (23728 63398 928939 829000) 0 nil]) ((3 . 4) (#("(" 0 1 (fontified t)) . 3)) nil (23728 63398 928945 171000) 0 nil]) ((#("r" 0 1 (fontified t)) . 20)) nil (23728 63398 928950 327000) 0 nil]) ((20 . 21) (#(")" 0 1 (fontified t)) . 20)) nil (23728 63398 928955 956000) 0 nil] [nil ([nil ([nil ([nil nil ((43 . 44) (#("r" 0 1 (fontified t)) . 43) (undo-tree-id24 . 1) (undo-tree-id25 . 1) (undo-tree-id26 . 1)) ((43 . 44) (#(")" 0 1 (fontified t)) . 43) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . -1)) (23728 63305 272237 241000) 0 nil]) ((43 . 44)) ((#("r" 0 1 (fontified t)) . 43) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (undo-tree-id37 . 1)) (23728 63305 272590 750000) 0 nil]) ((#("r" 0 1 (fontified t)) . 20) (undo-tree-id27 . 1) (undo-tree-id28 . 1)) ((20 . 21)) (23728 63305 677809 614000) 0 nil]) ((20 . 21) (#(")" 0 1 (fontified t)) . 20)) ((20 . 21) (#("r" 0 1 (fontified t)) . 20) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1)) (23728 63306 8454 258000) 0 nil]) ((20 . 21) (#(")" 0 1 (fontified nil)) . 19) (13 . 19) (#("lac" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 13) (4 . 16) (3 . 5) (#("(" 0 1 (fontified nil)) . 3) (3 . 4) (t 23724 65301 396119 85000)) ((#("(" 0 1 (fontified nil)) . 3) (undo-tree-id7 . 1) (3 . 4) (#("()" 0 1 (fontified t) 1 2 (fontified nil)) . 3) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . 1) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . -1) (undo-tree-id14 . 2) (undo-tree-id15 . -1) (undo-tree-id16 . 1) (#("string-re" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t)) . 4) (undo-tree-id17 . 9) (#("lac" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil)) . 13) (13 . 16) (#("place " 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 13) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (19 . 20) (#(")" 0 1 (fontified t)) . 20) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . -1)) (23728 63306 829053 271000) 0 nil]) nil nil (23728 63293 408024 587000) 0 nil] #2# 8802 60 nil)