"47910b1367cd42d846ce538faba0a8018db1271f"
#s(undo-tree [nil (#1=[nil nil ((9 . 13) (#("k" 0 1 (fontified t face font-lock-variable-name-face)) . -9) (undo-tree-id282 . 1) (undo-tree-id283 . -1) (undo-tree-id284 . 1) (undo-tree-id285 . -1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (#("e" 0 1 (fontified nil face font-lock-variable-name-face)) . -10) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -11) (undo-tree-id302 . 1) (undo-tree-id303 . -1) (undo-tree-id304 . 1) (undo-tree-id305 . -1) (undo-tree-id306 . 1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) 12 (7 . 12) (#("pollen" 0 6 (fontified t face font-lock-variable-name-face)) . 7) (undo-tree-id311 . -6) (undo-tree-id312 . -6) (undo-tree-id313 . -6) (undo-tree-id314 . -6) (undo-tree-id315 . -6) (undo-tree-id316 . -6) (undo-tree-id317 . -6) (undo-tree-id318 . -6) (undo-tree-id319 . -6) (undo-tree-id320 . -6) (undo-tree-id321 . -6) (undo-tree-id322 . -6) (undo-tree-id323 . -6) (undo-tree-id324 . -6) (undo-tree-id325 . 6) (undo-tree-id326 . 6) (undo-tree-id327 . 6) (undo-tree-id328 . 6) (undo-tree-id329 . 6) (undo-tree-id330 . 5) (undo-tree-id331 . 6) (undo-tree-id332 . -1) (undo-tree-id333 . 5) (undo-tree-id334 . 6) (undo-tree-id335 . -1) (undo-tree-id336 . 5) (undo-tree-id337 . 6) (undo-tree-id338 . 5) (undo-tree-id339 . 6) (undo-tree-id340 . 5) (undo-tree-id341 . 6) (undo-tree-id342 . 6) (undo-tree-id343 . 5) (undo-tree-id344 . 6) (undo-tree-id345 . 5) (undo-tree-id346 . 6) (undo-tree-id347 . 5) (undo-tree-id348 . 6) (undo-tree-id349 . 5) (undo-tree-id350 . 6) (undo-tree-id351 . 5)) nil (23725 1598 901451 849000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("#lang pollen
" 0 5 (fontified t face font-lock-keyword-face) 5 6 (fontified t) 6 12 (fontified t face font-lock-variable-name-face) 12 13 (fontified t rear-nonsticky t)) . 1) (undo-tree-id1 . -13) (undo-tree-id2 . -13) (undo-tree-id3 . -13) (undo-tree-id4 . 13) (undo-tree-id5 . 13) (undo-tree-id6 . 13) (undo-tree-id7 . 13) (undo-tree-id8 . 13) (undo-tree-id9 . 13) (undo-tree-id10 . 13) (undo-tree-id11 . 13) (undo-tree-id12 . 13) (undo-tree-id13 . 13) (undo-tree-id14 . 13) (undo-tree-id15 . 13) (undo-tree-id16 . 13) (undo-tree-id17 . 13) (undo-tree-id18 . 13) (undo-tree-id19 . 13) (undo-tree-id20 . 13) (undo-tree-id21 . 13) (undo-tree-id22 . 13) (undo-tree-id23 . 13) (undo-tree-id24 . 13) (undo-tree-id25 . 13) (undo-tree-id26 . 13) (undo-tree-id27 . 13) (undo-tree-id28 . 13) (undo-tree-id29 . 13) (undo-tree-id30 . 13) (undo-tree-id31 . 13) (undo-tree-id32 . 13) (undo-tree-id33 . 13) (undo-tree-id34 . 13) (undo-tree-id35 . 13) (undo-tree-id36 . 13) (undo-tree-id37 . 13) (undo-tree-id38 . 13) (undo-tree-id39 . 13) (undo-tree-id40 . 13) (undo-tree-id41 . 13) (undo-tree-id42 . 13) (undo-tree-id43 . 13) (undo-tree-id44 . 13) (undo-tree-id45 . 13) (undo-tree-id46 . 13) (undo-tree-id47 . 13) (undo-tree-id48 . 13) (undo-tree-id49 . 13) (undo-tree-id50 . 13) (undo-tree-id51 . 13) (undo-tree-id52 . 13) (undo-tree-id53 . 13) (undo-tree-id54 . 13) (undo-tree-id55 . 13) (undo-tree-id56 . 13) (undo-tree-id57 . 13) (undo-tree-id58 . 13) (undo-tree-id59 . 13) (undo-tree-id60 . 13) (undo-tree-id61 . 13) (undo-tree-id62 . 13) (undo-tree-id63 . 13) (undo-tree-id64 . 13) (undo-tree-id65 . 13) (undo-tree-id66 . 13) (undo-tree-id67 . 13) (undo-tree-id68 . 13)) ((1 . 14)) (23725 1402 965183 665000) 0 nil]) ((#("   (define-meta test \"Hello, world!\")
" 0 3 (fontified t) 3 4 (fontified t) 4 16 (fontified t) 16 20 (fontified t face font-lock-variable-name-face) 20 21 (fontified t) 21 35 (fontified t face font-lock-string-face) 35 36 (fontified t face font-lock-string-face) 36 37 (fontified t) 37 38 (fontified t)) . 66) (undo-tree-id69 . 3) (undo-tree-id70 . -38) (undo-tree-id71 . -38) (undo-tree-id72 . -38) (undo-tree-id73 . -38) (undo-tree-id74 . 4) (undo-tree-id75 . 14) (undo-tree-id76 . -24) 90) ((66 . 104)) (23725 1402 965896 339000) 0 nil]) ((88 . 101) (87 . 89) (#("\"" 0 1 (fontified nil)) . -87) (84 . 88) (#("x" 0 1 (fontified t face font-lock-variable-name-face)) . -84) (undo-tree-id77 . -1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -85) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -86) (undo-tree-id79 . -1) 87 (82 . 87)) ((#("text " 0 2 (fontified nil face font-lock-variable-name-face) 2 3 (fontified nil face font-lock-variable-name-face) 3 4 (fontified nil face font-lock-variable-name-face) 4 5 (fontified nil)) . 82) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -5) (84 . 87) (#("st \"" 0 2 (fontified nil face font-lock-variable-name-face) 2 3 (fontified nil) 3 4 (fontified nil)) . 84) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (87 . 88) (#("\"\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 87) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (undo-tree-id107 . 1) (undo-tree-id108 . 1) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (undo-tree-id112 . 1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . 1) (undo-tree-id116 . 1) (#("Hello, world!" 0 13 (fontified t face font-lock-string-face)) . 88) (undo-tree-id117 . 1) (undo-tree-id118 . 11) (undo-tree-id119 . 11) (undo-tree-id120 . -2) (undo-tree-id121 . 11) (undo-tree-id122 . -2) (undo-tree-id123 . 11) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . 11) (undo-tree-id127 . 11)) (23725 1573 593641 868000) 0 nil]) ((70 . 82) (#("s" 0 1 (fontified t)) . -70) (undo-tree-id80 . -1) (#("e" 0 1 (fontified t)) . -71) (undo-tree-id81 . -1) (#("t" 0 1 (fontified t face font-lock-builtin-face)) . -72) (undo-tree-id82 . -1) (#("-" 0 1 (fontified t)) . -73) (undo-tree-id83 . -1) (#("m" 0 1 (fontified t)) . -74) (undo-tree-id84 . -1) (#("e" 0 1 (fontified t)) . -75) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t)) . -76) (undo-tree-id86 . -1) (#("a" 0 1 (fontified t)) . -77) (undo-tree-id87 . -1) 78 (73 . 78) (70 . 73) (69 . 71) (#("(" 0 1 (fontified nil)) . -69) (69 . 70) (65 . 69) 48) ((#("
   " 0 1 (fontified t) 1 4 (fontified nil)) . 65) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (#("(" 0 1 (fontified nil)) . 69) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (69 . 70) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 69) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . -1) (undo-tree-id149 . 1) (undo-tree-id150 . -1) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . 1) (undo-tree-id154 . 1) (undo-tree-id155 . 1) (undo-tree-id156 . -1) (undo-tree-id157 . 1) (undo-tree-id158 . 1) (undo-tree-id159 . -1) (undo-tree-id160 . 1) (undo-tree-id161 . 1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . -1) (undo-tree-id169 . 2) (undo-tree-id170 . -1) (undo-tree-id171 . 1) (undo-tree-id172 . -1) (undo-tree-id173 . 1) (undo-tree-id174 . -2) (#("set" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil face font-lock-builtin-face)) . 70) (undo-tree-id175 . -3) (undo-tree-id176 . 3) (#("-meta" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 73) (undo-tree-id177 . -5) (70 . 78) (#("define-meta " 0 12 (fontified t)) . 70) (undo-tree-id178 . -12) (undo-tree-id179 . -12) (undo-tree-id180 . -12) (undo-tree-id181 . -12) (undo-tree-id182 . -12) (undo-tree-id183 . -12) (undo-tree-id184 . 12) (undo-tree-id185 . -12)) (23725 1574 654713 105000) 0 nil]) ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 38)) ((38 . 40)) (23725 1575 150499 803000) 0 nil]) ((#("          " 0 10 (fontified nil)) . -1464) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (1456 . 1464) (#("          " 0 10 (fontified nil)) . -1407) (1399 . 1407) (#("          " 0 10 (fontified nil)) . -1383) (1375 . 1383) (#("          " 0 10 (fontified nil)) . -1361) (1353 . 1361) (#("          " 0 10 (fontified nil)) . -1339) (1331 . 1339) (#("          " 0 10 (fontified nil)) . -1292) (1284 . 1292) (#("    " 0 4 (fontified nil)) . -1278) (undo-tree-id92 . 2) (undo-tree-id93 . 2) (undo-tree-id94 . -2) (1276 . 1278) (#("  " 0 2 (fontified t)) . -1259) (undo-tree-id95 . -2) (undo-tree-id96 . -2) 1472 (t 23725 623 537140 777000)) ((1259 . 1261) (#("  " 0 2 (fontified nil)) . 1276) (1278 . 1282) (#("        " 0 8 (fontified nil)) . 1284) (1292 . 1302) (#("        " 0 8 (fontified nil)) . 1331) (1339 . 1349) (#("        " 0 8 (fontified nil)) . 1353) (1361 . 1371) (#("        " 0 8 (fontified nil)) . 1375) (1383 . 1393) (#("        " 0 8 (fontified nil)) . 1399) (1407 . 1417) (#("        " 0 8 (fontified nil)) . 1456) (undo-tree-id186 . -8) (1464 . 1474)) (23725 1576 118357 41000) 0 nil]) ((1261 . 1262)) ((#("◊" 0 1 (fontified t)) . 1261) (t 23725 623 537140 777000)) (23725 1576 474145 642000) 0 nil]) ((1023 . 1024)) ((#("◊" 0 1 (fontified t)) . 1023)) (23725 1577 212787 227000) 0 nil]) ((667 . 668)) ((#("◊" 0 1 (fontified t)) . 667)) (23725 1577 634107 333000) 0 nil]) ((560 . 561)) (("◊" . 560)) (23725 1577 918786 520000) 0 nil]) ((456 . 457)) ((#("◊" 0 1 (fontified t)) . 456)) (23725 1578 249261 413000) 0 nil]) ((273 . 274)) ((#("◊" 0 1 (fontified t)) . 273)) (23725 1578 654725 356000) 0 nil]) ((42 . 43)) ((#("◊" 0 1 (fontified t)) . 42)) (23725 1578 978261 831000) 0 nil]) ((#("@" 0 1 (fontified t)) . 38)) ((38 . 39)) (23725 1579 301325 888000) 0 nil]) ((#(")" 0 1 (fontified t)) . 1490) (#("(" 0 1 (fontified t)) . -38) (undo-tree-id0 . -1) 39) ((38 . 39) (1490 . 1491)) (23725 1579 641902 805000) 0 nil]) ((#("◊" 0 1 (fontified t)) . 38) (t 23725 561 516163 626000)) ((38 . 39)) (23725 1580 626128 989000) 0 nil]) ((14 . 15)) ((#("◊" 0 1 (fontified t)) . 14) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1)) (23725 1581 58119 431000) 0 nil]) ((1494 . 1495)) ((#("◊" 0 1 (fontified t)) . 1494)) (23725 1581 448684 485000) 0 nil]) (1507) (nil undo-tree-canary) (23725 1581 855335 974000) 0 nil]) ((#(" " 0 1 (fontified t)) . 1491) (undo-tree-id23 . 1) (undo-tree-id25 . 1) (t 23725 545 950134 163000)) ((1491 . 1492)) (23725 1582 818110 236000) 0 nil]) ((1492 . 1493) (#("r" 0 1 (fontified t)) . 1492) (undo-tree-id1 . -1) (undo-tree-id3 . -1) (undo-tree-id5 . 1) (undo-tree-id7 . 1) (undo-tree-id9 . 1) (undo-tree-id11 . 1) (undo-tree-id13 . 1) (undo-tree-id15 . 1)) ((1492 . 1493) (#(")" 0 1 (fontified t)) . 1492)) (23725 1583 221136 598000) 0 nil]) ((1492 . 1493)) ((#("r" 0 1 (fontified t)) . 1492) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1)) (23725 1584 266041 476000) 0 nil]) ((nil rear-nonsticky nil 13 . 14) (#("
" 0 1 (fontified nil)) . -36) (13 . 37) 1) ((#("
(require \"Colors.rkt\")
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil) 2 9 (fontified nil face font-lock-keyword-face) 9 10 (fontified nil) 10 22 (fontified nil face font-lock-string-face) 22 23 (fontified nil) 23 24 (fontified nil)) . 13) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -23) (undo-tree-id203 . -23) (undo-tree-id204 . 23) (undo-tree-id205 . 23) (undo-tree-id206 . 23) (undo-tree-id207 . 23) (undo-tree-id208 . 23) (undo-tree-id209 . 23) (undo-tree-id210 . 23) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . 23) (undo-tree-id214 . -1) (undo-tree-id215 . 23) (undo-tree-id216 . -1) (undo-tree-id217 . 23) (undo-tree-id218 . 23) (undo-tree-id219 . 23) (undo-tree-id220 . -10) (undo-tree-id221 . -11) (undo-tree-id222 . 23) (undo-tree-id223 . 23) (undo-tree-id224 . 23) (undo-tree-id225 . 23) (undo-tree-id226 . 23) (36 . 37) (nil rear-nonsticky t 13 . 14)) (23725 1584 568005 592000) 0 nil]) ((#("(require \"Colors.rkt\")
" 0 9 (fontified t) 9 21 (fontified t face font-lock-string-face) 21 23 (fontified t)) . 19) (undo-tree-id17 . -2) (undo-tree-id18 . -2) 21) ((19 . 42)) (23725 1584 938832 978000) 0 nil]) ((16 . 17) (#("◊" 0 1 (fontified t face font-lock-warning-face)) . -16) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 17) ((16 . 17) (#("@" 0 1 (fontified t)) . 16) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1)) (23725 1585 664819 113000) 0 nil]) ((17 . 18) (#(")" 0 1 (fontified t)) . 17) (undo-tree-id21 . 1)) ((17 . 18) (#(" " 0 1 (fontified t)) . 17) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1)) (23725 1585 794787 546000) 0 nil]) ((16 . 17) (15 . 17) (#("(" 0 1 (fontified nil)) . -15) (15 . 16)) ((#("(" 0 1 (fontified nil)) . 15) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (15 . 16) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 15) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . -1) (undo-tree-id246 . 2) (undo-tree-id247 . -1) (undo-tree-id248 . 1) (undo-tree-id249 . -1) (undo-tree-id250 . 1) (undo-tree-id251 . -2) (#("◊" 0 1 (fontified t)) . 16) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . 1) (undo-tree-id256 . -1)) (23725 1586 265464 958000) 0 nil]) ((14 . 15) (13 . 14) (t 23725 440 405002 69000) 1) ((#("
" 0 1 (fontified t)) . 13) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (#("◊" 0 1 (fontified t)) . 14) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . 1)) (23725 1586 871615 603000) 0 nil]) nil nil (23725 1587 241977 615000) 0 nil] #1# 4560 29 nil)