"36d4f739d3d356dde75fab72ab9488d4123ad61e"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((231 . 235) (#("book" 0 4 (fontified t)) . 231)) nil (23728 43360 995630 320000) 0 nil]) ((182 . 186) (#("book" 0 4 (fontified t)) . 182) (undo-tree-id306 . 2) (undo-tree-id307 . 3) (undo-tree-id308 . 2) (undo-tree-id309 . 4) (undo-tree-id310 . 3) (t 23728 41659 235076 498000)) nil (23728 43360 995650 24000) 0 nil]) ((34 . 46) (#("Hichhiker's" 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face)) . -34) (undo-tree-id289 . -8) (undo-tree-id290 . -8) 42) nil (23728 41659 215532 13000) 0 nil]) ((#("Hichiker's" 0 10 (fontified nil face font-lock-string-face)) . 252) (undo-tree-id291 . -10) (undo-tree-id292 . -3) (undo-tree-id293 . 7) (undo-tree-id294 . 7) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -10) (undo-tree-id298 . -10) (undo-tree-id299 . -10) (undo-tree-id300 . -3) (240 . 252)) nil (23728 41659 215578 730000) 0 nil]) ((#("k" 0 1 (fontified t face font-lock-string-face)) . 243) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1)) nil (23728 41659 215596 206000) 0 nil]) ((#(" " 0 1 (fontified t face font-lock-string-face)) . 244) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (t 23728 40900 9503 752000)) nil (23728 41659 215608 600000) 0 nil]) ((275 . 276) 133) nil (23728 40899 888835 293000) 0 nil]) ((#("
" 0 1 (fontified t)) . 133) (undo-tree-id286 . 1)) nil (23728 40899 888862 83000) 0 nil]) ((#("
" 0 1 (fontified t)) . -276) (undo-tree-id287 . -1) (undo-tree-id288 . -1) 277 (t 23728 40874 869652 100000)) nil (23728 40899 888877 598000) 0 nil]) ((241 . 253) (#("Hickhiker's" 0 11 (fontified t face font-lock-string-face)) . -241) (undo-tree-id274 . -4) (undo-tree-id275 . -4) 245) nil (23728 40874 854500 234000) 0 nil]) ((267 . 272) (256 . 267) (#("k" 0 1 (fontified t face font-lock-string-face)) . -256) (undo-tree-id276 . -1) (undo-tree-id277 . -1) 257 (237 . 257) (#("The Name of the " 0 16 (fontified t face font-lock-string-face)) . 237) (undo-tree-id278 . -15) (undo-tree-id279 . -15) 252) nil (23728 40874 854531 662000) 0 nil]) ((#("Wind" 0 4 (fontified t face font-lock-string-face)) . 253) (undo-tree-id280 . -3) (undo-tree-id281 . -3) 256) nil (23728 40874 854547 594000) 0 nil]) ((208 . 209) (#("x" 0 1 (fontified t face font-lock-string-face)) . -208) (undo-tree-id282 . -1) (undo-tree-id283 . -1) 209 (207 . 209)) nil (23728 40874 854562 938000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 207) (undo-tree-id284 . -1) (undo-tree-id285 . -1)) nil (23728 40874 854574 771000) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-string-face)) . 207)) nil (23728 40874 854580 388000) 0 nil] [nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . 207) (undo-tree-id265 . 1)) ((207 . 208)) (23728 40842 239378 49000) 0 nil]) ((59 . 65) (#("Galexy" 0 6 (fontified t face font-lock-string-face)) . -59) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . 5) (undo-tree-id270 . 6) (undo-tree-id271 . -1) (undo-tree-id272 . 5) (undo-tree-id273 . 5) 60) nil (23728 40842 239501 817000) 0 nil] [nil nil ((206 . 212) (#("Cookoo's" 0 8 (fontified t face font-lock-string-face)) . -206) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . 6) (undo-tree-id213 . 5) (undo-tree-id214 . 4) (undo-tree-id215 . 3) (undo-tree-id216 . 2) (undo-tree-id217 . 1) (undo-tree-id218 . 1) (undo-tree-id219 . 2) (undo-tree-id220 . 1) (undo-tree-id221 . 3) (undo-tree-id222 . 2) (undo-tree-id223 . 4) (undo-tree-id224 . 3) 210) ((206 . 214) (#("Cook's" 0 6 (fontified t face font-lock-string-face)) . 206) (undo-tree-id261 . -4) (undo-tree-id262 . -4) (undo-tree-id263 . 2) (undo-tree-id264 . 6)) (23728 40791 314794 200000) 0 nil]) ((208 . 219) (#("o" 0 1 (fontified t face font-lock-string-face)) . -208) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (#("k" 0 1 (fontified t face font-lock-string-face)) . -209) (undo-tree-id227 . -1) (undo-tree-id228 . -1) 210 (209 . 210) (188 . 209) (#("Catch 22" 0 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face) 6 8 (fontified t face font-lock-string-face)) . 188) (undo-tree-id229 . -5) (undo-tree-id230 . -5) (undo-tree-id231 . -5) (undo-tree-id232 . 1) (undo-tree-id233 . 2) (undo-tree-id234 . 1) (undo-tree-id235 . 3) (undo-tree-id236 . 2) (undo-tree-id237 . -5) (undo-tree-id238 . -5) (undo-tree-id239 . 3) (undo-tree-id240 . 3) (undo-tree-id241 . 3) (undo-tree-id242 . 3) (undo-tree-id243 . 3) (undo-tree-id244 . 3) (undo-tree-id245 . 3) (undo-tree-id246 . 3) (undo-tree-id247 . -5) (undo-tree-id248 . 3) (undo-tree-id249 . 3) (undo-tree-id250 . 3) (undo-tree-id251 . 3) (undo-tree-id252 . 3) (undo-tree-id253 . 3) (undo-tree-id254 . 3) (undo-tree-id255 . 3) (undo-tree-id256 . 3) (undo-tree-id257 . 3) (undo-tree-id258 . 3) (undo-tree-id259 . 3) 193) nil (23728 40791 315009 734000) 0 nil]) ((149 . 170) (#(" Hichhiker's Guide to the Galexy" 0 10 (fontified t face font-lock-string-face) 10 11 (fontified t face font-lock-string-face) 11 12 (fontified t face font-lock-string-face) 12 32 (fontified t face font-lock-string-face)) . 149) (undo-tree-id260 . 32)) nil (23728 40791 314845 381000) 0 nil]) ((#("The" 0 3 (fontified t face font-lock-string-face)) . 149)) nil (23728 40791 314847 459000) 0 nil]) ((143 . 147) (#("book" 0 4 (fontified t)) . 143)) nil (23728 40791 314849 488000) 0 nil]) ((136 . 141) (#("books" 0 5 (fontified t)) . 136)) nil (23728 40791 314851 756000) 0 nil]) ((133 . 134) 135) nil (23728 40791 314853 745000) 0 nil]) ((nil rear-nonsticky nil 132 . 133) (#("
" 0 1 (fontified nil)) . -250) (132 . 251) 94 (t 23728 40648 434330 992000)) nil (23728 40791 314856 529000) 0 nil]) ((#("
" 0 1 (fontified t)) . 94) (undo-tree-id185 . 1) (undo-tree-id186 . 1) (undo-tree-id187 . 1) (undo-tree-id188 . 1) (undo-tree-id189 . 1) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (undo-tree-id201 . 1) (undo-tree-id202 . 1) (undo-tree-id203 . 1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (t 23728 39454 227668 549000)) nil (23728 40648 297016 895000) 0 nil]) ((#("        " 0 8 (fontified t)) . -94) (undo-tree-id183 . -8) (undo-tree-id184 . -8) 102 (93 . 102) (t 23728 37363 789644 570000) 68) nil (23728 39454 202835 308000) 0 nil] [nil nil ((nil rear-nonsticky nil 61 . 62) (nil fontified nil 14 . 62) (14 . 62) (t 23728 37363 789644 570000)) ((#("(require pollen/tag)
(provide (all-defined-out))" 0 1 (fontified nil) 1 8 (fontified nil face font-lock-keyword-face) 8 21 (fontified nil) 21 22 (fontified nil) 22 29 (fontified nil face font-lock-keyword-face) 29 31 (fontified nil) 31 46 (fontified nil face font-lock-keyword-face) 46 47 (fontified nil) 47 48 (fontified nil rear-nonsticky nil)) . 14) (undo-tree-id166 . -47) (undo-tree-id167 . -47) (undo-tree-id168 . -47) (undo-tree-id169 . 1) (undo-tree-id170 . 48) (undo-tree-id171 . -46) (undo-tree-id172 . -47) (undo-tree-id173 . -30) (undo-tree-id174 . -31) (undo-tree-id175 . -21) (undo-tree-id176 . -22) (undo-tree-id177 . 27) (undo-tree-id178 . -22) (undo-tree-id179 . 26) (undo-tree-id180 . -47) (undo-tree-id181 . 1) (undo-tree-id182 . -48) (nil fontified t 22 . 35) (nil fontified t 15 . 22) (nil fontified t 14 . 15) (nil rear-nonsticky t 61 . 62)) (23728 38165 895850 73000) 0 nil]) ((#("◊(define (books . elements) `(ul ,@elements))
◊(define (book title) `(li ,title))
" 0 1 (fontified t) 1 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t) 10 15 (fontified t face font-lock-function-name-face) 15 26 (fontified t) 26 29 (fontified t) 29 34 (fontified t) 34 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t rear-nonsticky t) 46 47 (fontified t) 47 48 (fontified t) 48 54 (fontified t face font-lock-keyword-face) 54 55 (fontified t) 55 56 (fontified t) 56 60 (fontified t face font-lock-function-name-face) 60 66 (fontified t) 66 69 (fontified t) 69 79 (fontified t) 79 80 (fontified t) 80 81 (fontified t) 81 82 (fontified t)) . 14) (undo-tree-id148 . 8) (undo-tree-id149 . -74) (undo-tree-id150 . -46) (undo-tree-id151 . -81) (undo-tree-id152 . -45) (undo-tree-id153 . -81) (undo-tree-id154 . -73) (undo-tree-id155 . -73) (undo-tree-id156 . -73) (undo-tree-id157 . -28) (undo-tree-id158 . -28) (undo-tree-id159 . -73) (undo-tree-id160 . -74) (undo-tree-id161 . -74) (undo-tree-id162 . -74) (undo-tree-id163 . -28) (undo-tree-id164 . -28) (undo-tree-id165 . -74) 42 (t 23728 37102 188326 471000)) nil (23728 38165 896755 414000) 0 nil]) ((87 . 88) (t 23728 37088 741763 805000)) nil (23728 37102 170982 338000) 0 nil]) ((87 . 92)) nil (23728 37088 723823 106000) 0 nil]) ((#("elements" 0 8 (fontified t)) . 87)) nil (23728 37088 723833 293000) 0 nil]) ((#("@" 0 1 (fontified t)) . 87)) nil (23728 37088 723839 201000) 0 nil]) ((#("," 0 1 (fontified t)) . 87)) nil (23728 37088 723843 595000) 0 nil]) ((85 . 86)) nil (23728 37088 723847 396000) 0 nil]) ((#("u" 0 1 (fontified t)) . 84)) nil (23728 37088 723850 908000) 0 nil]) ((75 . 80)) nil (23728 37088 723855 25000) 0 nil]) ((#(". elements" 0 10 (fontified t)) . 75)) nil (23728 37088 723858 329000) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-function-name-face)) . 74)) nil (23728 37088 723861 788000) 0 nil]) ((nil rear-nonsticky nil 59 . 60) (#("
" 0 1 (fontified nil)) . -105) (59 . 106) 51 (t 23728 37046 798755 192000)) nil (23728 37088 723869 51000) 0 nil]) ((178 . 179) 177) nil (23728 37046 787513 211000) 0 nil]) ((#("
" 0 1 (fontified t)) . -178) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) 179) nil (23728 37046 787524 861000) 0 nil]) ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 179) (undo-tree-id144 . 2) (undo-tree-id145 . 1) (undo-tree-id146 . 2) (undo-tree-id147 . 2) (t 23728 37038 128822 379000)) nil (23728 37046 787532 592000) 0 nil]) ((59 . 60) 14) nil (23728 37038 110368 642000) 0 nil]) ((#("
" 0 1 (fontified t rear-nonsticky t)) . 14) (undo-tree-id129 . -1) (undo-tree-id130 . 1) (undo-tree-id131 . 1)) nil (23728 37038 110399 532000) 0 nil]) ((nil rear-nonsticky nil 14 . 15) (#("
" 0 1 (fontified nil)) . -60) (14 . 61)) nil (23728 37038 110408 863000) 0 nil]) ((#("◊(define (books . elements) `(ul ,@elements))
" 0 1 (fontified t) 1 2 (fontified t) 2 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t) 9 10 (fontified t) 10 15 (fontified t face font-lock-function-name-face) 15 26 (fontified t) 26 29 (fontified t) 29 34 (fontified t) 34 43 (fontified t) 43 44 (fontified t) 44 45 (fontified t) 45 46 (fontified t)) . 135) (undo-tree-id132 . 3) (undo-tree-id133 . 13) (undo-tree-id134 . 13) (undo-tree-id135 . 13) (undo-tree-id136 . 13) (undo-tree-id137 . -33) (undo-tree-id138 . -33) (undo-tree-id139 . -33) (undo-tree-id140 . 13) 168 (t 23728 37001 425773 724000)) nil (23728 37038 110438 744000) 0 nil]) ((170 . 178) (169 . 170) (#("◊" 0 1 (fontified t)) . -169) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . 1) (undo-tree-id126 . -1) 170 (169 . 170) (165 . 169)) nil (23728 37001 407737 650000) 0 nil]) ((163 . 164)) nil (23728 37001 407751 161000) 0 nil]) ((#("default-tag-function 'ul" 0 21 (fontified t) 21 24 (fontified t face racket-selfeval-face)) . 164) (undo-tree-id127 . 24) (undo-tree-id128 . -24) (t 23728 36956 769454 14000)) nil (23728 37001 407762 165000) 0 nil]) ((150 . 161) (t 23728 36929 216335 115000)) nil (23728 36956 755074 192000) 0 nil]) ((179 . 180) 176) nil (23728 36929 204514 551000) 0 nil]) ((165 . 177) (163 . 165) (#("b" 0 1 (fontified t)) . -163) (undo-tree-id119 . -1) (undo-tree-id120 . -1) 164 (153 . 164) (152 . 154) (#("(" 0 1 (fontified nil)) . -152) (152 . 153) (#("`" 0 1 (fontified t)) . -152) (undo-tree-id121 . -1) (undo-tree-id122 . -1) 153) nil (23728 36929 204559 717000) 0 nil] [nil nil ((150 . 156)) ((#(" title" 0 6 (fontified t)) . 150) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . 1) (undo-tree-id102 . 1) (undo-tree-id103 . 1) (undo-tree-id104 . -6) (undo-tree-id105 . -6) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . 1) (undo-tree-id117 . 2) (undo-tree-id118 . 1)) (23728 36902 686940 262000) 0 nil]) ((151 . 153) (#(")" 0 1 (fontified nil)) . 151) (150 . 151) (145 . 150) (144 . 146) (#("(" 0 1 (fontified nil)) . -144) (137 . 145) (136 . 138) (#("(" 0 1 (fontified nil)) . -136) (136 . 137) (135 . 136) (134 . 135) (133 . 134) 133) nil (23728 36902 687271 889000) 0 nil]) ((129 . 130) (108 . 109) (#("}" 0 1 (fontified nil)) . 128) (#("{" 0 1 (fontified t)) . 108) (undo-tree-id98 . 1) 112) nil (23728 36902 687002 783000) 0 nil]) ((107 . 108)) nil (23728 36902 687009 595000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . -108) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . 1) 109 (108 . 109)) ((#(" " 0 1 (fontified nil)) . 108) (undo-tree-id97 . 1) (108 . 109)) (23728 36615 785659 22000) 0 nil]) ((129 . 130) (#(")" 0 1 (fontified t)) . -107) (undo-tree-id85 . 1) (undo-tree-id86 . -1) (107 . 108) (#(")" 0 1 (fontified t)) . -103) (undo-tree-id87 . 1) (undo-tree-id88 . 1) (undo-tree-id89 . 1) (undo-tree-id90 . 1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1)) nil (23728 36615 785812 694000) 0 nil]) ((#(" " 0 1 (fontified t)) . 102) (undo-tree-id95 . -1)) nil (23728 36615 785680 642000) 0 nil]) ((103 . 105) (#("(" 0 1 (fontified nil)) . -103) (103 . 104)) nil (23728 36615 785683 332000) 0 nil]) ((#("◊" 0 1 (fontified t)) . 103)) nil (23728 36615 785685 252000) 0 nil]) ((#("
" 0 1 (fontified t)) . 94)) nil (23728 36615 785687 34000) 0 nil]) ((65 . 66) (29 . 30) (#("}" 0 1 (fontified nil)) . 64) (#("{" 0 1 (fontified t)) . 29) (undo-tree-id96 . 1)) nil (23728 36615 785690 990000) 0 nil]) ((28 . 29)) nil (23728 36615 785693 158000) 0 nil]) ((65 . 66) (#(")" 0 1 (fontified t)) . -28) (28 . 29) (#(")" 0 1 (fontified t)) . -24) (23 . 25) (#("(" 0 1 (fontified nil)) . -23) (23 . 24)) nil (23728 36615 785696 927000) 0 nil]) ((#("◊" 0 1 (fontified t)) . 23) (t 23728 36557 622595 66000)) nil (23728 36615 785699 911000) 0 nil]) ((79 . 80)) nil (23728 36557 611565 671000) 0 nil]) ((#("        " 0 8 (fontified t)) . -91) (undo-tree-id80 . -8) (undo-tree-id81 . -8) 99 (90 . 99) 79) nil (23728 36557 611578 333000) 0 nil]) ((88 . 89) (79 . 80) (#("}" 0 1 (fontified nil)) . 87) (#("{" 0 1 (fontified t)) . 79) 81) nil (23728 36557 611583 203000) 0 nil] [nil ([nil nil ((79 . 80) (42 . 43) (#("'" 0 1 (fontified t face racket-selfeval-face)) . 78) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . 1) (#("'" 0 1 (fontified t face racket-selfeval-face)) . 42) (undo-tree-id37 . -1) 79) ((42 . 43) (78 . 79) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 42) (undo-tree-id69 . 1) (undo-tree-id70 . 1) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (undo-tree-id73 . 1) (undo-tree-id74 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 79) (undo-tree-id75 . 1) (undo-tree-id76 . -1)) (23728 36548 95517 101000) 0 nil]) ((88 . 89) (79 . 80) (#("}" 0 1 (fontified nil)) . 87) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . 1) (#("{" 0 1 (fontified t)) . 79) (undo-tree-id44 . -1) (undo-tree-id45 . 1) (undo-tree-id46 . 1) (undo-tree-id47 . -1) 81) ((79 . 80) (87 . 88) (#("'" 0 1 (fontified nil face racket-selfeval-face)) . 79) (undo-tree-id77 . 1) (undo-tree-id78 . 1) (undo-tree-id79 . 1) (#("'" 0 1 (fontified t)) . 88)) (23728 36548 96201 840000) 0 nil]) ((89 . 90) (#(")" 0 1 (fontified t)) . -79) (undo-tree-id48 . 1) (undo-tree-id49 . -1) (66 . 74) (#("         " 0 9 (fontified nil)) . -66) (undo-tree-id50 . -9) (undo-tree-id51 . -9) (undo-tree-id52 . -9) (undo-tree-id53 . -9) (undo-tree-id54 . -9) (undo-tree-id55 . -9) (undo-tree-id56 . -9) (undo-tree-id57 . -9) (undo-tree-id58 . -9) (undo-tree-id59 . -9) (undo-tree-id60 . -9) (undo-tree-id61 . -9) (80 . 81) (#(")" 0 1 (fontified t)) . -76) (undo-tree-id62 . -1) (undo-tree-id63 . 1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (75 . 77) (#("(" 0 1 (fontified nil)) . -75) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (75 . 76)) nil (23728 36549 61787 713000) 0 nil]) ((#("◊" 0 1 (fontified t)) . 75) (t 23728 36492 753115 38000)) nil (23728 36548 95644 936000) 0 nil]) ((#("}" 0 1 (fontified t)) . 127) (undo-tree-id14 . 1) (#("{
         " 0 11 (fontified t)) . 23) (undo-tree-id15 . 11) (undo-tree-id16 . -10) (undo-tree-id17 . -10) (undo-tree-id18 . 11) (undo-tree-id19 . 11) (undo-tree-id20 . 11) (undo-tree-id21 . 11) (undo-tree-id22 . 11) (undo-tree-id23 . 11) (undo-tree-id24 . 1) (undo-tree-id25 . 11) (undo-tree-id26 . -10) (undo-tree-id27 . -11) 33) nil (23728 36492 735590 628000) 0 nil]) ((102 . 111) (#("  " 0 2 (fontified nil)) . -102) (77 . 86) (#("  " 0 2 (fontified t)) . -77) (25 . 34) (#("  " 0 2 (fontified t)) . -25) (118 . 119) (#(")" 0 1 (fontified t)) . -23) (17 . 23) (16 . 18) (#("(" 0 1 (fontified nil)) . -16) (16 . 17) (#("b" 0 1 (fontified t)) . -16) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (#("o" 0 1 (fontified nil)) . -17) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("o" 0 1 (fontified t)) . -18) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 19 (16 . 19) (#("books" 0 5 (fontified t)) . 16) (t 23728 36434 310253 273000)) nil (23728 36492 735643 701000) 0 nil] [nil nil ((#("◊" 0 1 (fontified t)) . 15) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 16 (t 23728 36434 310253 273000)) ((15 . 16)) (23728 36458 405348 246000) 0 nil]) ((116 . 117) 113) nil (23728 36458 405565 17000) 0 nil]) ((96 . 114) (94 . 96) (93 . 95) (#("{" 0 1 (fontified nil face font-lock-variable-name-face)) . -93) (89 . 94) (88 . 89) (85 . 88) (#("}" 0 1 (fontified nil)) . 85) (76 . 85) (75 . 77) (#("{" 0 1 (fontified nil face font-lock-variable-name-face)) . -75) (75 . 76) (#("\"\"" 0 1 (fontified t face font-lock-string-face) 1 2 (fontified t face font-lock-string-face)) . 75) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 76 (75 . 77) (#("\"" 0 1 (fontified nil face font-lock-variable-name-face)) . -75) (75 . 76) (#(" " 0 1 (fontified t)) . -75) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 76 (71 . 76) (70 . 71) (67 . 70) (#("}" 0 1 (fontified nil)) . 67) (66 . 67) (#(" " 0 1 (fontified nil)) . -66) (66 . 67) (#("}" 0 1 (fontified nil)) . -66) (66 . 67) (#(" " 0 1 (fontified t)) . -66) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 67 (47 . 67) (44 . 47) (#("s" 0 1 (fontified t)) . -44) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 45 (31 . 45) (30 . 32) (#("{" 0 1 (fontified nil face font-lock-variable-name-face)) . -30) (26 . 31) (25 . 26) (23 . 25) (22 . 23) (21 . 23) (#("{" 0 1 (fontified nil face font-lock-variable-name-face)) . -21) (21 . 22) (16 . 21) (15 . 16) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 15) (undo-tree-id8 . -1) (undo-tree-id9 . -1) 16 (15 . 17) (#("(" 0 1 (fontified nil)) . -15) (15 . 16) (13 . 15) (2 . 13) (#("p" 0 1 (fontified t)) . -2) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 3 (1 . 3) (t . -1)) nil (23728 36434 299985 949000) 0 nil]) nil nil (23728 36434 299996 163000) 0 nil] #1# 5528 79 nil)