"3fa899690e85f8801b62638926efe14a00fee807"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#7=[nil nil ((711 . 712)) nil (23707 23969 982179 908000) 0 nil]) ((#("
" 0 1 (fontified t)) . -711) (undo-tree-id1145 . -1) 712 (t 23706 41059 574067 447000)) nil (23707 23969 982194 231000) 0 nil]) ((664 . 686) (#("    <p>{time}</p>
" 0 4 (fontified t) 4 7 (fontified t) 7 12 (fontified t) 12 13 (fontified t) 13 17 (fontified t) 17 18 (fontified t)) . -664) (undo-tree-id1048 . 14) (undo-tree-id1049 . 14) (undo-tree-id1050 . 14) (undo-tree-id1051 . 14) (undo-tree-id1052 . 14) (undo-tree-id1053 . 14) (undo-tree-id1054 . 14) (undo-tree-id1055 . 14) (undo-tree-id1056 . 14) (undo-tree-id1057 . 14) (undo-tree-id1058 . 14) (undo-tree-id1059 . 14) (undo-tree-id1060 . 14) (undo-tree-id1061 . 14) (undo-tree-id1062 . 14) (undo-tree-id1063 . 14) (undo-tree-id1064 . 14) (undo-tree-id1065 . 2) (undo-tree-id1066 . -18) (undo-tree-id1067 . 14) (undo-tree-id1068 . 2) (undo-tree-id1069 . -18) (undo-tree-id1070 . 18) (undo-tree-id1071 . 18) (261 . 357) (#("    fetch('http://worldtimeapi.org/api/timezone/America/New_York', { mode: 'cors' })
" 0 10 (fontified t) 10 65 (fontified t face font-lock-string-face) 65 75 (fontified t) 75 76 (fontified t face font-lock-string-face) 76 80 (fontified t face font-lock-string-face) 80 81 (fontified t face font-lock-string-face) 81 82 (fontified t) 82 85 (fontified t)) . -261) (undo-tree-id1072 . 3) (undo-tree-id1073 . -80) (undo-tree-id1074 . 9) (undo-tree-id1075 . -80) (undo-tree-id1076 . 5) (undo-tree-id1077 . 5) (undo-tree-id1078 . 5) (undo-tree-id1079 . 5) (undo-tree-id1080 . 5) (undo-tree-id1081 . 5) (undo-tree-id1082 . 5) (undo-tree-id1083 . 5) (undo-tree-id1084 . 5) (undo-tree-id1085 . 5) (undo-tree-id1086 . -80) (undo-tree-id1087 . 5) (undo-tree-id1088 . 5) (undo-tree-id1089 . -80) (undo-tree-id1090 . 5) (undo-tree-id1091 . 5) (undo-tree-id1092 . 5) (undo-tree-id1093 . 5) (undo-tree-id1094 . 5) (undo-tree-id1095 . 5) (undo-tree-id1096 . 5) (undo-tree-id1097 . 5) (undo-tree-id1098 . 5) (undo-tree-id1099 . 5) (undo-tree-id1100 . 5) (undo-tree-id1101 . 5) (undo-tree-id1102 . 5) (undo-tree-id1103 . 5) (undo-tree-id1104 . 5) (undo-tree-id1105 . 5) (undo-tree-id1106 . 5) (undo-tree-id1107 . 5) (undo-tree-id1108 . 5) (undo-tree-id1109 . 5) (undo-tree-id1110 . 5) (undo-tree-id1111 . 5) (undo-tree-id1112 . 5) (undo-tree-id1113 . 5) (undo-tree-id1114 . -80) (undo-tree-id1115 . 5) (undo-tree-id1116 . 5) (undo-tree-id1117 . -80) (undo-tree-id1118 . 5) (undo-tree-id1119 . 5) (undo-tree-id1120 . -80) (undo-tree-id1121 . 5) (undo-tree-id1122 . 5) (undo-tree-id1123 . 5) (undo-tree-id1124 . 5) (undo-tree-id1125 . 5) (undo-tree-id1126 . 5) (undo-tree-id1127 . 5) 653) nil (23706 41059 511273 833000) 0 nil]) ((#("      " 0 6 (fontified nil)) . -657) (undo-tree-id1128 . 6) (653 . 657)) nil (23706 41059 511283 220000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -659) (undo-tree-id1129 . 8) (undo-tree-id1130 . 8) (undo-tree-id1131 . 8) (undo-tree-id1132 . 8) (undo-tree-id1133 . 8) (undo-tree-id1134 . 8) (undo-tree-id1135 . 8) (undo-tree-id1136 . 8) (undo-tree-id1137 . 8) (undo-tree-id1138 . 8) (undo-tree-id1139 . 8) (undo-tree-id1140 . 8) (undo-tree-id1141 . 8) (undo-tree-id1142 . 8) (undo-tree-id1143 . 8) (undo-tree-id1144 . 8) (653 . 659) 673 (t 23706 41013 974096 240000)) nil (23706 41059 511298 229000) 0 nil] [nil nil ((337 . 342) (#("cors" 0 4 (fontified t face font-lock-string-face)) . -337) (undo-tree-id1023 . -4) (undo-tree-id1024 . -4) 341) ((337 . 341) (#("Coors" 0 5 (fontified t face font-lock-string-face)) . 337) (undo-tree-id1044 . -5) (undo-tree-id1045 . -5) (undo-tree-id1046 . -5) (undo-tree-id1047 . -5) (t 23706 41009 754098 514000)) (23706 41009 741613 278000) 0 nil]) ((#("," 0 1 (fontified t)) . 342)) nil (23706 41011 581869 388000) 0 nil]) ((343 . 344)) nil (23706 41009 741620 372000) 0 nil]) ((329 . 330)) nil (23706 41009 741622 495000) 0 nil]) ((#("    " 0 4 (fontified nil)) . 342) (#("
" 0 1 (fontified t)) . -342) 329) nil (23706 41009 741624 839000) 0 nil]) ((#("      " 0 6 (fontified nil)) . 329) (undo-tree-id1025 . 6) (#("
" 0 1 (fontified t)) . -329) (undo-tree-id1026 . 1) 328) nil (23706 41009 741630 111000) 0 nil]) ((641 . 664) (#("<h1>Clock</h1>
" 0 2 (fontified t) 2 15 (fontified t)) . -641) (undo-tree-id1027 . 6) (undo-tree-id1028 . 6) (undo-tree-id1029 . -4) (undo-tree-id1030 . 6) (undo-tree-id1031 . 6) (undo-tree-id1032 . 15) (undo-tree-id1033 . 15) (undo-tree-id1034 . 15) (undo-tree-id1035 . 15) (undo-tree-id1036 . 15) (undo-tree-id1037 . 15) (undo-tree-id1038 . 15) (undo-tree-id1039 . 15) (undo-tree-id1040 . 15) (undo-tree-id1041 . 15) (undo-tree-id1042 . 15) (undo-tree-id1043 . 15) (261 . 357) (#("    fetch(
      'http://worldtimeapi.org/api/timezone/America/New_York',
      { mode: 'cors' },
    )
" 0 4 (fontified t) 4 10 (fontified t) 10 11 (fontified t) 11 17 (fontified t) 17 18 (fontified t face font-lock-string-face) 18 23 (fontified t face font-lock-string-face) 23 25 (fontified t face font-lock-string-face) 25 70 (fontified t face font-lock-string-face) 70 71 (rear-nonsticky t fontified t face font-lock-string-face) 71 72 (fontified t face font-lock-string-face) 72 73 (fontified t) 73 74 (fontified t) 74 80 (fontified t) 80 82 (fontified t) 82 88 (fontified t) 88 89 (fontified t face font-lock-string-face) 89 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t) 95 97 (fontified t) 97 98 (fontified t) 98 102 (fontified t) 102 103 (fontified t) 103 104 (fontified t)) . -261) (t 23706 40939 817459 143000)) nil (23706 41009 741685 587000) 0 nil]) ((711 . 712)) nil (23706 40939 755715 496000) 0 nil]) ((#("  " 0 2 (fontified t)) . -649) (undo-tree-id993 . -2) (undo-tree-id994 . 2) (undo-tree-id995 . 2)) nil (23706 40939 755726 567000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -651) (undo-tree-id996 . -4) (undo-tree-id997 . 4) (undo-tree-id998 . 4) (649 . 651)) nil (23706 40939 755731 747000) 0 nil]) ((#("      " 0 6 (fontified nil)) . -653) (undo-tree-id999 . -6) (undo-tree-id1000 . 6) (649 . 653)) nil (23706 40939 755735 355000) 0 nil]) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . -655) (undo-tree-id1001 . -5) (undo-tree-id1002 . 2) (undo-tree-id1003 . 2) (649 . 655) 670) nil (23706 40939 755739 546000) 0 nil]) ((122 . 123)) nil (23706 40939 755741 261000) 0 nil]) ((#(";" 0 1 (fontified t)) . -122) (undo-tree-id1004 . -1) 123) nil (23706 40939 755743 341000) 0 nil]) ((#(";" 0 1 (fontified t)) . 719)) nil (23706 40939 755747 900000) 0 nil]) ((719 . 720)) nil (23706 40939 755749 261000) 0 nil]) ((#("thes" 0 4 (fontified t)) . 719) (undo-tree-id1005 . -1)) nil (23706 40939 755751 332000) 0 nil]) ((719 . 723)) nil (23706 40939 755752 728000) 0 nil]) ((#("import './style';
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 16 (fontified t face font-lock-string-face) 16 18 (fontified t)) . 1) (undo-tree-id1006 . -9) 10) nil (23706 40939 755756 370000) 0 nil]) ((#("  " 0 2 (fontified t)) . 737) (undo-tree-id1007 . -2) (undo-tree-id1008 . -2) (undo-tree-id1009 . -2) (undo-tree-id1010 . -2) (undo-tree-id1011 . -2) (undo-tree-id1012 . -2) (undo-tree-id1013 . -2)) nil (23706 40939 755762 545000) 0 nil]) ((716 . 718)) nil (23706 40939 755764 297000) 0 nil]) ((702 . 706) (#("this.state.time" 0 3 (fontified t face font-lock-constant-face) 3 4 (fontified t face font-lock-constant-face) 4 14 (fontified t) 14 15 (fontified t)) . 702) (undo-tree-id1014 . -5) 707) nil (23706 40939 755766 600000) 0 nil]) ((640 . 641) (627 . 640) (#("}" 0 1 (fontified nil)) . 627) (620 . 627) (619 . 621) (#("{" 0 1 (fontified nil)) . -619) (619 . 620) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -619) (undo-tree-id1015 . -1) (#("i" 0 1 (fontified t face font-lock-variable-name-face)) . -620) (undo-tree-id1016 . -1) (#("m" 0 1 (fontified t face font-lock-variable-name-face)) . -621) (undo-tree-id1017 . -1) (#("e" 0 1 (fontified t face font-lock-variable-name-face)) . -622) (undo-tree-id1018 . -1) 623 (#(" " 0 1 (fontified t)) . -623) (undo-tree-id1019 . -1) (#("=" 0 1 (fontified t)) . -624) (undo-tree-id1020 . -1) (#(" " 0 1 (fontified t)) . -625) (undo-tree-id1021 . -1) (#("{" 0 1 (fontified nil)) . -626) (undo-tree-id1022 . -1) (#("}" 0 1 (fontified t)) . 627) (626 . 628) (#("{" 0 1 (fontified nil)) . -626) (613 . 627) (608 . 613) 596) nil (23706 40939 755780 877000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -596) (undo-tree-id984 . -2) (undo-tree-id985 . 2) 598 (596 . 598) (596 . 597)) ((#("
" 0 1 (fontified nil)) . 596) (undo-tree-id986 . 1) (undo-tree-id987 . 1) (undo-tree-id988 . 1) (undo-tree-id989 . 1) (undo-tree-id990 . 1) (#("  " 0 2 (fontified nil)) . 596) (undo-tree-id991 . -2) (undo-tree-id992 . 2) (596 . 598)) (23706 40481 517995 808000) 0 nil] [nil nil ((#("  " 0 2 (fontified t)) . -595) (undo-tree-id941 . -2) (undo-tree-id942 . 2) 597 (595 . 597) (595 . 596)) ((#("
" 0 1 (fontified nil)) . 595) (undo-tree-id977 . 1) (undo-tree-id978 . 1) (undo-tree-id979 . 1) (undo-tree-id980 . 1) (undo-tree-id981 . 1) (#("  " 0 2 (fontified nil)) . 595) (undo-tree-id982 . -2) (undo-tree-id983 . 2) (595 . 597)) (23706 40479 920632 664000) 0 nil]) ((#("      " 0 6 (fontified nil)) . -665) (undo-tree-id943 . -5) (undo-tree-id944 . -6) (undo-tree-id945 . 1) (undo-tree-id946 . 2) (657 . 665) 662) nil (23706 40481 518165 479000) 0 nil]) ((#("
" 0 1 (fontified t)) . -713) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) 714) nil (23706 40479 920652 659000) 0 nil]) ((#("
(setq-default indent-tabs-mode nil)
(setq js-indent-level 2)
(setq js2-basic-offset 2)
(setq tab-width 2)
" 0 1 (fontified t) 1 2 (fontified t) 2 7 (fontified t) 7 14 (fontified t face font-lock-keyword-face) 14 35 (fontified t) 35 36 (rear-nonsticky t fontified t) 36 37 (fontified t) 37 38 (fontified t) 38 42 (fontified t) 42 61 (fontified t) 61 62 (rear-nonsticky t fontified t) 62 63 (fontified t) 63 67 (fontified t) 67 87 (fontified t) 87 88 (fontified t) 88 89 (fontified t) 89 93 (fontified t) 93 94 (fontified t) 94 105 (fontified t) 105 106 (fontified t) 106 107 (rear-nonsticky t fontified t)) . 714) (undo-tree-id955 . -92) (undo-tree-id956 . -1) (undo-tree-id957 . -5) (undo-tree-id958 . -92) (undo-tree-id959 . -1) (undo-tree-id960 . -92)) nil (23706 40479 920660 701000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -663) (undo-tree-id961 . -4) (657 . 663) 661) nil (23706 40479 920664 24000) 0 nil]) ((#("  " 0 2 (fontified nil)) . -661) (undo-tree-id962 . -2) (657 . 661) 659) nil (23706 40479 920667 45000) 0 nil]) ((657 . 659)) nil (23706 40479 920668 711000) 0 nil]) ((#("  " 0 2 (fontified t)) . -657) (undo-tree-id963 . -2)) nil (23706 40479 920670 782000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -659) (undo-tree-id964 . -4) (657 . 659)) nil (23706 40479 920673 538000) 0 nil]) ((#("      " 0 6 (fontified nil)) . -661) (undo-tree-id965 . -6) (657 . 661)) nil (23706 40479 920676 284000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -663) (undo-tree-id966 . -8) (undo-tree-id967 . -7) (657 . 663) 664) nil (23706 40479 920680 10000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -665) (undo-tree-id968 . -4) (657 . 665) 661) nil (23706 40479 920683 319000) 0 nil]) ((657 . 661)) nil (23706 40479 920685 233000) 0 nil]) ((#("    " 0 4 (fontified t)) . -657) (undo-tree-id969 . -4)) nil (23706 40479 920687 309000) 0 nil]) ((#("      " 0 2 (fontified nil) 2 6 (fontified nil)) . -661) (undo-tree-id970 . 4) (undo-tree-id971 . -6) (undo-tree-id972 . -1) (657 . 661) 658) nil (23706 40479 920691 891000) 0 nil]) ((657 . 659)) nil (23706 40479 920693 623000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -661) (undo-tree-id973 . -8) (undo-tree-id974 . -8) (657 . 661) 665) nil (23706 40479 920697 331000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -665) (undo-tree-id975 . -4) (657 . 665)) nil (23706 40479 920700 464000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -661) (undo-tree-id976 . -8) (657 . 661) 681) nil (23706 40479 920703 354000) 0 nil] [nil nil ((#("(setq-default indent-tabs-mode nil)
(setq js-indent-level 2)
(setq js2-basic-offset 2)
(setq tab-width 2)
" 0 1 (fontified t) 1 6 (fontified t) 6 13 (fontified t face font-lock-keyword-face) 13 34 (fontified t) 34 35 (rear-nonsticky t fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 41 (fontified t) 41 60 (fontified t) 60 61 (rear-nonsticky t fontified t) 61 62 (fontified t) 62 66 (fontified t) 66 86 (fontified t) 86 87 (fontified t) 87 88 (fontified t) 88 92 (fontified t) 92 93 (fontified t) 93 104 (fontified t) 104 105 (fontified t) 105 106 (rear-nonsticky t fontified t)) . 717) (undo-tree-id933 . -91) (undo-tree-id934 . -4) (undo-tree-id935 . -91) (undo-tree-id936 . -91) (undo-tree-id937 . -6) (undo-tree-id938 . -13) (undo-tree-id939 . -4) (undo-tree-id940 . -91) 808) ((717 . 823)) (23706 40255 510450 942000) 0 nil] [nil ([nil nil ((690 . 698) (#(" " 0 1 (fontified t)) . -690) (undo-tree-id891 . -1) (#(" " 0 1 (fontified t)) . -691) (undo-tree-id892 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id893 . -1) (#(" " 0 1 (fontified t)) . -693) (undo-tree-id894 . -1) (#(" " 0 1 (fontified t)) . -694) (undo-tree-id895 . -1) (#(" " 0 1 (fontified t)) . -695) (undo-tree-id896 . -1) (#(" " 0 1 (fontified t)) . -696) (undo-tree-id897 . -1) (#(" " 0 1 (fontified t)) . -697) (undo-tree-id898 . -1) 698 (690 . 698) (#(" " 0 1 (fontified t)) . 690) (undo-tree-id899 . -1) 691 (#(" " 0 1 (fontified t)) . -691) (undo-tree-id900 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id901 . -1) (#(" " 0 1 (fontified t)) . -693) (undo-tree-id902 . -1) (#(" " 0 1 (fontified t)) . -694) (undo-tree-id903 . -1) (#(" " 0 1 (fontified t)) . -695) (undo-tree-id904 . -1) (#(" " 0 1 (fontified t)) . -696) (undo-tree-id905 . -1) (#(" " 0 1 (fontified t)) . -697) (undo-tree-id906 . -1) 698 (689 . 698) (#("
" 0 1 (fontified t)) . -689) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (#(" " 0 1 (fontified t)) . -690) (undo-tree-id909 . -1) (#(" " 0 1 (fontified t)) . -691) (undo-tree-id910 . -1) (#(" " 0 1 (fontified t)) . -692) (undo-tree-id911 . -1) (#(" " 0 1 (fontified t)) . -693) (undo-tree-id912 . -1) (#(" " 0 1 (fontified t)) . -694) (undo-tree-id913 . -1) (#(" " 0 1 (fontified t)) . -695) (undo-tree-id914 . -1) (#(" " 0 1 (fontified t)) . -696) (undo-tree-id915 . -1) (#(" " 0 1 (fontified t)) . -697) (undo-tree-id916 . -1) 698) ((689 . 698) (#("
        " 0 1 (fontified t) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil) 8 9 (fontified nil)) . 689) (undo-tree-id927 . -9) (690 . 698) (#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 690) (undo-tree-id928 . -8) (690 . 698) (#("        " 0 8 (fontified t)) . 690) (undo-tree-id929 . -7) (undo-tree-id930 . 8) (undo-tree-id931 . 1) (undo-tree-id932 . 1)) (23706 40153 733362 277000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -698) (undo-tree-id917 . -4) (undo-tree-id918 . 4) (690 . 698) 694) ((#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 690) (698 . 702)) (23706 40153 734504 167000) 0 nil]) ((690 . 694)) nil (23706 40255 510600 135000) 0 nil]) ((#("    " 0 4 (fontified t)) . -690) (undo-tree-id919 . -4)) nil (23706 40153 733380 93000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -694) (undo-tree-id920 . 1) (undo-tree-id921 . 1) (undo-tree-id922 . 2) (undo-tree-id923 . 1) (undo-tree-id924 . -6) (690 . 694) 703) nil (23706 40153 733386 561000) 0 nil]) ((#("`" 0 1 (fontified nil face font-lock-string-face)) . -827) (undo-tree-id925 . -1) (#("`" 0 1 (fontified t face font-lock-string-face)) . 828) (827 . 829) (#("`" 0 1 (fontified nil)) . -827) (827 . 828) (nil rear-nonsticky nil 826 . 827) (721 . 827) (720 . 721) (719 . 720) 718) nil (23706 40153 733392 56000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -665) (657 . 665)) nil (23706 40153 733394 435000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -661) (657 . 661)) nil (23706 40153 733396 166000) 0 nil]) ((690 . 698) (#("    " 0 4 (fontified t)) . 690)) nil (23706 40153 733397 765000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -694) (undo-tree-id926 . -8) (690 . 694) 698) nil (23706 40153 733400 964000) 0 nil] [nil nil ((636 . 644) (#(" " 0 1 (fontified t)) . -636) (undo-tree-id827 . -1) (#(" " 0 1 (fontified t)) . -637) (undo-tree-id828 . -1) (#(" " 0 1 (fontified t)) . -638) (undo-tree-id829 . -1) (#(" " 0 1 (fontified t)) . -639) (undo-tree-id830 . -1) (#(" " 0 1 (fontified t)) . -640) (undo-tree-id831 . -1) (#(" " 0 1 (fontified t)) . -641) (undo-tree-id832 . -1) (#(" " 0 1 (fontified t)) . -642) (undo-tree-id833 . -1) (#(" " 0 1 (fontified t)) . -643) (undo-tree-id834 . -1) 644 (636 . 644) (622 . 630) (#("      " 0 6 (fontified nil)) . 622) (633 . 634) (#("
" 0 1 (fontified t)) . -633) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (#(" " 0 1 (fontified t)) . -634) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (#(" " 0 1 (fontified t)) . -635) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (#(" " 0 1 (fontified t)) . -636) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (#(" " 0 1 (fontified t)) . -637) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (#(" " 0 1 (fontified t)) . -638) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (#(" " 0 1 (fontified t)) . -639) (undo-tree-id847 . -1) (#(" " 0 1 (fontified t)) . -640) (undo-tree-id848 . -1) (#(" " 0 1 (fontified t)) . -641) (undo-tree-id849 . -1) 642) ((633 . 642) (#("
" 0 1 (fontified nil)) . 633) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (622 . 628) (#("        " 0 8 (fontified t)) . 622) (undo-tree-id884 . -8) (#("        " 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 8 (fontified nil)) . 636) (undo-tree-id885 . -8) (636 . 644) (#("        " 0 8 (fontified t)) . 636) (undo-tree-id886 . -7) (undo-tree-id887 . 8) (undo-tree-id888 . -8) (undo-tree-id889 . 1) (undo-tree-id890 . 1)) (23706 39987 440173 926000) 0 nil]) ((#("l" 0 1 (fontified t)) . -628) (undo-tree-id850 . -1) (undo-tree-id851 . 1) 629 (#("  " 0 2 (fontified t)) . -628) (undo-tree-id852 . -2) 631 (630 . 631) (#("i" 0 1 (fontified t)) . -630) (undo-tree-id853 . -1) 631 (630 . 631)) nil (23706 39987 443182 161000) 0 nil]) ((#("    " 0 4 (fontified nil)) . -630) (622 . 630)) nil (23706 39987 440226 354000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -626) (undo-tree-id854 . 1) (undo-tree-id855 . 1) (undo-tree-id856 . 1) (undo-tree-id857 . 1) (undo-tree-id858 . 1) (undo-tree-id859 . 1) (undo-tree-id860 . 1) (undo-tree-id861 . 1) (undo-tree-id862 . 1) (undo-tree-id863 . 1) (622 . 626)) nil (23706 39987 440258 840000) 0 nil]) ((#("
(setq tab-width 2)dd" 0 1 (fontified t) 1 11 (fontified t) 11 21 (fontified t)) . 721) (undo-tree-id864 . -7) (undo-tree-id865 . -7) (undo-tree-id866 . -20) 741) nil (23706 39987 440275 313000) 0 nil]) ((740 . 742)) nil (23706 39987 440280 169000) 0 nil]) ((734 . 740) (#("t" 0 1 (fontified t)) . -734) (undo-tree-id867 . -1) (#("h" 0 1 (fontified t face font-lock-keyword-face)) . -735) (undo-tree-id868 . -1) 736 (728 . 736) (#("t)" 0 2 (fontified t) 2 3 (fontified t)) . 728) (undo-tree-id869 . 1) (undo-tree-id870 . 2) (undo-tree-id871 . 2) (undo-tree-id872 . 2) (undo-tree-id873 . 2) (undo-tree-id874 . 2) (undo-tree-id875 . 2) (undo-tree-id876 . -1) (undo-tree-id877 . -1)) nil (23706 39987 440326 317000) 0 nil]) ((728 . 729)) nil (23706 39987 440335 151000) 0 nil]) ((723 . 729) (722 . 724) (#("(" 0 1 (fontified nil)) . -722) (722 . 723)) nil (23706 39987 440341 460000) 0 nil]) ((622 . 630) (#("    " 0 4 (fontified t)) . 622) (undo-tree-id878 . -4) (undo-tree-id879 . -3) 625) nil (23706 39987 440353 872000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -626) (undo-tree-id880 . -7) (622 . 626)) nil (23706 39987 440362 722000) 0 nil]) ((622 . 630) (#("    " 0 4 (fontified t)) . 622) (undo-tree-id881 . 4)) nil (23706 39987 440370 478000) 0 nil] [nil nil ((622 . 624)) ((#("  " 0 2 (fontified t)) . 622) (undo-tree-id822 . -1) (undo-tree-id823 . 2) (undo-tree-id824 . 1) (undo-tree-id825 . 1) (undo-tree-id826 . 1)) (23706 39691 179152 488000) 0 nil]) ((#("        " 0 8 (fontified nil)) . -626) (undo-tree-id706 . -8) (622 . 626)) nil (23706 39691 179567 623000) 0 nil]) ((#(";" 0 1 (rear-nonsticky t fontified t)) . 594) (undo-tree-id707 . -1) (undo-tree-id708 . -1)) nil (23706 39691 179173 704000) 0 nil]) ((576 . 577)) nil (23706 39691 179176 278000) 0 nil]) ((#("        console.log(now);
" 0 8 (fontified t) 8 23 (fontified t) 23 26 (fontified t)) . 543) (undo-tree-id709 . -11)) nil (23706 39691 179180 485000) 0 nil]) ((541 . 542)) nil (23706 39691 179182 724000) 0 nil]) ((375 . 376)) nil (23706 39691 179184 650000) 0 nil]) ((#("," 0 1 (fontified t)) . 373)) nil (23706 39691 179186 512000) 0 nil]) ((#(" " 0 1 (fontified t)) . 422)) nil (23706 39691 179188 823000) 0 nil]) ((442 . 445)) nil (23706 39691 179190 826000) 0 nil]) ((#(")" 0 1 (fontified t)) . 441)) nil (23706 39691 179192 476000) 0 nil]) ((#("function(" 0 8 (fontified t face font-lock-keyword-face) 8 9 (fontified t)) . 437) (undo-tree-id710 . -4) (undo-tree-id711 . 9) (undo-tree-id712 . 9)) nil (23706 39691 179199 263000) 0 nil]) ((372 . 373) (#("\"" 0 1 (rear-nonsticky t fontified t face font-lock-string-face)) . 372)) nil (23706 39691 179202 20000) 0 nil]) ((367 . 368) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 367) (undo-tree-id713 . -1)) nil (23706 39691 179206 456000) 0 nil]) ((#(" " 0 1 (fontified t)) . 407) (undo-tree-id714 . 1)) nil (23706 39691 179210 731000) 0 nil]) ((423 . 424)) nil (23706 39691 179213 103000) 0 nil]) ((#("}" 0 1 (fontified t)) . 423) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . 1) (undo-tree-id718 . 1)) nil (23706 39691 179220 721000) 0 nil]) ((#("      " 0 6 (fontified nil)) . 423) (undo-tree-id719 . 6) (undo-tree-id720 . 6) (undo-tree-id721 . 6) (undo-tree-id722 . 6) (#("
" 0 1 (fontified t)) . -423) (undo-tree-id723 . 1) (undo-tree-id724 . 1) (undo-tree-id725 . 1) (undo-tree-id726 . 1) 422) nil (23706 39691 179236 164000) 0 nil]) ((#(";" 0 1 (fontified t)) . -423) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (#("h" 0 1 (fontified t)) . -424) (undo-tree-id730 . 1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) 425) nil (23706 39691 179251 291000) 0 nil]) ((#("return" 0 6 (fontified t face font-lock-keyword-face)) . 407) (undo-tree-id734 . 6) (undo-tree-id735 . -3) 410) nil (23706 39691 179258 61000) 0 nil]) ((430 . 431)) nil (23706 39691 179260 444000) 0 nil]) ((#("{" 0 1 (fontified t)) . 407) (undo-tree-id736 . 1)) nil (23706 39691 179263 696000) 0 nil]) ((#("        " 0 8 (fontified nil)) . 408) (#("
" 0 1 (fontified t)) . -408) 407) nil (23706 39691 179267 30000) 0 nil]) ((406 . 407) (404 . 406) (#("+" 0 1 (fontified t)) . -404) (undo-tree-id737 . -1) 405 (404 . 405)) nil (23706 39691 179272 538000) 0 nil]) ((#(")" 0 1 (fontified t)) . 403)) nil (23706 39691 179275 614000) 0 nil]) ((#("(" 0 1 (fontified t)) . 395)) nil (23706 39691 179277 655000) 0 nil]) ((#("function" 0 8 (fontified t face font-lock-keyword-face)) . 395) (undo-tree-id738 . -1) 396) nil (23706 39691 179281 605000) 0 nil]) ((#("
" 0 1 (fontified t)) . 186) (undo-tree-id739 . 1) (undo-tree-id740 . 1) (undo-tree-id741 . 1) (undo-tree-id742 . 1) (undo-tree-id743 . 1) (undo-tree-id744 . 1) (undo-tree-id745 . 1) (undo-tree-id746 . 1) (undo-tree-id747 . 1) (undo-tree-id748 . 1) (undo-tree-id749 . 1) (undo-tree-id750 . 1) (undo-tree-id751 . 1) (undo-tree-id752 . 1) (undo-tree-id753 . 1) (undo-tree-id754 . 1) (undo-tree-id755 . 1) (undo-tree-id756 . 1) (undo-tree-id757 . 1) (undo-tree-id758 . 1) (undo-tree-id759 . 1) (undo-tree-id760 . 1) (undo-tree-id761 . 1)) nil (23706 39691 179316 892000) 0 nil]) ((#("
" 0 1 (fontified t)) . 187)) nil (23706 39691 179321 973000) 0 nil]) ((#("  " 0 2 (fontified t)) . -240) (undo-tree-id762 . -2) 242 (239 . 242) 238) nil (23706 39691 179327 136000) 0 nil]) ((#("  ``
" 0 2 (fontified t) 2 3 (fontified t face font-lock-string-face) 3 4 (fontified t face font-lock-string-face) 4 5 (fontified t)) . 240) (undo-tree-id763 . 2) (undo-tree-id764 . -2) 242) nil (23706 39691 179332 926000) 0 nil]) ((242 . 244) (#("`" 0 1 (fontified nil)) . -242) (242 . 243) (240 . 242) (240 . 241) 242) nil (23706 39691 179337 421000) 0 nil]) ((nil rear-nonsticky nil 241 . 242) (#("
" 0 1 (fontified nil)) . -660) (239 . 661) 236) nil (23706 39691 179341 78000) 0 nil]) ((#("  updateTime() {
    const that = this;
    fetch(
      'http://worldtimeapi.org/api/timezone/America/New_York',
      { mode: \"cors\", }
    )
      .then(function(response) {
        return response.json();
      })
      .then(function(json) {
        setTimeout(() => that.updateTime(), 1000);

        const now = new Date(json.unixtime)
        console.log(now);
        that.setState({ time: now});
      });
  };
" 0 2 (fontified t) 2 12 (fontified t) 12 15 (fontified t) 15 16 (fontified t) 16 17 (fontified t) 17 21 (fontified t) 21 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t) 27 31 (fontified t face font-lock-variable-name-face) 31 34 (fontified t) 34 38 (fontified t face font-lock-constant-face) 38 39 (fontified t) 39 40 (fontified t) 40 44 (fontified t) 44 50 (fontified t) 50 51 (fontified t) 51 57 (fontified t) 57 58 (fontified t face font-lock-string-face) 58 63 (fontified t face font-lock-string-face) 63 65 (fontified t face font-lock-string-face) 65 110 (fontified t face font-lock-string-face) 110 111 (rear-nonsticky t fontified t face font-lock-string-face) 111 112 (fontified t face font-lock-string-face) 112 113 (fontified t) 113 114 (fontified t) 114 120 (fontified t) 120 122 (fontified t) 122 128 (fontified t) 128 133 (fontified t face font-lock-string-face) 133 134 (rear-nonsticky t fontified t face font-lock-string-face) 134 135 (fontified t) 135 136 (fontified t) 136 137 (fontified t) 137 138 (fontified t) 138 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 150 (fontified t) 150 156 (fontified t) 156 164 (fontified t face font-lock-keyword-face) 164 165 (fontified t) 165 173 (fontified t face font-lock-variable-name-face) 173 175 (fontified t) 175 176 (fontified t js--pstate (#1=(nil 3 function 342 t nil) #5=(nil . #2=(-2305843009213693952 toplevel nil nil nil)))) 176 177 (fontified t) 177 185 (fontified t) 185 191 (fontified t face font-lock-keyword-face) 191 209 (fontified t) 209 215 (fontified t) 215 216 (fontified t js--pend #1#) 216 218 (fontified t) 218 224 (fontified t) 224 230 (fontified t) 230 238 (fontified t face font-lock-keyword-face) 238 239 (fontified t) 239 243 (fontified t face font-lock-variable-name-face) 243 245 (fontified t) 245 246 (fontified t js--pstate (#3=(nil 3 function 416 t nil) ((#1#) . #2#))) 246 247 (fontified t) 247 255 (fontified t) 255 265 (fontified t) 265 266 (fontified t) 266 277 (fontified t) 277 287 (fontified t) 287 289 (fontified t) 289 295 (fontified t) 295 298 (fontified t) 298 299 (fontified t) 299 307 (fontified t) 307 312 (fontified t face font-lock-keyword-face) 312 313 (fontified t) 313 316 (fontified t face font-lock-variable-name-face) 316 319 (fontified t) 319 322 (fontified t face font-lock-keyword-face) 322 323 (fontified t) 323 327 (fontified t face font-lock-type-face) 327 337 (fontified t) 337 338 (fontified t) 338 341 (fontified t) 341 343 (fontified t) 343 351 (fontified t) 351 366 (fontified t) 366 369 (fontified t) 369 377 (fontified t) 377 381 (fontified t) 381 390 (fontified t) 390 391 (fontified t) 391 402 (fontified t) 402 403 (fontified t) 403 404 (fontified t) 404 406 (fontified t) 406 412 (fontified t) 412 413 (fontified t js--pend #3#) 413 416 (fontified t) 416 419 (fontified t) 419 420 (rear-nonsticky t fontified t) 420 421 (fontified t)) . 186) (undo-tree-id765 . -418) (undo-tree-id766 . -2) (undo-tree-id767 . -418) (undo-tree-id768 . -404) (undo-tree-id769 . -399) (undo-tree-id770 . -368) (undo-tree-id771 . -58) (undo-tree-id772 . -338) (undo-tree-id773 . 333) (undo-tree-id774 . 246) (undo-tree-id775 . -338) (undo-tree-id776 . -88) (undo-tree-id777 . 333) (undo-tree-id778 . 333) (undo-tree-id779 . 333) (undo-tree-id780 . 333) (undo-tree-id781 . 333) (undo-tree-id782 . 333) (undo-tree-id783 . 333) (undo-tree-id784 . 333) (undo-tree-id785 . 333) (undo-tree-id786 . 333) (undo-tree-id787 . -88) (undo-tree-id788 . -122) (undo-tree-id789 . 292) (undo-tree-id790 . 292) (undo-tree-id791 . 292) (undo-tree-id792 . 292) (undo-tree-id793 . 292) (undo-tree-id794 . 292) (undo-tree-id795 . 292) (undo-tree-id796 . 292) (undo-tree-id797 . 421) (undo-tree-id798 . 421) (undo-tree-id799 . -418) (undo-tree-id800 . -2) (undo-tree-id801 . -418) 604) nil (23706 39691 179398 240000) 0 nil]) ((#("  " 0 2 (fontified t)) . 185) (undo-tree-id802 . -2)) nil (23706 39691 179406 247000) 0 nil]) ((177 . 178)) nil (23706 39691 179408 580000) 0 nil]) ((176 . 177) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 176)) nil (23706 39691 179411 106000) 0 nil]) ((167 . 168) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 167)) nil (23706 39691 179413 732000) 0 nil]) ((#("k" 0 1 (fontified t)) . -186) (undo-tree-id803 . -1) 187 (186 . 187) (183 . 186) 182) nil (23706 39691 179419 263000) 0 nil]) ((#("}" 0 1 (fontified t)) . 200) (undo-tree-id804 . 1)) nil (23706 39691 179423 375000) 0 nil]) ((199 . 201) (#("{" 0 1 (fontified nil)) . -199) (199 . 200) (198 . 199) (#(")" 0 1 (fontified nil)) . 198) (197 . 198) (196 . 198) (#("(" 0 1 (fontified nil)) . -196) (196 . 197) (#(" " 0 1 (fontified t)) . -196) (undo-tree-id805 . -1) 197 (#("= () => {" 0 2 (fontified t) 2 8 (fontified t) 8 9 (fontified t)) . 197)) nil (23706 39691 179432 761000) 0 nil]) ((#("  state = 
" 0 7 (fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 11 (fontified t)) . 184) (undo-tree-id806 . -7) (undo-tree-id807 . -11) (undo-tree-id808 . -11) (undo-tree-id809 . -8) (undo-tree-id810 . -8) (undo-tree-id811 . -8) (undo-tree-id812 . 3) (undo-tree-id813 . 3) (undo-tree-id814 . -8) (undo-tree-id815 . -8) (undo-tree-id816 . -8) (undo-tree-id817 . -9) (undo-tree-id818 . -8) 193) nil (23706 39691 179457 777000) 0 nil]) ((158 . 159) (#("
" 0 1 (fontified t)) . -158) (undo-tree-id819 . -1) (undo-tree-id820 . -1) 157) nil (23706 39691 179464 944000) 0 nil]) ((nil rear-nonsticky nil 178 . 179) (nil fontified nil 159 . 179) (159 . 179)) nil (23706 39691 179468 103000) 0 nil]) ((#("      " 0 6 (fontified t)) . -159) (undo-tree-id821 . -6) 165 (158 . 165) 151) nil (23706 39691 179473 310000) 0 nil] [nil nil ((nil rear-nonsticky nil 170 . 171) (nil fontified nil 151 . 171) (151 . 171)) ((#("{ time: \"3:35 EST\"};" 0 8 (fontified nil) 8 18 (fontified nil face font-lock-string-face) 18 19 (fontified nil) 19 20 (fontified nil rear-nonsticky nil)) . 151) (undo-tree-id700 . -19) (undo-tree-id701 . -19) (undo-tree-id702 . 1) (undo-tree-id703 . 20) (undo-tree-id704 . -1) (undo-tree-id705 . -2) (nil rear-nonsticky t 170 . 171)) (23706 39520 376772 787000) 0 nil] [nil nil ((nil rear-nonsticky nil 171 . 172) (nil fontified nil 152 . 172) (152 . 172) 151) ((#("{ time: \"3:35 EST\"};" 0 8 (fontified nil) 8 18 (fontified nil face font-lock-string-face) 18 19 (fontified nil) 19 20 (fontified nil rear-nonsticky nil)) . 152) (undo-tree-id697 . -19) (undo-tree-id698 . -19) (undo-tree-id699 . 1) (nil rear-nonsticky t 171 . 172)) (23706 39519 477890 407000) 0 nil]) ((#("{ time: \"3:35 EST\"};" 0 8 (fontified t) 8 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 20 (fontified t)) . 173) (undo-tree-id670 . 15) (undo-tree-id671 . 16) (undo-tree-id672 . 15) (undo-tree-id673 . 17) (undo-tree-id674 . 16) (undo-tree-id675 . 18) (undo-tree-id676 . 17) (undo-tree-id677 . 19) (undo-tree-id678 . 18) (undo-tree-id679 . 20) (undo-tree-id680 . 19) (undo-tree-id681 . 20) (undo-tree-id682 . 20)) nil (23706 39520 376903 865000) 0 nil]) ((155 . 158) (#(" " 0 1 (fontified t)) . -155) (undo-tree-id683 . -1) (undo-tree-id684 . 1) 156 (152 . 156) (146 . 152) (141 . 146) (140 . 141) (#(")" 0 1 (fontified nil)) . 140) (139 . 140) (#(" " 0 1 (fontified nil)) . -139) (139 . 140) (#(")" 0 1 (fontified nil)) . -139) (135 . 140) (#("e" 0 1 (fontified t)) . -135) (undo-tree-id685 . -1) 136 (134 . 136) (133 . 135) (#("(" 0 1 (fontified nil face font-lock-keyword-face)) . -133) (133 . 134) (128 . 133) (124 . 128) (124 . 125) 125) nil (23706 39519 477930 735000) 0 nil]) ((#("O" 0 1 (fontified t)) . -126) (undo-tree-id686 . -1) (undo-tree-id687 . 1) 127 (126 . 127) (123 . 126) (122 . 124) (#("{" 0 1 (fontified nil)) . -122) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (121 . 123) (#(")" 0 1 (fontified nil)) . 121) (undo-tree-id690 . -1) (undo-tree-id691 . 1) (undo-tree-id692 . 1) (undo-tree-id693 . 1) (undo-tree-id694 . 1) (undo-tree-id695 . 1) (115 . 121) (114 . 116) (#("(" 0 1 (fontified nil)) . -114) (114 . 115) (#(" " 0 1 (fontified t)) . -114) (undo-tree-id696 . -1) 115 (103 . 115) (101 . 103) (101 . 102) 107) nil (23706 39519 477960 694000) 0 nil] [nil nil ((#(")" 0 1 (fontified nil)) . 110) (undo-tree-id621 . 1) (109 . 110) (108 . 110) (#("(" 0 1 (fontified nil)) . 108) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (108 . 109) (#(" =" 0 1 (fontified t) 1 2 (fontified t)) . 108) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . 1) (undo-tree-id629 . 1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . 1) (undo-tree-id633 . 1) (undo-tree-id634 . 1) (undo-tree-id635 . 1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . 1) (undo-tree-id639 . 2) (undo-tree-id640 . 1) (undo-tree-id641 . 1) (undo-tree-id642 . 2) (undo-tree-id643 . 2) (undo-tree-id644 . 1) (undo-tree-id645 . 2) (undo-tree-id646 . 2) (undo-tree-id647 . 1) (undo-tree-id648 . 2) (undo-tree-id649 . 1) (undo-tree-id650 . 1) (undo-tree-id651 . 1)) ((108 . 110) (#("(" 0 1 (fontified nil)) . 108) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (108 . 109) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 108) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . 1) (undo-tree-id657 . 2) (undo-tree-id658 . 1) (undo-tree-id659 . 1) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (#(")" 0 1 (fontified nil)) . 109) (undo-tree-id664 . -1) (undo-tree-id665 . 1) (undo-tree-id666 . 1) (undo-tree-id667 . 1) (undo-tree-id668 . 1) (undo-tree-id669 . -1) (110 . 111)) (23706 38866 713524 824000) 0 nil] [nil nil ((#("  state = { time: \"3:35 EST\"};
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 18 (fontified t) 18 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 30 (fontified t) 30 31 (fontified t)) . 101) (undo-tree-id543 . -8) (undo-tree-id544 . -7) (undo-tree-id545 . -31) (undo-tree-id546 . -31) (undo-tree-id547 . -8) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . 23) (undo-tree-id551 . 23) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . 23) (undo-tree-id555 . 23) (undo-tree-id556 . 23) (undo-tree-id557 . 23) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -8) (undo-tree-id561 . 23) (undo-tree-id562 . 23) (undo-tree-id563 . 23) (undo-tree-id564 . 23) (undo-tree-id565 . 23) (undo-tree-id566 . -8) (undo-tree-id567 . -9) (undo-tree-id568 . 23) (undo-tree-id569 . 23) (undo-tree-id570 . 23) (undo-tree-id571 . 23) (undo-tree-id572 . 23) (undo-tree-id573 . 23) 109) ((101 . 132)) (23706 38801 925614 575000) 0 nil] [nil nil ((#("  state = { time: \"3:35 EST\"};
" 0 8 (fontified t) 8 9 (fontified t) 9 10 (fontified t) 10 18 (fontified t) 18 22 (fontified t face font-lock-string-face) 22 23 (fontified t face font-lock-string-face) 23 27 (fontified t face font-lock-string-face) 27 28 (fontified t face font-lock-string-face) 28 30 (fontified t) 30 31 (fontified t)) . 101) (undo-tree-id483 . -8) (undo-tree-id484 . -7) (undo-tree-id485 . -31) (undo-tree-id486 . -31) (undo-tree-id487 . -8) (undo-tree-id488 . -9) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . 23) (undo-tree-id493 . 23) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . 23) (undo-tree-id497 . 23) (undo-tree-id498 . 23) (undo-tree-id499 . 23) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . 23) (undo-tree-id504 . 23) 109) ((101 . 132)) (23706 38792 670676 875000) 0 nil]) ((731 . 734)) ((#("
  " 0 3 (fontified t)) . 731)) (23706 38867 865570 822000) 0 nil]) ((#("
" 0 1 (fontified t)) . -731) 728) nil (23706 38865 61331 943000) 0 nil]) ((724 . 729)) nil (23706 38792 670688 80000) 0 nil]) ((#("
" 0 1 (fontified t)) . -724) 717) nil (23706 38792 670689 805000) 0 nil]) ((710 . 718) (#(" " 0 1 (fontified nil)) . 710) (709 . 710)) nil (23706 38792 670692 880000) 0 nil]) ((709 . 710) (#("
" 0 1 (fontified t)) . -709) (undo-tree-id505 . 1) 708) nil (23706 38792 670696 793000) 0 nil]) ((#("
" 0 1 (fontified t)) . -709) 677) nil (23706 38792 670699 250000) 0 nil]) ((#("        " 0 8 (fontified t)) . -710) (undo-tree-id506 . -8) 718 (709 . 718)) nil (23706 38792 670702 729000) 0 nil]) ((#("i" 0 1 (fontified t)) . -709) (undo-tree-id507 . -1) 710 (709 . 710)) nil (23706 38792 670706 452000) 0 nil]) ((677 . 685) (#(" " 0 1 (fontified nil)) . 677) (676 . 677)) nil (23706 38792 670708 922000) 0 nil]) ((676 . 677) (#("
" 0 1 (fontified t)) . -676) (undo-tree-id508 . 1) 675) nil (23706 38792 670712 295000) 0 nil]) ((654 . 662) (#(" " 0 1 (fontified nil)) . 654) (653 . 654)) nil (23706 38792 670715 409000) 0 nil]) ((653 . 654) (#("
" 0 1 (fontified t)) . -653) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) 648) nil (23706 38792 670721 809000) 0 nil]) ((639 . 648)) nil (23706 38792 670723 787000) 0 nil]) ((#("
" 0 1 (fontified t)) . -639) (undo-tree-id513 . 1) 638) nil (23706 38792 670726 510000) 0 nil]) (638) nil (23706 38792 670728 343000) 0 nil]) ((#("I" 0 1 (fontified t)) . -639) (undo-tree-id514 . -1) 640 (639 . 640)) nil (23706 38792 670731 572000) 0 nil]) ((626 . 631)) nil (23706 38792 670733 305000) 0 nil]) ((#("
" 0 1 (fontified t)) . -626) (undo-tree-id515 . 1) 625) nil (23706 38792 670736 634000) 0 nil]) ((614 . 616) (#("  " 0 2 (fontified nil)) . 613) (613 . 615) (613 . 614)) nil (23706 38792 670739 772000) 0 nil]) (614) nil (23706 38792 670741 649000) 0 nil]) ((608 . 611)) nil (23706 38792 670743 7000) 0 nil]) ((#("
" 0 1 (fontified t)) . -608) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) 586) nil (23706 38792 670752 502000) 0 nil]) ((#("
" 0 1 (fontified t)) . -610) 609) nil (23706 38792 670755 122000) 0 nil]) ((#("
" 0 1 (fontified t)) . -609) (undo-tree-id524 . 1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1)) nil (23706 38792 670765 126000) 0 nil]) ((#("    " 0 4 (fontified t)) . -609) (undo-tree-id533 . -4) 613 (608 . 613)) nil (23706 38792 670768 964000) 0 nil]) ((585 . 590)) nil (23706 38792 670770 930000) 0 nil]) ((#("
" 0 1 (fontified t)) . -585) 562) nil (23706 38792 670772 532000) 0 nil]) ((561 . 563) (#("  " 0 2 (fontified nil)) . 560) (560 . 562) (560 . 561)) nil (23706 38792 670775 254000) 0 nil]) ((#("
" 0 1 (fontified t)) . 559)) nil (23706 38792 670777 305000) 0 nil]) ((#("k   
" 0 4 (fontified t) 4 5 (fontified t)) . 559) (undo-tree-id534 . -3) 562) nil (23706 38792 670780 449000) 0 nil]) ((552 . 553)) nil (23706 38792 670782 385000) 0 nil]) ((552 . 555)) nil (23706 38792 670783 724000) 0 nil]) ((543 . 550)) nil (23706 38792 670785 225000) 0 nil]) ((#("
" 0 1 (fontified t)) . -543) 514) nil (23706 38792 670786 828000) 0 nil]) ((507 . 515) (#(" " 0 1 (fontified nil)) . 507) (506 . 507)) nil (23706 38792 670789 147000) 0 nil]) ((506 . 507) (#("
" 0 1 (fontified t)) . -506) 488) nil (23706 38792 670791 408000) 0 nil]) ((#("J" 0 1 (fontified t)) . -489) (undo-tree-id535 . -1) 490 (489 . 490) (481 . 489) (#(" " 0 1 (fontified nil)) . 481) (480 . 481)) nil (23706 38792 670795 721000) 0 nil]) ((480 . 481) (#("
" 0 1 (fontified t)) . -480) (undo-tree-id536 . -1) 444) nil (23706 38792 670799 445000) 0 nil]) ((437 . 445) (#("        " 0 8 (fontified nil)) . 436) (436 . 444) (436 . 437)) nil (23706 38792 670802 527000) 0 nil]) ((#("        debugger;
" 0 8 (fontified t) 8 16 (fontified t face font-lock-keyword-face) 16 17 (fontified t) 17 18 (fontified t)) . 436) (undo-tree-id537 . 10) (undo-tree-id538 . -7) 443) nil (23706 38792 670806 392000) 0 nil]) ((436 . 444) (#(" " 0 1 (fontified nil)) . 436) (435 . 436)) nil (23706 38792 670808 824000) 0 nil]) ((435 . 436) (#("
" 0 1 (fontified t)) . -435) (undo-tree-id539 . 1) 434) nil (23706 38792 670812 115000) 0 nil]) ((384 . 393)) nil (23706 38792 670813 911000) 0 nil]) ((#("
" 0 1 (fontified t)) . -384) (undo-tree-id540 . 1) 383) nil (23706 38792 670816 453000) 0 nil]) ((357 . 362) (355 . 356)) nil (23706 38792 670818 458000) 0 nil]) ((355 . 356) (#("
" 0 1 (fontified t)) . -355) (undo-tree-id541 . 1) 354) nil (23706 38792 670821 504000) 0 nil]) ((346 . 353)) nil (23706 38792 670823 11000) 0 nil]) ((#("
" 0 1 (fontified t)) . -346) (undo-tree-id542 . 1) 316) nil (23706 38792 670825 965000) 0 nil]) ((314 . 323)) nil (23706 38792 670827 522000) 0 nil]) ((#("
" 0 1 (fontified t)) . -314) 288) nil (23706 38792 670829 83000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -314) 288) ((314 . 315)) (23706 36821 87224 379000) 0 nil]) ((#("
" 0 1 (fontified t)) . 282) (undo-tree-id379 . 1) (undo-tree-id380 . 1) (undo-tree-id381 . 1)) nil (23706 36821 87782 154000) 0 nil]) ((283 . 289) (#("    " 0 4 (fontified nil)) . 282) (282 . 286) (282 . 283)) nil (23706 36821 87244 402000) 0 nil]) (285) nil (23706 36821 87246 785000) 0 nil]) ((#("
" 0 1 (fontified t)) . 276) (undo-tree-id382 . 1) (undo-tree-id383 . 1) (undo-tree-id384 . 1)) nil (23706 36821 87253 272000) 0 nil]) ((277 . 281) (#("      " 0 6 (fontified nil)) . 276) (276 . 282) (276 . 277)) nil (23706 36821 87262 572000) 0 nil]) ((#("
" 0 1 (fontified t)) . 252) (undo-tree-id385 . 1)) nil (23706 36821 87269 425000) 0 nil]) ((253 . 259) (#("      " 0 6 (fontified nil)) . 252) (252 . 258) (252 . 253)) nil (23706 36821 87273 775000) 0 nil]) (258) nil (23706 36821 87276 321000) 0 nil]) ((#("
" 0 1 (fontified t)) . 189)) nil (23706 36821 87278 201000) 0 nil]) ((#("k" 0 1 (fontified t)) . -196) (undo-tree-id386 . -1) 197 (196 . 197) (190 . 196) (#("      " 0 6 (fontified nil)) . 189) (189 . 195) (189 . 190)) nil (23706 36821 87286 226000) 0 nil]) ((#("
" 0 1 (fontified t)) . 178)) nil (23706 36821 87289 454000) 0 nil]) ((179 . 183) (#("    " 0 4 (fontified nil)) . 178) (178 . 182) (178 . 179) (#(" " 0 1 (fontified t)) . -178) (undo-tree-id387 . -1) 179 (178 . 179)) nil (23706 36821 87296 653000) 0 nil]) ((#("
" 0 1 (fontified t)) . 155)) nil (23706 36821 87300 165000) 0 nil]) ((#("k" 0 1 (fontified t)) . -160) (undo-tree-id388 . -1) 161 (160 . 161) (156 . 160) (#("    " 0 4 (fontified nil)) . 155) (155 . 159) (155 . 156)) nil (23706 36821 87307 638000) 0 nil]) ((#("
" 0 1 (fontified t)) . 132) (undo-tree-id389 . 1) (undo-tree-id390 . 1) (undo-tree-id391 . 1) (undo-tree-id392 . 1)) nil (23706 36821 87317 18000) 0 nil]) ((#("
" 0 1 (fontified t)) . 132) (undo-tree-id393 . 1) (undo-tree-id394 . 1) (undo-tree-id395 . 1) (undo-tree-id396 . 1)) nil (23706 36821 87325 130000) 0 nil]) ((#("
" 0 1 (fontified t)) . 132) (undo-tree-id397 . 1) (undo-tree-id398 . 1) (undo-tree-id399 . 1) (undo-tree-id400 . 1)) nil (23706 36821 87333 23000) 0 nil]) ((135 . 137) (#("  " 0 2 (fontified nil)) . 134) (134 . 136) (134 . 135) (#(" " 0 1 (fontified t)) . -134) (undo-tree-id401 . -1) 135 (134 . 135)) nil (23706 36821 87340 639000) 0 nil]) ((#("    " 0 4 (fontified t)) . -442) (undo-tree-id402 . -3) (#("    " 0 4 (fontified t)) . -424) (undo-tree-id403 . -3) (#("    " 0 4 (fontified t)) . -388) (undo-tree-id404 . -3) (#("    " 0 4 (fontified t)) . -378) (undo-tree-id405 . -3) (#("    " 0 4 (fontified t)) . -335) (undo-tree-id406 . -3) 629) nil (23706 36821 87356 86000) 0 nil]) ((#("    " 0 4 (fontified t)) . -491) (undo-tree-id407 . -3) (#("        " 0 8 (fontified nil)) . -462) (undo-tree-id408 . -3) (458 . 462) (#("        " 0 8 (fontified nil)) . -440) (undo-tree-id409 . -3) (436 . 440) (#("        " 0 8 (fontified nil)) . -400) (undo-tree-id410 . -3) (396 . 400) (#("        " 0 8 (fontified nil)) . -386) (undo-tree-id411 . -3) (382 . 386) (#("        " 0 8 (fontified nil)) . -339) (undo-tree-id412 . -3) (335 . 339) (#("    " 0 4 (fontified t)) . -312) (undo-tree-id413 . -3) (#("    " 0 4 (fontified t)) . -309) (undo-tree-id414 . -3) (#("    " 0 4 (fontified t)) . -285) (undo-tree-id415 . -3) (#("    " 0 4 (fontified t)) . -258) (undo-tree-id416 . -3) (#("    " 0 4 (fontified t)) . -238) (undo-tree-id417 . -3) (#("    " 0 4 (fontified t)) . -181) (undo-tree-id418 . -3) 677) nil (23706 36821 87400 51000) 0 nil]) ((#("    " 0 4 (fontified t)) . -662) (undo-tree-id419 . -3) (#("    " 0 4 (fontified t)) . -637) (undo-tree-id420 . -3) (#("    " 0 4 (fontified t)) . -622) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -3) (#("    " 0 4 (fontified t)) . -616) (undo-tree-id426 . -3) (#("    " 0 4 (fontified t)) . -574) (undo-tree-id427 . -3) (#("        " 0 8 (fontified nil)) . -539) (undo-tree-id428 . -3) (535 . 539) (#("            " 0 12 (fontified nil)) . -506) (undo-tree-id429 . -3) (498 . 506) (#("            " 0 12 (fontified nil)) . -480) (undo-tree-id430 . -3) (472 . 480) (#("            " 0 12 (fontified nil)) . -436) (undo-tree-id431 . -3) (428 . 436) (#("            " 0 12 (fontified nil)) . -418) (undo-tree-id432 . -3) (410 . 418) (#("            " 0 12 (fontified nil)) . -367) (undo-tree-id433 . -3) (359 . 367) (#("        " 0 8 (fontified nil)) . -336) (undo-tree-id434 . -3) (332 . 336) (#("        " 0 8 (fontified nil)) . -329) (undo-tree-id435 . -3) (325 . 329) (#("        " 0 8 (fontified nil)) . -301) (undo-tree-id436 . -3) (297 . 301) (#("        " 0 8 (fontified nil)) . -270) (undo-tree-id437 . -3) (266 . 270) (#("    " 0 4 (fontified t)) . -264) (undo-tree-id438 . -3) (#("        " 0 8 (fontified nil)) . -246) (undo-tree-id439 . -3) (242 . 246) (#("        " 0 8 (fontified nil)) . -185) (undo-tree-id440 . -3) (181 . 185) (#("    " 0 4 (fontified t)) . -174) (undo-tree-id441 . -3) (#("    " 0 4 (fontified t)) . -155) (undo-tree-id442 . -3) 757 (755 . 757) 132) nil (23706 36821 87481 112000) 0 nil]) ((#("  " 0 2 (fontified t)) . -752) (#("    " 0 4 (fontified t)) . -749) (#("      " 0 6 (fontified nil)) . -742) (738 . 742) (#("        " 0 8 (fontified nil)) . -713) (709 . 713) (#("        " 0 8 (fontified nil)) . -694) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . -7) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (undo-tree-id449 . -7) (undo-tree-id450 . -7) (undo-tree-id451 . 1) (undo-tree-id452 . 1) (undo-tree-id453 . 1) (undo-tree-id454 . 1) (undo-tree-id455 . -7) (690 . 694) (#("      " 0 6 (fontified nil)) . -684) (680 . 684) (#("    " 0 4 (fontified t)) . -671) (#("  " 0 2 (fontified t)) . -660) (#("  " 0 2 (fontified t)) . -659) (#("    " 0 4 (fontified t)) . -657) (undo-tree-id456 . 4) (undo-tree-id457 . -4) (undo-tree-id458 . -4) (undo-tree-id459 . -4) (undo-tree-id460 . -4) (undo-tree-id461 . -4) (undo-tree-id462 . 4) (undo-tree-id463 . 4) (undo-tree-id464 . 4) (undo-tree-id465 . 4) (undo-tree-id466 . 4) (undo-tree-id467 . 4) (#("	" 0 1 (fontified nil)) . -638) (634 . 638) (#("    " 0 4 (fontified t)) . -611) (#(" " 0 1 (fontified t)) . -604) (#("          " 0 8 (fontified nil) 8 10 (fontified nil)) . -599) (591 . 599) (#("	      " 0 7 (fontified nil)) . -562) (550 . 562) (#("	      " 0 7 (fontified nil)) . -532) (520 . 532) (#("	      " 0 7 (fontified nil)) . -484) (472 . 484) (#("	      " 0 7 (fontified nil)) . -462) (450 . 462) (#("	      " 0 7 (fontified nil)) . -407) (395 . 407) (#("          " 0 10 (fontified nil)) . -372) (364 . 372) (#("          " 0 10 (fontified nil)) . -361) (353 . 361) (#("            " 0 12 (fontified nil)) . -329) (321 . 329) (#("          " 0 10 (fontified nil)) . -294) (286 . 294) (#("	" 0 1 (fontified nil)) . -284) (280 . 284) (#("	    " 0 5 (fontified nil)) . -262) (254 . 262) (#("	    " 0 5 (fontified nil)) . -197) (189 . 197) (#("	" 0 1 (rear-nonsticky t fontified nil)) . -182) (178 . 182) (#("	" 0 1 (fontified nil)) . -159) (155 . 159) (#("    " 0 4 (fontified t)) . -134) (#("    " 0 4 (fontified t)) . -132) (undo-tree-id468 . -2) (undo-tree-id469 . -1) (undo-tree-id470 . 1) (undo-tree-id471 . 1) (undo-tree-id472 . -3) (undo-tree-id473 . -3) 767) nil (23706 36821 87568 363000) 0 nil]) ((#("
" 0 1 (fontified t)) . 101)) nil (23706 36821 87580 645000) 0 nil]) ((103 . 104) (#("  " 0 2 (fontified nil)) . 101) (undo-tree-id474 . -2) (#(" " 0 1 (fontified nil)) . -103) (undo-tree-id475 . -1) (104 . 105)) nil (23706 36821 87586 620000) 0 nil]) ((134 . 138) (103 . 105) (131 . 132) (#("
" 0 1 (fontified t)) . -131) (undo-tree-id476 . -1) (#(" " 0 1 (fontified t)) . -132) (undo-tree-id477 . -1) (#(" " 0 1 (fontified t)) . -133) (undo-tree-id478 . -1) (#(" " 0 1 (fontified t)) . -134) (undo-tree-id479 . -1) (#(" " 0 1 (fontified t)) . -135) (undo-tree-id480 . -1) 136 (131 . 136) 102) nil (23706 36821 87613 627000) 0 nil]) ((580 . 581)) nil (23706 36821 87617 648000) 0 nil]) ((#("h" 0 1 (fontified t)) . -583) (undo-tree-id481 . -1) 584 (583 . 584) (578 . 583) 566) nil (23706 36821 87621 397000) 0 nil]) ((#("    " 0 4 (fontified t)) . -579) (undo-tree-id482 . -4) 583 (578 . 583) (t 23706 35224 123155 281000) 574) nil (23706 36821 87625 866000) 0 nil]) ((#("no-" 0 3 (fontified t face font-lock-string-face)) . 262) (undo-tree-id371 . 1) (undo-tree-id372 . 1) (undo-tree-id373 . 2) (undo-tree-id374 . 1) (undo-tree-id375 . 3) (undo-tree-id376 . 2) (undo-tree-id377 . 3) (undo-tree-id378 . 3) (t 23706 35096 673815 630000)) nil (23706 35224 108826 699000) 0 nil]) ((270 . 271)) nil (23706 35096 663276 518000) 0 nil]) ((272 . 274)) nil (23706 35096 663280 906000) 0 nil]) ((247 . 253) (#(" " 0 1 (fontified t)) . 247) (undo-tree-id368 . 1) (undo-tree-id369 . 1) (undo-tree-id370 . 1)) nil (23706 35096 663292 188000) 0 nil]) ((185 . 191)) nil (23706 35096 663294 413000) 0 nil]) ((259 . 260) (t 23706 34944 604614 178000)) nil (23706 35096 663295 967000) 0 nil]) ((251 . 254) (t 23706 34927 141373 452000)) nil (23706 34944 591279 995000) 0 nil]) ((#("mode: " 0 6 (fontified t)) . 244) (undo-tree-id347 . -6) (undo-tree-id348 . 6) (undo-tree-id349 . 5) (undo-tree-id350 . 4) (undo-tree-id351 . 3) (undo-tree-id352 . 2) (undo-tree-id353 . 1) (undo-tree-id354 . -6) (undo-tree-id355 . 1) (undo-tree-id356 . 2) (undo-tree-id357 . 1) (undo-tree-id358 . 3) (undo-tree-id359 . 2) (undo-tree-id360 . 4) (undo-tree-id361 . 3) (undo-tree-id362 . 5) (undo-tree-id363 . 4) (undo-tree-id364 . 6) (undo-tree-id365 . 5)) nil (23706 34927 99942 324000) 0 nil]) ((nil rear-nonsticky nil 261 . 262) (nil fontified nil 250 . 262) (250 . 262) (243 . 250) (242 . 244) (#("{" 0 1 (fontified nil)) . -242) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (240 . 243) (t 23706 34542 33484 125000)) nil (23706 34927 99951 321000) 0 nil] [nil nil ((466 . 467) (t 23706 34542 33484 125000)) ((#("" 0 1 (fontified t)) . 466) (undo-tree-id346 . 1)) (23706 34690 789629 262000) 0 nil]) ((465 . 466) (#("T" 0 1 (fontified t)) . 465) (t 23706 34534 720192 512000)) nil (23706 34690 789920 53000) 0 nil]) ((465 . 469)) nil (23706 34534 711319 59000) 0 nil]) ((461 . 465)) nil (23706 34534 711322 916000) 0 nil]) ((#("currentFileTime" 0 15 (fontified t)) . 461) (undo-tree-id336 . -12) (undo-tree-id337 . 1) (undo-tree-id338 . 2) (undo-tree-id339 . 1) (undo-tree-id340 . 3) (undo-tree-id341 . 2) 473) nil (23706 34534 711335 189000) 0 nil]) ((nil rear-nonsticky nil 238 . 239) (nil fontified nil 186 . 239) (186 . 239) (#("http://worldclockapi.com/api/json/est/now" 0 40 (fontified t face font-lock-string-face) 40 41 (rear-nonsticky t fontified t face font-lock-string-face)) . 186) (undo-tree-id342 . 34) (undo-tree-id343 . -20) (undo-tree-id344 . -7) (undo-tree-id345 . 34) 193 (t 23706 34181 48996 588000)) nil (23706 34534 711342 583000) 0 nil]) ((411 . 415) (406 . 411) (399 . 406) (399 . 400) 427 (t 23706 34115 129429 132000)) nil (23706 34180 973451 716000) 0 nil]) ((468 . 471) (#("JSON.stringify(json.currentFileTime)" 0 15 (fontified t) 15 35 (fontified t) 35 36 (fontified t)) . 468) (undo-tree-id329 . -1) (undo-tree-id330 . 36) (undo-tree-id331 . 35) (undo-tree-id332 . 36) 469) nil (23706 34115 122978 643000) 0 nil]) ((450 . 456)) nil (23706 34115 122983 159000) 0 nil]) ((#("	" 0 1 (fontified t)) . 450)) nil (23706 34115 122985 154000) 0 nil]) ((#("            " 0 8 (fontified nil) 8 11 (fontified nil) 11 12 (fontified nil rear-nonsticky t)) . -451) (undo-tree-id333 . -12) (449 . 451) 461) nil (23706 34115 122988 863000) 0 nil]) ((nil rear-nonsticky nil 460 . 461) (#("
" 0 1 (fontified nil)) . -511) (448 . 512) 406) nil (23706 34115 122991 687000) 0 nil]) ((#("            console.log(JSON.stringify(json.currentFileTime));
" 0 8 (fontified t) 8 12 (fontified t) 12 39 (fontified t) 39 59 (fontified t) 59 62 (fontified t) 62 63 (fontified t)) . 349) (undo-tree-id334 . -63) (undo-tree-id335 . -38) 387 (t 23706 34080 339663 196000)) nil (23706 34115 122996 635000) 0 nil]) ((541 . 544) (#("currentFileTime" 0 15 (fontified t)) . 541) (undo-tree-id293 . 15) (undo-tree-id294 . 2) (undo-tree-id295 . 2) (undo-tree-id296 . 2) (undo-tree-id297 . 15) (undo-tree-id298 . 15) (undo-tree-id299 . 15) (undo-tree-id300 . 15) (undo-tree-id301 . 15) (undo-tree-id302 . 15) (undo-tree-id303 . 15) (undo-tree-id304 . 15)) nil (23706 34080 328382 687000) 0 nil]) ((#("." 0 1 (fontified t)) . 541) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1)) nil (23706 34080 328397 493000) 0 nil]) ((#("json" 0 4 (fontified t)) . 541) (undo-tree-id312 . 4)) nil (23706 34080 328402 231000) 0 nil]) ((469 . 481) (#("l" 0 1 (fontified t)) . -469) (undo-tree-id313 . -1) 470 (469 . 470)) nil (23706 34080 328407 217000) 0 nil]) (497) nil (23706 34080 328409 464000) 0 nil]) ((483 . 498) (#("cur" 0 3 (fontified t)) . -483) (undo-tree-id314 . -3) (undo-tree-id315 . 3) (undo-tree-id316 . 2) (undo-tree-id317 . 1) 486 (478 . 486) (477 . 479) (#("(" 0 1 (fontified nil face font-lock-type-face)) . -477) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (477 . 478) (#("I" 0 1 (fontified t face font-lock-type-face)) . -477) (undo-tree-id320 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -478) (undo-tree-id321 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -479) (undo-tree-id322 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -480) (undo-tree-id323 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -481) (undo-tree-id324 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -482) (undo-tree-id325 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -483) (undo-tree-id326 . -1) (#("I" 0 1 (fontified t face font-lock-type-face)) . -484) (undo-tree-id327 . -1) 485 (#("I" 0 1 (fontified t face font-lock-type-face)) . -485) (undo-tree-id328 . -1) 486 (477 . 486) (469 . 477) (461 . 469) (t 23706 34044 873239 551000) 459) nil (23706 34080 328441 154000) 0 nil]) ((509 . 510) (t 23706 34022 906725 814000)) nil (23706 34044 867784 532000) 0 nil] [nil nil ((462 . 469) (462 . 463) (#("	      that.setState({ time: json.currentFileTie});
" 0 11 (fontified t) 11 20 (fontified t) 20 21 (fontified t) 21 29 (fontified t) 29 48 (fontified t) 48 49 (fontified t) 49 50 (fontified t) 50 51 (fontified t) 51 52 (fontified t)) . 462) (undo-tree-id236 . 4) (undo-tree-id237 . -50) (undo-tree-id238 . -29) (undo-tree-id239 . -47) (undo-tree-id241 . 4) (undo-tree-id243 . 4) (undo-tree-id245 . 4) (undo-tree-id247 . 4) (undo-tree-id249 . 4) (undo-tree-id251 . 4) (undo-tree-id253 . 4) (undo-tree-id255 . 4) (undo-tree-id257 . 4) (undo-tree-id259 . 4) (undo-tree-id261 . 4) (undo-tree-id263 . 4) (undo-tree-id265 . 4) (undo-tree-id267 . 4) (undo-tree-id269 . 4) (undo-tree-id271 . 5) (undo-tree-id273 . 5) (undo-tree-id275 . 5) 509) ((462 . 514) (#("
" 0 1 (fontified nil)) . 462) (undo-tree-id292 . 1) (#("	      " 0 7 (fontified t)) . 462) (t 23706 33979 630366 153000)) (23706 33979 612783 806000) 0 nil]) ((#("m" 0 1 (fontified t)) . 509) (undo-tree-id277 . -1) 510) nil (23706 34019 998042 423000) 0 nil]) ((503 . 511) (#("DateTime" 0 7 (fontified t) 7 8 (rear-nonsticky t fontified t)) . 503) (undo-tree-id278 . 3) (undo-tree-id279 . 4) (undo-tree-id280 . 3) (undo-tree-id281 . 5) (undo-tree-id282 . 4) (undo-tree-id283 . 6) (undo-tree-id284 . 5) (undo-tree-id285 . 7) (undo-tree-id286 . 6) (undo-tree-id287 . 8) (undo-tree-id288 . 7) (undo-tree-id289 . 8) (undo-tree-id290 . 8)) nil (23706 33979 612863 5000) 0 nil]) ((402 . 408) (400 . 402) (#("DateTime" 0 2 (fontified t) 2 8 (fontified t)) . 400) (undo-tree-id291 . 8) (t 23706 33706 361849 721000)) nil (23706 33979 612875 422000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 453) (undo-tree-id232 . -1) (undo-tree-id233 . 1) (452 . 453) (#("	" 0 1 (fontified nil)) . -419) (419 . 420) (#("	" 0 1 (fontified nil)) . 419) (413 . 419) (446 . 448) (#("(" 0 1 (fontified nil)) . -446) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (446 . 447) (t 23706 33621 978893 352000)) nil (23706 33706 345494 913000) 0 nil]) ((412 . 455) 415) nil (23706 33621 961765 551000) 0 nil]) ((#("		setTimeout(() => that.updateTime, 1000);
" 0 12 (fontified t) 12 13 (fontified t) 13 24 (fontified t) 24 40 (fontified t) 40 42 (fontified t) 42 43 (fontified t)) . 465) (undo-tree-id223 . 19) (undo-tree-id224 . 40) (undo-tree-id225 . -3) (undo-tree-id226 . -23) (undo-tree-id227 . -23) (undo-tree-id228 . 20) (undo-tree-id229 . 20) (undo-tree-id230 . 20) (undo-tree-id231 . 20) 488 (t 23706 33566 639139 237000)) nil (23706 33621 961815 99000) 0 nil]) ((484 . 489)) nil (23706 33566 627515 92000) 0 nil]) ((#("l" 0 1 (fontified t)) . -483) (undo-tree-id221 . -1) (undo-tree-id222 . 1) 484 (483 . 484) (t 23706 33550 689209 891000)) nil (23706 33566 627532 132000) 0 nil]) ((419 . 423) (#("this" 0 4 (fontified t face font-lock-constant-face)) . 419) (undo-tree-id211 . -3) (undo-tree-id212 . 1) 422) nil (23706 33550 680750 756000) 0 nil]) ((167 . 177) (166 . 167) (#("a" 0 1 (fontified t face font-lock-variable-name-face)) . -166) (undo-tree-id213 . -1) (undo-tree-id214 . 1) (#("t" 0 1 (fontified t face font-lock-variable-name-face)) . -167) (undo-tree-id215 . -1) (undo-tree-id216 . 1) 168 (159 . 168) (#("l" 0 1 (fontified t)) . -159) (undo-tree-id217 . -1) (undo-tree-id218 . 1) (#("e" 0 1 (fontified t)) . -160) (undo-tree-id219 . -1) (undo-tree-id220 . 1) 161 (159 . 161) (158 . 159) (158 . 159) 165 (t 23706 33472 522888 53000)) nil (23706 33550 680771 898000) 0 nil]) ((495 . 496) (t 23706 33447 212999 145000)) nil (23706 33472 513215 393000) 0 nil]) ((#("}" 0 1 (fontified t js--pend (nil 3 function 312 t nil))) . 443) (undo-tree-id209 . -1) (undo-tree-id210 . 1) (t 23706 33430 966403 612000)) nil (23706 33447 201351 783000) 0 nil]) ((482 . 483) (#(")" 0 1 (fontified nil)) . 482) (undo-tree-id190 . 1) (undo-tree-id191 . 1) (undo-tree-id192 . 1) (undo-tree-id193 . 1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . 1) (undo-tree-id200 . 1) (481 . 482) (#(" " 0 1 (fontified nil)) . -481) (481 . 482) (#(")" 0 1 (fontified nil)) . -481) (475 . 482) (465 . 475) (#("update" 0 6 (fontified t)) . -465) (undo-tree-id201 . -6) (undo-tree-id202 . 1) 471 (466 . 471) (461 . 466) (#(")" 0 1 (fontified nil)) . 461) (460 . 461) (459 . 461) (#("(" 0 1 (fontified nil)) . -459) (459 . 460) (#("Q" 0 1 (fontified t)) . -459) (undo-tree-id203 . -1) 460 (459 . 460) (458 . 460) (#("(" 0 1 (fontified nil)) . -458) (448 . 459) (445 . 448) 395) nil (23706 33430 953359 908000) 0 nil]) ((397 . 399) (442 . 443) (#("
" 0 1 (fontified t)) . -442) (undo-tree-id204 . -1) (#("	" 0 1 (fontified t)) . -443) (undo-tree-id205 . -1) (#("	" 0 1 (fontified t)) . -444) (undo-tree-id206 . -1) 445 (442 . 445) 438) nil (23706 33430 953398 412000) 0 nil]) ((nil rear-nonsticky nil 438 . 439) (nil fontified nil 419 . 439) (419 . 439) 418) nil (23706 33430 953410 583000) 0 nil]) ((#("p" 0 1 (fontified t)) . -419) (undo-tree-id207 . -1) (undo-tree-id208 . 1) 420 (419 . 420)) nil (23706 33430 953423 344000) 0 nil]) ((368 . 388) (#("myJson" 0 6 (fontified t)) . 368) (undo-tree-id186 . 6) (undo-tree-id187 . 4) (undo-tree-id188 . 6) (undo-tree-id189 . 6)) ((368 . 374) (#("json.currentDa" 0 14 (fontified nil)) . 368) (undo-tree-id181 . -14) (#("teTime" 0 6 (fontified t)) . 382) (undo-tree-id182 . -5) (undo-tree-id183 . 1) (undo-tree-id184 . 1) (undo-tree-id185 . 1)) (23706 33374 387837 467000) 0 nil] [nil nil ((#("	" 0 1 (fontified nil)) . -333) (329 . 333) 369 (#("            " 0 8 (fontified nil) 8 12 (fontified nil)) . -330) (329 . 330) 380 (372 . 380) (368 . 372) (#("myJson" 0 6 (fontified t)) . 368) (undo-tree-id109 . -2) (undo-tree-id110 . 6) (undo-tree-id111 . 5) (undo-tree-id112 . 6) (undo-tree-id113 . 4) (undo-tree-id114 . 5) (undo-tree-id115 . 3) (undo-tree-id116 . 4) (undo-tree-id117 . 4) (undo-tree-id118 . 3)) ((368 . 374) (#("json" 0 4 (fontified nil)) . 368) (undo-tree-id165 . -4) (undo-tree-id166 . 2) (undo-tree-id167 . 1) (#(".current" 0 8 (fontified nil)) . 372) (undo-tree-id168 . -7) (undo-tree-id169 . 8) (undo-tree-id170 . 7) (undo-tree-id171 . 6) (undo-tree-id172 . 5) (undo-tree-id173 . 4) (undo-tree-id174 . 3) (undo-tree-id175 . 2) (undo-tree-id176 . 1) (undo-tree-id177 . 1) (undo-tree-id178 . 1) (#("	" 0 1 (fontified nil)) . 329) (330 . 342) (#("    " 0 4 (fontified nil)) . 329) (333 . 334)) (23706 33355 416193 85000) 0 nil]) ((321 . 325) (#("myJson" 0 6 (fontified t face font-lock-variable-name-face)) . 321) (undo-tree-id119 . -4) (undo-tree-id120 . 1) (undo-tree-id121 . 2) (undo-tree-id122 . 1) 325) nil (23706 33372 589020 284000) 0 nil]) ((#("\"3:38 EST\" " 0 9 (fontified t face font-lock-string-face) 9 10 (fontified t face font-lock-string-face) 10 11 (fontified t)) . 407) (undo-tree-id123 . 11) (undo-tree-id124 . 10) (undo-tree-id125 . 11) (undo-tree-id126 . 9) (undo-tree-id127 . 10) (undo-tree-id128 . 8) (undo-tree-id129 . 9) (undo-tree-id130 . 9) (undo-tree-id131 . 8) (undo-tree-id132 . 10) (undo-tree-id133 . 9) (undo-tree-id134 . 11) (undo-tree-id135 . 10)) nil (23706 33355 416225 437000) 0 nil]) ((#("	" 0 1 (fontified nil rear-nonsticky t)) . -385) (undo-tree-id136 . -1) (380 . 385) 381) nil (23706 33355 416230 901000) 0 nil]) ((nil rear-nonsticky nil 380 . 381) (#("
" 0 1 (fontified nil)) . -417) (379 . 418) 331) nil (23706 33355 416234 814000) 0 nil]) ((#("	this.setState({ time: \"3:38 EST\" })}
" 0 1 (fontified t) 1 5 (fontified t face font-lock-constant-face) 5 14 (fontified t) 14 15 (fontified t) 15 23 (fontified t) 23 32 (fontified t face font-lock-string-face) 32 33 (fontified t face font-lock-string-face) 33 34 (fontified t) 34 35 (fontified t) 35 36 (fontified t) 36 37 (fontified t) 37 38 (fontified t)) . 394) (undo-tree-id137 . -24) 418) nil (23706 33355 416238 874000) 0 nil]) ((#("
" 0 1 (fontified t)) . 158) (undo-tree-id138 . -1)) nil (23706 33355 416243 952000) 0 nil]) ((nil rear-nonsticky nil 159 . 160) (#("
" 0 1 (fontified nil)) . -394) (158 . 395)) nil (23706 33355 416247 82000) 0 nil]) ((#("	" 0 1 (fontified t)) . -158) (undo-tree-id139 . -1) 159 (158 . 159) (158 . 159)) nil (23706 33355 416251 697000) 0 nil]) ((158 . 159) (#(" " 0 1 (fontified nil)) . 158) (157 . 158)) nil (23706 33355 416254 959000) 0 nil]) ((#("	fetch('http://worldclockapi.com/api/json/est/now')
          .then(function(response) {
            return response.json();
          })
          .then(function(myJson) {
            console.log(JSON.stringify(myJson));
          });
" 0 1 (fontified t) 1 7 (fontified t) 7 8 (fontified t face font-lock-string-face) 8 48 (fontified t face font-lock-string-face) 48 49 (fontified t rear-nonsticky t face font-lock-string-face) 49 50 (fontified t face font-lock-string-face) 50 52 (fontified t) 52 68 (fontified t) 68 76 (fontified t face font-lock-keyword-face) 76 77 (fontified t) 77 85 (fontified t face font-lock-variable-name-face) 85 87 (fontified t) 87 88 (fontified t js--pstate (#4=(nil 3 function 311 t nil) #5#)) 88 89 (fontified t) 89 101 (fontified t) 101 107 (fontified t face font-lock-keyword-face) 107 125 (fontified t) 125 135 (fontified t) 135 136 (fontified t js--pend #4#) 136 138 (fontified t) 138 154 (fontified t) 154 162 (fontified t face font-lock-keyword-face) 162 163 (fontified t) 163 169 (fontified t face font-lock-variable-name-face) 169 171 (fontified t) 171 172 (fontified t js--pstate (#6=(nil 3 function 397 t nil) ((#4#) . #2#))) 172 173 (fontified t) 173 181 (fontified t) 181 222 (fontified t) 222 230 (fontified t) 230 232 (fontified t) 232 233 (fontified t js--pend #6#) 233 234 (fontified t) 234 235 (rear-nonsticky t fontified t) 235 236 (fontified t)) . 243) (undo-tree-id140 . -235) (undo-tree-id141 . 187) (undo-tree-id142 . 1) (undo-tree-id143 . 2) (undo-tree-id144 . 2) (undo-tree-id145 . 2) (undo-tree-id146 . 2) (undo-tree-id147 . -1) (undo-tree-id148 . -234) (undo-tree-id149 . 2) (undo-tree-id150 . 2) (undo-tree-id151 . -234) (undo-tree-id152 . 187) (undo-tree-id153 . 187) (undo-tree-id154 . 188) (undo-tree-id155 . 188) (undo-tree-id156 . -48) (undo-tree-id157 . -48) (undo-tree-id158 . -235) (undo-tree-id159 . -24) (undo-tree-id160 . -235) (undo-tree-id161 . 221) (undo-tree-id162 . -28) (undo-tree-id163 . -24) (undo-tree-id164 . -235) 478 (t 23706 33209 894022 876000)) nil (23706 33355 416293 817000) 0 nil]) ((nil rear-nonsticky nil 291 . 292) (nil fontified nil 251 . 292) (251 . 292)) nil (23706 33209 881098 963000) 0 nil]) ((#("http://example.com/movies.json" 0 30 (fontified t face font-lock-string-face)) . 251) (undo-tree-id101 . -1) (undo-tree-id102 . 4) (undo-tree-id103 . -30) (undo-tree-id104 . 30) (undo-tree-id105 . 30) (undo-tree-id106 . -4) (undo-tree-id107 . 29) (undo-tree-id108 . 30) 252) nil (23706 33209 881177 117000) 0 nil]) ((454 . 462)) nil (23706 33209 881187 137000) 0 nil]) ((405 . 413)) nil (23706 33209 881191 450000) 0 nil] [nil nil ((412 . 420)) ((#("        " 0 8 (fontified t)) . 412) (undo-tree-id88 . -7) (undo-tree-id89 . 8) (undo-tree-id90 . 8) (undo-tree-id91 . 8) (undo-tree-id92 . 8) (undo-tree-id93 . 8) (undo-tree-id94 . 8) (undo-tree-id95 . 8) (undo-tree-id96 . 8) (undo-tree-id97 . 1) (undo-tree-id98 . 8) (undo-tree-id99 . 1) (undo-tree-id100 . 8)) (23706 33181 566244 988000) 0 nil]) ((371 . 379)) nil (23706 33181 566327 482000) 0 nil]) ((359 . 367)) nil (23706 33181 566249 602000) 0 nil]) ((325 . 333)) nil (23706 33181 566250 701000) 0 nil]) ((286 . 294)) nil (23706 33181 566251 720000) 0 nil]) ((nil rear-nonsticky nil 418 . 419) (nil fontified nil 244 . 419) (244 . 419) (242 . 244) 224) nil (23706 33181 566253 765000) 0 nil] [nil nil ((499 . 500) (nil rear-nonsticky nil 498 . 499) (nil fontified nil 244 . 499) (244 . 499) (#("Q" 0 1 (fontified t)) . -244) (undo-tree-id75 . -1) (undo-tree-id76 . 1) 245 (244 . 245) (242 . 244) 224) ((#("
	" 0 1 (fontified t) 1 2 (fontified nil)) . 242) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (#("Q" 0 1 (fontified nil)) . 244) (undo-tree-id81 . -1) (undo-tree-id82 . 1) (244 . 245) (#("{\"$id\":\"1\",\"currentDateTime\":\"2019-03-26T15:44-04:00\",\"utcOffset\":\"-04:00:00\",\"isDayLightSavingsTime\":true,\"dayOfTheWeek\":\"Tuesday\",\"timeZoneName\":\"Eastern Standard Time\",\"currentFileTime\":131980886675860770,\"ordinalDate\":\"2019-85\",\"serviceResponse\":null}" 0 1 (fontified nil) 1 6 (fontified nil face font-lock-string-face) 6 7 (fontified nil) 7 10 (fontified nil face font-lock-string-face) 10 11 (fontified nil) 11 28 (fontified nil face font-lock-string-face) 28 29 (fontified nil) 29 53 (fontified nil face font-lock-string-face) 53 54 (fontified nil) 54 65 (fontified nil face font-lock-string-face) 65 66 (fontified nil) 66 77 (fontified nil face font-lock-string-face) 77 78 (fontified nil) 78 101 (fontified nil face font-lock-string-face) 101 102 (fontified nil) 102 106 (fontified nil face font-lock-constant-face) 106 107 (fontified nil) 107 121 (fontified nil face font-lock-string-face) 121 122 (fontified nil) 122 131 (fontified nil face font-lock-string-face) 131 132 (fontified nil) 132 146 (fontified nil face font-lock-string-face) 146 147 (fontified nil) 147 170 (fontified nil face font-lock-string-face) 170 171 (fontified nil) 171 188 (fontified nil face font-lock-string-face) 188 208 (fontified nil) 208 221 (fontified nil face font-lock-string-face) 221 222 (fontified nil) 222 231 (fontified nil face font-lock-string-face) 231 232 (fontified nil) 232 249 (fontified nil face font-lock-string-face) 249 250 (fontified nil) 250 254 (fontified nil face font-lock-constant-face) 254 255 (fontified nil rear-nonsticky nil)) . 244) (undo-tree-id83 . -255) (undo-tree-id84 . 255) (nil rear-nonsticky t 498 . 499) (#("u" 0 1 (fontified t)) . 499) (undo-tree-id85 . 1) (undo-tree-id86 . 1) (undo-tree-id87 . 1)) (23706 33117 848096 678000) 0 nil]) ((#("k" 0 1 (fontified t)) . -247) (undo-tree-id77 . -1) 248 (247 . 248) (244 . 247) (242 . 243)) nil (23706 33117 848340 527000) 0 nil]) ((223 . 224) (#(" " 0 1 (fontified nil)) . 222) (undo-tree-id78 . -1) (223 . 224) (t 23706 32948 18433 608000)) nil (23706 33117 848123 800000) 0 nil]) ((209 . 213) (#("Did" 0 3 (fontified t)) . 209) (undo-tree-id73 . 3) (undo-tree-id74 . 2) (t 23706 32880 52033 722000)) nil (23706 32948 7686 869000) 0 nil]) ((240 . 241)) nil (23706 32880 41570 793000) 0 nil]) ((239 . 240) (#(")" 0 1 (fontified nil)) . 239) (undo-tree-id57 . -1) (undo-tree-id58 . 1) (238 . 239) (237 . 239) (#("(" 0 1 (fontified nil)) . -237) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (230 . 238) (#("t" 0 1 (fontified t)) . -230) (undo-tree-id61 . -1) 231 (221 . 231) (220 . 222) (#("{" 0 1 (fontified nil)) . -220) (220 . 221) (#("u" 0 1 (fontified t)) . -220) (undo-tree-id62 . -1) (#("p" 0 1 (fontified t)) . -221) (undo-tree-id63 . -1) 222 (219 . 222) (#(")" 0 1 (fontified nil)) . 219) (218 . 219) (217 . 219) (#("(" 0 1 (fontified nil)) . -217) (217 . 218) (212 . 217) (#("(" 0 1 (fontified nil)) . -212) (undo-tree-id64 . -1) (#(")" 0 1 (fontified t)) . 213) (199 . 200) (211 . 213) (#("(" 0 1 (fontified nil)) . -211) (202 . 212) (#("p" 0 1 (fontified t)) . -202) (undo-tree-id65 . -1) (#("o" 0 1 (fontified t)) . -203) (undo-tree-id66 . -1) (#("n" 0 1 (fontified t)) . -204) (undo-tree-id67 . -1) (#("e" 0 1 (fontified t)) . -205) (undo-tree-id68 . -1) (#("t" 0 1 (fontified t)) . -206) (undo-tree-id69 . -1) 207 (199 . 207) (#(" " 0 1 (fontified t)) . -199) (undo-tree-id70 . -1) 200 (196 . 200) (#("    " 0 4 (fontified nil)) . 195) (undo-tree-id71 . -4) (199 . 200) (194 . 199) 137) nil (23706 32880 41673 256000) 0 nil]) ((#("      this.updateTime();
" 0 6 (fontified t) 6 10 (fontified t face font-lock-constant-face) 10 21 (fontified t) 21 24 (fontified t) 24 25 (fontified t)) . 211) (undo-tree-id72 . -21) 232 (t 23706 32809 102304 939000)) nil (23706 32880 41709 812000) 0 nil]) ((152 . 155)) nil (23706 32809 91203 419000) 0 nil]) ((147 . 150) (t 23706 32755 479171 2000)) nil (23706 32809 91211 109000) 0 nil]) ((228 . 229) (#(")" 0 1 (fontified nil)) . 228) (undo-tree-id49 . -1) (undo-tree-id50 . 1) (227 . 228) (209 . 211) (224 . 226) (#("(" 0 1 (fontified nil)) . -224) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (209 . 225) (#("." 0 1 (fontified t)) . -209) (undo-tree-id53 . -1) (undo-tree-id54 . 1) 210 (209 . 210) (#(" " 0 1 (fontified t)) . -209) (undo-tree-id55 . -1) (#(" " 0 1 (fontified t)) . -210) (undo-tree-id56 . -1) 211 (204 . 211) (t 23706 32732 495921 506000) 203) nil (23706 32755 464775 168000) 0 nil]) ((184 . 185)) nil (23706 32732 484503 125000) 0 nil]) ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 184) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . 1) (undo-tree-id35 . 1) (undo-tree-id36 . -1) (183 . 184) (#(" " 0 1 (fontified nil)) . -183) (undo-tree-id37 . -1) (183 . 184) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -183) (undo-tree-id38 . -1) (182 . 184) (176 . 182) (#("3" 0 1 (fontified t face font-lock-string-face)) . -176) (undo-tree-id39 . -1) 177 (175 . 177) (174 . 176) (#("\"" 0 1 (fontified nil)) . -174) (174 . 175) (173 . 174) (167 . 173) (166 . 168) (#("{" 0 1 (fontified nil)) . -166) (166 . 167) (165 . 167) (#("(" 0 1 (fontified nil)) . -165) (165 . 166) (158 . 165) (151 . 158) (150 . 152) (#("{" 0 1 (fontified nil)) . -150) (149 . 151) (#(")" 0 1 (fontified nil)) . 149) (148 . 149) (135 . 137) (145 . 147) (#("(" 0 1 (fontified nil)) . -145) (135 . 146) (#(" " 0 1 (fontified t)) . -135) (undo-tree-id40 . -1) (#(" " 0 1 (fontified t)) . -136) (undo-tree-id41 . -1) 137 (133 . 137) (#("    " 0 4 (fontified nil)) . 132) (undo-tree-id42 . -2) (134 . 136) (134 . 135) (#(" " 0 1 (fontified t)) . -134) (undo-tree-id43 . -1) 135 (134 . 135) (#(" " 0 1 (fontified t)) . -134) (undo-tree-id44 . -1) (#(" " 0 1 (fontified t)) . -135) (undo-tree-id45 . -1) 136 (131 . 136) 102) nil (23706 32732 484558 402000) 0 nil]) ((#(" " 0 1 (fontified t)) . -134) (undo-tree-id46 . -1) (#(" " 0 1 (fontified t)) . -135) (undo-tree-id47 . -1) 136 (131 . 136) 113) nil (23706 32732 484593 417000) 0 nil]) ((#(" " 0 1 (fontified t)) . 103)) nil (23706 32732 484595 672000) 0 nil]) ((#(" " 0 1 (fontified t)) . 103)) nil (23706 32732 484597 38000) 0 nil]) ((195 . 203)) nil (23706 32732 484598 362000) 0 nil]) ((#("	" 0 1 (fontified t)) . 195)) nil (23706 32732 484599 506000) 0 nil]) ((#("            " 0 12 (fontified nil)) . -196) (undo-tree-id48 . 5) (195 . 196) 225 (t 23706 32562 469839 555000)) nil (23706 32732 484602 645000) 0 nil]) ((211 . 226) (203 . 207) (206 . 208) (#("{" 0 1 (fontified nil)) . -206) (206 . 207) (#("3:31 EST" 0 8 (fontified t)) . 206) (undo-tree-id26 . 8) (t 23706 32546 889889 562000)) nil (23706 32562 460105 561000) 0 nil] [nil ([nil ([nil nil ((111 . 112) (#(" " 0 1 (fontified t)) . 111) (undo-tree-id19 . 1) (t 23706 32537 36587 496000)) ((111 . 112) (#("=" 0 1 (fontified t)) . 111) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . 1)) (23706 32545 93586 858000) 0 nil]) ((46 . 51) (#("preact" 0 6 (fontified t face font-lock-string-face)) . -46) 110) ((46 . 52) (#("react" 0 5 (fontified t face font-lock-string-face)) . 46) (t 23706 32537 36587 496000)) (23706 32545 93825 423000) 0 nil]) ((111 . 112) (#("=" 0 1 (fontified t)) . 111) (undo-tree-id18 . 1) (t 23706 32495 273383 480000)) ((111 . 112) (#(":" 0 1 (fontified t)) . 111) (undo-tree-id24 . 1) (undo-tree-id25 . -1)) (23706 32545 388954 344000) 0 nil]) ((125 . 126) (#("1" 0 1 (fontified t face font-lock-string-face)) . 125) (undo-tree-id16 . 1) (t 23706 32467 713465 892000)) nil (23706 32545 819496 332000) 0 nil]) ((132 . 133)) nil (23706 32467 701745 872000) 0 nil]) ((110 . 112)) nil (23706 32467 701757 535000) 0 nil]) ((120 . 128) (119 . 121) (#("\"" 0 1 (fontified nil)) . -119) (112 . 120) (103 . 105) (109 . 111) (#("{" 0 1 (fontified nil)) . -109) (108 . 110) (103 . 108) (101 . 103) (#(" " 0 1 (fontified t)) . -101) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t)) . -102) (undo-tree-id13 . -1) (#(" " 0 1 (fontified t)) . -103) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t)) . -104) (undo-tree-id15 . -1) 105 (100 . 105) (t 23706 32346 633796 322000) 63) nil (23706 32467 701806 238000) 0 nil]) ((162 . 170)) nil (23706 32346 631205 57000) 0 nil]) ((#("	" 0 1 (fontified t)) . 162)) nil (23706 32346 631209 834000) 0 nil]) ((175 . 176) (#("." 0 1 (fontified t)) . -175) (undo-tree-id10 . -1) 176 (175 . 176)) nil (23706 32346 631217 579000) 0 nil]) ((#("/" 0 1 (fontified t)) . 176) (undo-tree-id11 . 1) (t 23706 32275 200630 61000)) nil (23706 32346 631221 68000) 0 nil]) ((#("	    " 0 5 (fontified nil)) . -163) (162 . 163) 179) nil (23706 32275 191772 258000) 0 nil]) ((179 . 180)) nil (23706 32275 191801 17000) 0 nil]) ((#("h" 0 1 (fontified t)) . -181) (undo-tree-id0 . -1) (undo-tree-id1 . 1) 182 (175 . 182) (172 . 175) (163 . 167) (166 . 168) (#("2" 0 1 (fontified t)) . -166) (undo-tree-id2 . -1) 167 (166 . 167) (#(" " 0 1 (fontified t)) . -166) (undo-tree-id3 . -1) 167 (165 . 167) (163 . 165) (#(" " 0 1 (fontified t)) . -163) (undo-tree-id4 . -1) (#(" " 0 1 (fontified t)) . -164) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t)) . -165) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -166) (undo-tree-id7 . -1) 167 (161 . 167) 155) nil (23706 32275 191866 517000) 0 nil]) ((151 . 156) (#("Hello, World!" 0 13 (fontified t)) . 151) (undo-tree-id8 . 13) (undo-tree-id9 . 12) (t 23706 32092 407603 705000)) nil (23706 32275 191888 603000) 0 nil]) nil nil (23706 32275 191893 162000) 0 nil] #7# 21680 306 nil)