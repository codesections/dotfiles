"d4896d27ae5a25b916a92c6c3d1c9c50bcb504cc"
#s(undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("                 " 0 17 (fontified nil)) . 193) (undo-tree-id585 . -11) (#("
" 0 1 (fontified t)) . -193) 167) nil (23730 11735 755563 220000) 0 nil]) ((#("                 " 0 17 (fontified nil)) . 130) (#("
" 0 1 (fontified t)) . -130) 129 (t 23727 50762 548829 756000)) nil (23730 11735 755569 712000) 0 nil] [nil nil ((149 . 150) (t 23727 50762 548829 756000)) ((#("
" 0 1 (fontified t)) . 149) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . 1)) (23728 55353 718194 476000) 0 nil]) ((919 . 924) (906 . 919) (905 . 907) (#("(" 0 1 (fontified nil)) . -905) (905 . 906) (904 . 905) 903) nil (23728 55353 718945 527000) 0 nil]) ((630 . 649) (#(" " 0 1 (fontified t)) . 630)) nil (23727 50762 532591 627000) 0 nil]) ((630 . 631) (#("                  " 0 17 (fontified nil) 17 18 (fontified nil)) . 630) (#("
" 0 1 (fontified t)) . -630) 580) nil (23727 50762 532601 42000) 0 nil]) ((#(" " 0 1 (fontified t)) . 649)) nil (23727 50762 532606 751000) 0 nil]) ((561 . 580) (#(" " 0 1 (fontified t)) . 561)) nil (23727 50762 532611 918000) 0 nil]) ((561 . 562) (#("                   " 0 19 (fontified nil)) . 561) (#("
" 0 1 (fontified t)) . -561) 518) nil (23727 50762 532618 605000) 0 nil]) ((#(" " 0 1 (fontified t)) . 518)) nil (23727 50762 532623 670000) 0 nil]) ((#(" " 0 1 (fontified t)) . 442)) nil (23727 50762 532628 289000) 0 nil]) ((#(" " 0 1 (fontified t)) . 390)) nil (23727 50762 532632 308000) 0 nil]) ((#("   
" 0 3 (fontified t) 3 4 (fontified t)) . 315) (undo-tree-id563 . -3) (undo-tree-id564 . 1) (undo-tree-id565 . -3) (undo-tree-id566 . -3) (undo-tree-id567 . -3) (undo-tree-id568 . -3) (undo-tree-id569 . -3) (undo-tree-id570 . -3) (undo-tree-id571 . 1) (undo-tree-id572 . 1) (undo-tree-id573 . 1) (undo-tree-id574 . 1) (undo-tree-id575 . -3) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . 2) (undo-tree-id581 . 2) 317 (t 23727 50720 740967 590000)) nil (23727 50762 532698 518000) 0 nil]) ((732 . 736) (731 . 733) (#("\"" 0 1 (fontified nil)) . -731) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (731 . 732) (#("'" 0 1 (fontified t)) . -731) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . 1) 732 (725 . 732) (#("style ,style" 0 12 (fontified t)) . 725) (undo-tree-id562 . 12) (t 23727 50690 526739 679000)) nil (23727 50720 716325 731000) 0 nil]) ((#("(define style \"

\")" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t face font-lock-string-face) 15 16 (fontified t face font-lock-string-face) 16 17 (fontified t face font-lock-string-face) 17 18 (fontified t face font-lock-string-face) 18 19 (fontified t)) . 318) (undo-tree-id489 . 3) (undo-tree-id490 . -16) (undo-tree-id491 . -17) (undo-tree-id492 . 2) (undo-tree-id493 . -17) (undo-tree-id494 . -17) (undo-tree-id495 . -17) (undo-tree-id496 . -16) (undo-tree-id497 . -16) (undo-tree-id498 . -17) (undo-tree-id499 . 3) (undo-tree-id500 . 3) (undo-tree-id501 . 3) (undo-tree-id502 . 3) (undo-tree-id503 . 3) (undo-tree-id504 . 3) (undo-tree-id505 . 3) (undo-tree-id506 . 3) (undo-tree-id507 . 3) (undo-tree-id508 . 3) (undo-tree-id509 . 3) (undo-tree-id510 . 3) (undo-tree-id511 . 3) (undo-tree-id512 . 3) (undo-tree-id513 . 3) (undo-tree-id514 . 3) (undo-tree-id515 . 3) (undo-tree-id516 . 3) (undo-tree-id517 . 3) (undo-tree-id518 . 3) (undo-tree-id519 . 3) (undo-tree-id520 . 3) (undo-tree-id521 . 3) (undo-tree-id522 . 3) (undo-tree-id523 . 3) (undo-tree-id524 . 3) (undo-tree-id525 . 3) (undo-tree-id526 . 3) (undo-tree-id527 . 3) (undo-tree-id528 . 3) (undo-tree-id529 . 3) (undo-tree-id530 . 3) (undo-tree-id531 . 3) (undo-tree-id532 . 3) (undo-tree-id533 . 3) (undo-tree-id534 . 3) (undo-tree-id535 . -16) (undo-tree-id536 . 3) (undo-tree-id537 . 3) (undo-tree-id538 . -16) (undo-tree-id539 . 3) (undo-tree-id540 . 3) (undo-tree-id541 . 3) (undo-tree-id542 . 3) (undo-tree-id543 . 3) (undo-tree-id544 . 19) (undo-tree-id545 . -14) (undo-tree-id546 . -15) (undo-tree-id547 . -14) (undo-tree-id548 . -15) (undo-tree-id549 . 19) (undo-tree-id550 . -1) (undo-tree-id551 . 18) (undo-tree-id552 . -18) (undo-tree-id553 . 1) (undo-tree-id554 . -19) (undo-tree-id555 . -14) (undo-tree-id556 . -15)) nil (23727 50690 509744 877000) 0 nil] [nil nil ((nil rear-nonsticky nil 334 . 335) (nil fontified nil 334 . 335) (334 . 335)) ((#(";" 0 1 (fontified nil rear-nonsticky nil face font-lock-string-face)) . 334) (undo-tree-id485 . 1) (undo-tree-id486 . 1) (undo-tree-id487 . 1) (undo-tree-id488 . 1) (nil rear-nonsticky t 334 . 335)) (23727 50679 867045 459000) 0 nil]) ((333 . 334) 318) nil (23727 50679 867430 579000) 0 nil]) ((202 . 204) (208 . 209) (#(")" 0 1 (fontified nil)) . -201) (168 . 185) (184 . 185) (#(")" 0 1 (fontified nil)) . -169) (168 . 170) (#("(" 0 1 (fontified nil)) . -168) (168 . 169) (#(";" 0 1 (rear-nonsticky t fontified nil face font-lock-comment-delimiter-face)) . 189) (190 . 191) (184 . 185) (#(":" 0 1 (fontified t)) . 183)) nil (23727 50679 867075 839000) 0 nil]) ((155 . 157) (164 . 165) (#(")" 0 1 (fontified nil)) . -154) (131 . 148) (137 . 138) (#(")" 0 1 (fontified nil)) . -132) (131 . 133) (#("(" 0 1 (fontified nil)) . -131) (131 . 132) (#(";" 0 1 (fontified nil face font-lock-comment-delimiter-face)) . 145) (146 . 147) (137 . 138) (#(":" 0 1 (fontified t)) . 136)) nil (23727 50679 867095 423000) 0 nil]) ((nil rear-nonsticky nil 168 . 169) (nil fontified nil 131 . 169) (131 . 169)) nil (23727 50679 867104 738000) 0 nil]) ((#("color: #0071F0;
text-decoration: none;" 0 38 (fontified t face font-lock-string-face)) . 254) (undo-tree-id473 . -37) (undo-tree-id474 . -37) (undo-tree-id475 . -37) (undo-tree-id476 . -37) (undo-tree-id477 . -37) (undo-tree-id478 . -37) 291) nil (23727 50679 867139 371000) 0 nil]) ((132 . 149) (#("                 " 0 17 (fontified nil)) . 131) (undo-tree-id479 . -17) (undo-tree-id480 . -17) (130 . 149) (129 . 131) (#("(" 0 1 (fontified nil)) . -129) (127 . 130) (116 . 127) (115 . 117) (#("(" 0 1 (fontified nil)) . -115) (115 . 116) (112 . 115) (106 . 112) (95 . 106) (94 . 96) (#("(" 0 1 (fontified nil)) . -94) (94 . 95) (93 . 94) 93) nil (23727 50679 867164 495000) 0 nil]) ((77 . 89) (#("../u" 0 4 (fontified t face font-lock-string-face)) . -77) (undo-tree-id481 . -4) (undo-tree-id482 . -4) 81 (78 . 81) (#("." 0 1 (fontified t face font-lock-string-face)) . -78) (undo-tree-id483 . -1) (undo-tree-id484 . -1) 79 (77 . 79) (76 . 78) (#("\"" 0 1 (fontified nil)) . -76) (76 . 77) (66 . 76)) nil (23727 50679 867192 222000) 0 nil]) ((44 . 53) (57 . 58) (#(")" 0 1 (fontified t)) . -43) 16) nil (23727 50679 867202 352000) 0 nil] [nil nil ((44 . 45) (#("
" 0 1 (fontified t)) . -44) 15) ((44 . 45) (#(" " 0 1 (fontified t)) . 44) (undo-tree-id472 . 1)) (23727 50609 689818 961000) 0 nil]) ((#("require " 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 45)) nil (23727 50609 690273 980000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 66) (#("(" 0 1 (fontified t)) . 45)) nil (23727 50609 689840 579000) 0 nil]) (69) nil (23727 50596 985456 903000) 0 nil]) ((#("()" 0 1 (fontified t) 1 2 (fontified t)) . 70) (undo-tree-id464 . -1) (undo-tree-id465 . -1) 71 (#("d" 0 1 (fontified t)) . -71) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#("e" 0 1 (fontified t)) . -72) (undo-tree-id468 . -1) (undo-tree-id469 . -1) 73 (72 . 73) (#("i" 0 1 (fontified t)) . -72) (undo-tree-id470 . -1) (undo-tree-id471 . -1) 73 (71 . 73) (70 . 72) (#("(" 0 1 (fontified nil)) . -70) (70 . 71) (t 23727 50574 403031 64000)) nil (23727 50596 985518 327000) 0 nil]) (70) nil (23727 50596 985532 102000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((79 . 80) (77 . 79) (#("/" 0 1 (fontified t face font-lock-string-face)) . -77) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -78) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 79 (77 . 79) (t 23727 50492 240105 700000)) ((#("//" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 77) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (77 . 79) (#(".." 0 2 (fontified nil face font-lock-string-face)) . 77) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (#("/" 0 1 (fontified t face font-lock-string-face)) . 79) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . 1) (undo-tree-id144 . 1) (undo-tree-id145 . 1) (undo-tree-id146 . 1) (undo-tree-id147 . 1) (undo-tree-id148 . 1) (undo-tree-id149 . 1) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . 1) (undo-tree-id154 . 1) (undo-tree-id155 . 1) (undo-tree-id156 . 1) (undo-tree-id157 . 1) (t 23727 50520 197799 15000)) (23727 50520 189454 674000) 0 nil] [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil nil ((#("                 " 0 17 (fontified nil)) . 129) (#("
" 0 1 (fontified t)) . -129) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 128 (t 23727 50318 69516 52000)) ((129 . 130) (129 . 146)) (23727 50482 239725 168000) 0 nil]) ((#("s" 0 1 (fontified t)) . 899) (t 23727 50304 905564 954000)) ((899 . 900) (t 23727 50318 69516 52000)) (23727 50482 240581 55000) 0 nil]) ((77 . 80) (t 23727 50219 794624 94000)) ((#("../" 0 3 (fontified t face font-lock-string-face)) . 77) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2)) (23727 50483 159207 320000) 0 nil]) ((892 . 903) (882 . 892)) ((#("
         " 0 1 (fontified t) 1 10 (fontified nil)) . 882) (undo-tree-id105 . -10) (undo-tree-id106 . -10) (undo-tree-id107 . -10) (undo-tree-id108 . -10) (undo-tree-id109 . -10) (undo-tree-id110 . -10) (undo-tree-id111 . -10) (#("Links_Style" 0 4 (fontified t) 4 5 (fontified t) 5 11 (fontified t)) . 892) (undo-tree-id112 . 1) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (undo-tree-id115 . 1) (undo-tree-id116 . -10) (undo-tree-id117 . -10) (undo-tree-id118 . -10) (undo-tree-id119 . -10) (undo-tree-id120 . 6) (undo-tree-id121 . 6) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . 7) (undo-tree-id126 . 7)) (23727 50483 469608 635000) 0 nil]) ((883 . 884) 879) ((#("
" 0 1 (fontified t)) . 883)) (23727 50483 947241 185000) 0 nil]) ((#("  
" 0 3 (fontified t)) . 417)) ((417 . 420)) (23727 50484 914371 830000) 0 nil]) ((#("  
" 0 3 (fontified t)) . 496) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 497) ((496 . 499)) (23727 50485 217625 724000) 0 nil]) ((498 . 501) (#(" " 0 1 (fontified t)) . 498)) ((498 . 499) (#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 498)) (23727 50486 168013 180000) 0 nil]) ((419 . 422) (#(" " 0 1 (fontified t)) . 419) (undo-tree-id3 . 1) (undo-tree-id5 . 1) (undo-tree-id7 . 1) (undo-tree-id9 . 1) (undo-tree-id11 . 1) (undo-tree-id13 . 1)) ((419 . 420) (#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 419)) (23727 50486 488974 20000) 0 nil]) ((364 . 367) (#(" " 0 1 (fontified t)) . 364) (undo-tree-id16 . 1) (undo-tree-id18 . 1)) ((364 . 365) (#("
  " 0 3 (fontified t)) . 364)) (23727 50487 343491 896000) 0 nil]) ((364 . 365) (#("   " 0 3 (fontified nil)) . 364) (undo-tree-id21 . 3) (undo-tree-id23 . 3) (undo-tree-id25 . 3) (undo-tree-id27 . 3) (undo-tree-id29 . 3) (undo-tree-id31 . 3) (undo-tree-id33 . 3) (undo-tree-id35 . 3) (undo-tree-id37 . 3) (undo-tree-id39 . 3) (#("
" 0 1 (fontified t)) . -364) (undo-tree-id41 . -1) (undo-tree-id43 . -1) 293) ((364 . 365) (364 . 367) (#(" " 0 1 (fontified t)) . 364) (undo-tree-id127 . 1)) (23727 50487 840605 657000) 0 nil]) ((#("
" 0 1 (fontified t)) . 293) (undo-tree-id44 . 1) (undo-tree-id46 . 1) (undo-tree-id48 . 1) (undo-tree-id50 . 1) (undo-tree-id52 . 1) (undo-tree-id54 . 1) (undo-tree-id56 . 1) (undo-tree-id58 . 1) (undo-tree-id60 . 1)) ((293 . 294)) (23727 50488 799724 642000) 0 nil]) ((#("   
" 0 3 (fontified t) 3 4 (fontified t)) . 293) (undo-tree-id61 . -3) (undo-tree-id62 . 1) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id67 . 1) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id72 . 1) (undo-tree-id74 . 1) 295) ((293 . 297)) (23727 50563 90513 967000) 0 nil]) ((#("(define style )" 0 1 (fontified t) 1 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 13 (fontified t face font-lock-variable-name-face) 13 14 (fontified t) 14 15 (fontified t)) . 296) (undo-tree-id75 . -14) (undo-tree-id76 . 1) (undo-tree-id77 . -14) (undo-tree-id78 . -14) (undo-tree-id79 . -14) (undo-tree-id80 . -14) (undo-tree-id81 . -14) 310) ((296 . 311)) (23727 50563 490319 312000) 0 nil]) ((#("\"
color: #0071F0;
text-decoration: none;\"" 0 41 (fontified t face font-lock-string-face)) . 310) (undo-tree-id82 . -2) (undo-tree-id83 . 1) (undo-tree-id84 . -2) (undo-tree-id85 . -39) (undo-tree-id86 . -39)) ((310 . 351)) (23727 50563 985892 271000) 0 nil]) ((#("
" 0 1 (fontified t)) . -210) (undo-tree-id87 . -1) (undo-tree-id88 . -1) 211 (210 . 211) 207) ((#("
" 0 1 (fontified nil)) . 210) (210 . 211)) (23727 50564 481719 482000) 0 nil]) ((#("                 " 0 17 (fontified nil)) . 207) (#("
" 0 1 (fontified t)) . -207) 182) ((207 . 208) (207 . 224)) (23727 50567 414692 348000) 0 nil]) ((83 . 86) (#("k" 0 1 (fontified t face font-lock-string-face)) . -83) (undo-tree-id89 . -1) (undo-tree-id90 . -1) 84 (78 . 84) (#("t" 0 1 (fontified t face font-lock-string-face)) . -78) (undo-tree-id91 . -1) (undo-tree-id92 . -1) 79 (77 . 79) (#("u" 0 1 (fontified t face font-lock-string-face)) . -77) (undo-tree-id93 . -1) (undo-tree-id94 . -1) 78 (77 . 78) (76 . 78) (#("\"" 0 1 (fontified nil)) . -76) (76 . 77) (66 . 76)) ((#("
         " 0 1 (fontified t) 1 10 (fontified nil)) . 66) (undo-tree-id158 . -10) (undo-tree-id159 . -10) (undo-tree-id160 . -10) (undo-tree-id161 . -10) (#("\"" 0 1 (fontified nil)) . 76) (76 . 77) (#("\"\"" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 76) (undo-tree-id162 . 1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . 1) (undo-tree-id167 . 1) (undo-tree-id168 . 1) (undo-tree-id169 . 1) (undo-tree-id170 . -1) (#("u" 0 1 (fontified nil face font-lock-string-face)) . 77) (77 . 78) (#("ut" 0 1 (fontified nil face font-lock-string-face) 1 2 (fontified nil face font-lock-string-face)) . 77) (undo-tree-id171 . 2) (undo-tree-id172 . 2) (undo-tree-id173 . 2) (undo-tree-id174 . 2) (undo-tree-id175 . 2) (undo-tree-id176 . 2) (undo-tree-id177 . -1) (78 . 79) (#("tils.k" 0 5 (fontified nil face font-lock-string-face) 5 6 (fontified nil face font-lock-string-face)) . 78) (undo-tree-id178 . -4) (83 . 84) (#("rkt" 0 3 (fontified t face font-lock-string-face)) . 83)) (23727 50568 35260 776000) 0 nil]) ((#("require " 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t)) . 53)) ((53 . 61)) (23727 50568 406303 508000) 0 nil]) ((#(")" 0 1 (fontified nil)) . 74) (#("(" 0 1 (fontified t)) . -53) (undo-tree-id95 . -1) (undo-tree-id96 . -1) 54) ((53 . 54) (74 . 75)) (23727 50568 766162 642000) 0 nil]) ((44 . 53) (67 . 68) (#(")" 0 1 (fontified t)) . -43) 17) ((43 . 44) (#(")" 0 1 (fontified nil)) . 67) (undo-tree-id179 . 1) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (undo-tree-id182 . 1) (undo-tree-id183 . 1) (undo-tree-id184 . 1) (undo-tree-id185 . 1) (#("         " 0 9 (fontified t)) . 44)) (23727 50569 48372 6000) 0 nil]) ((178 . 180) (184 . 185) (#(")" 0 1 (fontified nil)) . -177) (144 . 161) (160 . 161) (#(")" 0 1 (fontified nil)) . -145) (144 . 146) (#("(" 0 1 (fontified nil)) . -144) (144 . 145) (#(";" 0 1 (rear-nonsticky t fontified nil face font-lock-comment-delimiter-face)) . 165) (166 . 167) (160 . 161) (#(":" 0 1 (fontified t)) . 159)) ((159 . 160) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 160) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 166) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (165 . 166) (#("(" 0 1 (fontified nil)) . 144) (144 . 145) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 144) (undo-tree-id188 . -1) (145 . 146) (#(")" 0 1 (fontified nil)) . 160) (#("                 " 0 17 (fontified nil)) . 144) (undo-tree-id189 . -17) (177 . 178) (#(")" 0 1 (fontified nil)) . 184) (undo-tree-id190 . -1) (#(". " 0 2 (fontified t)) . 178)) (23727 50569 336084 984000) 0 nil]) ((131 . 133) (140 . 141) (#(")" 0 1 (fontified nil)) . -130) (107 . 124) (113 . 114) (#(")" 0 1 (fontified nil)) . -108) (107 . 109) (#("(" 0 1 (fontified nil)) . -107) (107 . 108) (#(";" 0 1 (fontified nil face font-lock-comment-delimiter-face)) . 121) (122 . 123) (113 . 114) (#(":" 0 1 (fontified t)) . 112)) ((112 . 113) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 113) (undo-tree-id191 . -1) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 122) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (121 . 122) (#("(" 0 1 (fontified nil)) . 107) (107 . 108) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 107) (undo-tree-id194 . 2) (undo-tree-id195 . -1) (108 . 109) (#(")" 0 1 (fontified nil)) . 113) (#("                 " 0 17 (fontified nil)) . 107) (undo-tree-id196 . -17) (130 . 131) (#(")" 0 1 (fontified nil)) . 140) (undo-tree-id197 . -1) (#(". " 0 2 (fontified t)) . 131) (undo-tree-id198 . -2)) (23727 50569 643119 973000) 0 nil]) ((nil rear-nonsticky nil 144 . 145) (nil fontified nil 107 . 145) (107 . 145)) ((#("color: #0071F0;
text-decoration: none;" 0 5 (fontified nil) 5 6 (fontified nil) 6 7 (fontified nil) 7 14 (fontified nil) 14 15 (fontified nil face font-lock-comment-delimiter-face) 15 16 (fontified nil face font-lock-comment-face) 16 31 (fontified nil) 31 32 (fontified nil) 32 33 (fontified nil) 33 37 (fontified nil) 37 38 (rear-nonsticky nil fontified nil face font-lock-comment-delimiter-face)) . 107) (undo-tree-id199 . -37) (undo-tree-id200 . 38) (undo-tree-id201 . -5) (undo-tree-id202 . -5) (undo-tree-id203 . -38) (undo-tree-id204 . -38) (undo-tree-id205 . -16) (undo-tree-id206 . -16) (undo-tree-id207 . -15) (undo-tree-id208 . -15) (undo-tree-id209 . 22) (undo-tree-id210 . 22) (undo-tree-id211 . -7) (undo-tree-id212 . -7) (undo-tree-id213 . 7) (undo-tree-id214 . 33) (undo-tree-id215 . 7) (nil fontified t 122 . 123) (nil fontified t 121 . 122) (nil fontified t 114 . 121) (nil fontified t 113 . 114) (nil fontified t 112 . 113) (nil fontified t 107 . 112) (nil rear-nonsticky t 144 . 145)) (23727 50570 307257 745000) 0 nil]) ((108 . 125) (#("                 " 0 17 (fontified nil)) . 107) (undo-tree-id97 . -17) (undo-tree-id98 . -17) (106 . 125) (105 . 107) (#("(" 0 1 (fontified nil)) . -105) (104 . 106) (92 . 104) (91 . 93) (#("(" 0 1 (fontified nil)) . -91) (91 . 92) (88 . 91) (85 . 88) (71 . 85) (70 . 72) (#("(" 0 1 (fontified nil)) . -70) (70 . 71) (t 23726 1893 621224 869000)) ((#("(" 0 1 (fontified nil)) . 70) (70 . 71) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 70) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . 1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . 1) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (#("define Link_St" 0 6 (fontified nil face font-lock-keyword-face) 6 7 (fontified nil) 7 14 (fontified nil face font-lock-variable-name-face)) . 71) (undo-tree-id251 . -14) (undo-tree-id252 . -14) (undo-tree-id253 . -14) (undo-tree-id254 . -14) (undo-tree-id255 . -14) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -14) (undo-tree-id262 . -14) (undo-tree-id263 . -14) (undo-tree-id264 . -14) (undo-tree-id265 . -14) (undo-tree-id266 . -14) (undo-tree-id267 . -14) (undo-tree-id268 . -14) (undo-tree-id269 . -14) (undo-tree-id270 . -14) (undo-tree-id271 . -14) (undo-tree-id272 . -14) (undo-tree-id273 . -14) (undo-tree-id274 . -14) (#("yle" 0 3 (fontified nil face font-lock-variable-name-face)) . 85) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (#("
  " 0 1 (fontified t) 1 3 (fontified nil)) . 88) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (#("(" 0 1 (fontified nil)) . 91) (91 . 92) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 91) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . 1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . 1) (undo-tree-id354 . 1) (undo-tree-id355 . 1) (undo-tree-id356 . 1) (undo-tree-id357 . 1) (#("style 'Link " 0 6 (fontified nil) 6 11 (fontified nil face racket-selfeval-face) 11 12 (fontified nil)) . 92) (undo-tree-id358 . -12) (undo-tree-id359 . -12) (undo-tree-id360 . -12) (undo-tree-id361 . -12) (undo-tree-id362 . -12) (undo-tree-id363 . -12) (undo-tree-id364 . -12) (undo-tree-id365 . -12) (undo-tree-id366 . -12) (undo-tree-id367 . -12) (undo-tree-id368 . -12) (undo-tree-id369 . -12) (undo-tree-id370 . -12) (undo-tree-id371 . -12) (undo-tree-id372 . -12) (undo-tree-id373 . -12) (undo-tree-id374 . -12) (undo-tree-id375 . -12) (undo-tree-id376 . -12) (undo-tree-id377 . -12) (undo-tree-id378 . -12) (undo-tree-id379 . -12) (undo-tree-id380 . -12) (undo-tree-id381 . -12) (#("`(" 0 1 (fontified nil) 1 2 (fontified nil)) . 104) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (105 . 106) (#("()" 0 1 (fontified nil) 1 2 (fontified nil)) . 105) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . 1) (undo-tree-id412 . 2) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . 1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . 1) (undo-tree-id436 . 1) (undo-tree-id437 . 1) (undo-tree-id438 . 1) (undo-tree-id439 . 1) (#("
                 
" 0 1 (fontified t) 1 18 (fontified nil) 18 19 (fontified nil)) . 106) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . 1) (undo-tree-id444 . -18) (undo-tree-id445 . -18) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . 1) (undo-tree-id455 . 1) (undo-tree-id456 . 1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . 1) (undo-tree-id460 . 1) (undo-tree-id461 . 1) (undo-tree-id462 . 1) (undo-tree-id463 . 1) (107 . 124) (#("                 " 0 17 (fontified t)) . 108)) (23727 50570 643661 965000) 0 nil]) (70) (nil undo-tree-canary) (23727 50571 25302 144000) 0 nil]) nil nil (23727 50572 74604 615000) 0 nil] #1# 7849 57 nil)